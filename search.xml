<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自省</title>
      <link href="/yyds/81231d2a.html"/>
      <url>/yyds/81231d2a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>看完《我的青铜时代》有关罗翔老师的一集，记录一些自我思考的想法又重新出现在我的脑海中，那么干脆就开始做吧。仅仅作为一点反省自身、剖析自我的工具罢了。</p></blockquote><p>&emsp;&emsp;其中有不少触动我的地方，自我剖析、对莫名优越感的警惕、一个人生活得“好”的标准当如何、如何慢慢从“知道”跨越到“做到”，这些都是值得花费时间和精力去思考、去寻找答案的问题。</p><p>&emsp;&emsp;这些问题对于目前的我来说，暂时都没有答案，甚至有些我从来都还没有想过。或者可能偶尔有一些想法出现，却又很快溜走。生活中的诱惑和世界的丰富分散掉我的注意力，有时用焦虑让我无法思考，但更多是自己对自己的麻醉。</p><p>&emsp;&emsp;<strong>警惕优越感</strong>。优越感来自于比身边较多同龄人更好的学校，大学里更高的分数，比父母更高的学历，自认为较好的外表。表现于偶尔的高谈阔论，偶尔的不屑与不耐烦，偶尔的虚伪自谦。有时事后会鄙夷自己的表现、自我反省，但似乎总是起不到想象中的作用。有时候这种莫名奇妙的优越感让我感到羞愧，因为我知道很多东西并不是我本身就有的，我也有同样无知的时候，我在人前的优越感就仿佛是对昨天的自己的嘲讽。这需要时刻警惕，拥有自省的想法和能力是维持本我的锚。</p><p>&emsp;&emsp;<strong>”好”的标准</strong>。说起来，似乎生活十分复杂，但仔细想想，大多数自我纠结的矛盾点，它们的根源其实还是来自关于“好”的标准。正如罗翔老师所说，“我们总是活在他人的眼光中，他人的评价中，他人的注视中。”因此忠于自我免不了有一些虚荣的、违心的阻碍，如何找到一个自己的“好”的标准，从而尽量避免与别人攀比，避免被别人攀比，是需要去经历和探索的。到底什么是好呢？对于现在的我来说，是拥有一个健壮的身体、顺利的学业、美满的家庭，以及和谐的感情。这些看似简单的词组，有时候感觉我其实已经拥有了，但总是想要更多，毕竟人是向前发展的，我不可能一直停留在原地，这就产生了各种各样的焦虑。有来自外界的，有来自自身的，听闻朋友们各自有着自己奋斗的目标，为他们高兴的同时也不免对自己有些焦急，佛系的表面下是深深的无奈。有时候我感觉自己是在被推着前进，看起来挺好了，但还是不够，避免被淘汰、争取更好是这些年来不变的主题之一。感觉有些累，但是不能停下，停下是更令人疲惫的迷茫。</p><blockquote><p>“对于不可控的的事情，我们保持乐观；对于可控的事情，我们保持谨慎。”        —— 爱比克泰德</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《我的青铜时代》 </tag>
            
            <tag> 自省 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX常见错误信息</title>
      <link href="/yyds/be1c3aa6.html"/>
      <url>/yyds/be1c3aa6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Reference：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/info/lshort/chinese/lshort-zh-cn.pdf">《一份(不太)简短的LaTeX介绍》</a></p><p>放在这里便于查阅。</p></blockquote><ul><li><font color="red">! Undefined control sequences.</font><blockquote><p>使用了未定义的命令。拼写错误是原因之一，如把 \LaTeX 写作 \Latex 这样。也有可能是<br>没有调用某个宏包，但用了该宏包定义的命令。</p></blockquote></li><li><font color="red">! LaTeX error: Environment ... undefined.</font><blockquote><p>使用了未定义的环境。</p></blockquote></li><li><font color="red">! Missing $ inserted.</font><blockquote><p>缺少数学环境的符号 $。多由于将数学符号用在公式之外而导致。</p></blockquote></li><li><font color="red">Runaway argument? </font><font color="red">! Paragraph ended before ... was complete.</font></li><li><font color="red">! File ended while scanning definition/use of ...</font><blockquote><p>这两个错误主要是由于漏写了包裹命令参数的花括号，导致识别参数时出现错误。许多编<br>辑器的括号配对功能有助于检查和消除这类错误。<br>这类错误还有可能是由于前一次编译中断导致 .aux 等辅助文件不完整，再次编译读入不<br>完整的文件产生错误。解决办法是删除辅助文件并重新编译。</p></blockquote></li><li><font color="red">! Extra alignment tab has been changed to \cr.</font><font color="red">! Misplaced \noalign.</font><blockquote><p>两个错误信息都与表格有关。</p><ul><li><p>前者的字面意义是“一行中使用的列分隔符<code>&amp;</code>太多”，有时可能确实是<code>&amp;</code> 的个数和列<br>格式不匹配，但多数情况是漏掉了行尾的 <code>\\</code> 命令。</p></li><li><p>后者常出现于漏掉了行尾的 <code>\\</code> 命令而接着使用 <code>\hline</code> 命令画横线的时候。</p></li></ul></blockquote></li><li><font color="red">! LaTeX Error: Lonely \item--perhaps a missing list environment.</font></li><li><font color="red"> ! LaTeX Error: Something's wrong--perhaps a missing \item.</font><blockquote><p>两个错误信息都与列表环境和 <code>\item</code> 命令有关。前者意味着在没有使用列表环境的情况下<br>用了 <code>\item</code>；后者则相反，是在列表环境中漏了 <code>\item</code>。</p></blockquote></li><li><font color="red">! I can't find file `...'.</font></li><li><font color="red">! LaTeX Error: File `...' not found.</font><blockquote><p>两个错误都意味着缺少文件。</p><ul><li>如果使用 <code>\input</code> 或者 <code>\include</code> 命令添加文件，出现上述错误的原因当然是文件不<br>存在或者文件名不对；</li><li>如果错误提示里的文件名带 <code>.cls</code> 或者 <code>.sty</code> 扩展名，那么很显然，是因为没有安装<br>所需的宏包或文档类。</li></ul></blockquote></li><li><font color="red">! LaTeX Error: Missing \begin{document}.</font><blockquote><p>字面上是缺少 <code>\begin&#123;document&#125;</code>，实际上往往是由于在 <code>\begin&#123;document&#125;</code> 之前（导言<br>区）输入了文字或某些命令。</p></blockquote></li><li><font color="red">! LaTeX Error: Can be used only in preamble.</font><blockquote><p>与上一条相反，由于将必须用于导言区的命令在 <code>\begin&#123;document&#125;</code> 之后使用而产生。</p></blockquote></li><li><font color="red">! LaTeX Error: \ begin{...} on input line ... ended by \ end{...}.</font><blockquote><p>环境首尾不匹配。比如 <code>\begin&#123;enumerate&#125;</code> 用了 <code>\end&#123;itemize&#125;</code> 结尾。或者也可能是由<br>于漏写了 <code>\begin</code> 或者 <code>\end</code> 命令。</p></blockquote></li><li><font color="red">! LaTeX Error: Option clash for package `...'.</font><blockquote><p>以不同选项重复调用宏包造成冲突。有可能是因为其它宏包内部事先调用了这个宏包，用<br>户再次带选项调用而导致冲突。解决问题的办法是去掉重复调用的宏包。如果宏包允许的<br>话，尽量使用其定义的命令改变设置，减少宏包选项的使用。</p></blockquote></li><li><font color="red">! LaTeX Error: Command ... already defined,or name \end... illegal ...</font><blockquote><p>使用 <code>\newcommand</code>或 <code>\newenvironment</code> 定义已有的命令/环境时产生的错误。如果自己确<br>实作了定义，可考虑用 <code>\renewcommand</code> 或 <code>\renewenvironment</code> 定义；如果是宏包定义的<br>命令产生了这个错误，则属于隐性的宏包冲突。<br>相比之前的 “Option Clash”，隐性宏包冲突是更难以解决的问题，对各种宏包不熟悉的用<br>户，尤其是使用模板的用户而言，往往难以下手。用户可尝试查找引起冲突的宏包的帮助<br>文档。详尽的手册里通常会告知用户这个宏包应当在某个宏包的前面/后面调用，或者不能<br>与某个宏包一起调用。如果是模板调用了大量宏包导致冲突，可联系模板的作者解决。</p></blockquote></li><li><font color="red">! LaTeX Error: Unknown option `...' for package `...'.</font><blockquote><p>调用宏包时指定了不能被其识别的选项。此时应该查找宏包的帮助文档来解决问题。</p></blockquote></li><li><font color="red">! Package `...' error: ...</font><blockquote><p>宏包或文档类自定义的错误，由于不正确地使用宏包里的命令而导致。此时应该查找宏包<br>的帮助文档来解决问题。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX符号表</title>
      <link href="/yyds/671b85fb.html"/>
      <url>/yyds/671b85fb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Reference：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/info/lshort/chinese/lshort-zh-cn.pdf">《一份(不太)简短的LaTeX介绍》</a></p><p>注意事项：</p><ol><li>蓝色的命令依赖 amsmath 宏包（非 amssymb 宏包）</li><li>带有角标 ℓ 的符号命令依赖 latexsym 宏包</li></ol></blockquote><h3 id="1-LaTeX-普通符号"><a href="#1-LaTeX-普通符号" class="headerlink" title="1. $\LaTeX$ 普通符号"></a>1. $\LaTeX$ 普通符号</h3><p><img src="https://i.loli.net/2021/08/22/ueatB9dhGknJxUR.png" alt="文本、数学模式通用符号"></p><p><img src="https://i.loli.net/2021/08/22/wZXYIi3vaneBDuM.png" alt="希腊字母"></p><p><img src="/yyds/671b85fb/二元关系符.png" alt="二元关系符"></p><p><img src="https://i.loli.net/2021/08/22/gXWbLyxNdIVJQjw.png" alt="二元运算符"></p><p><img src="https://i.loli.net/2021/08/22/4IRsjF1EBZMNDAS.png" alt="巨算符"></p><p><img src="https://i.loli.net/2021/08/22/i26y8r1DfkI4XE5.png" alt="数学重音符"></p><p><img src="https://i.loli.net/2021/08/22/AezcB52SbkPpOlG.png" alt="箭头"></p><p><img src="https://i.loli.net/2021/08/22/yP4jWd7OGVRzcpJ.png" alt="作为重音的箭头符号"></p><p><img src="https://i.loli.net/2021/08/22/B48g6QlzCPNMkad.png" alt="定界符"></p><p><img src="https://i.loli.net/2021/08/22/SX1fPncruADJYkq.png" alt="用于行间公式的大定界符"></p><p><img src="https://i.loli.net/2021/08/22/JiPQtcG49oqzIN2.png" alt="其它符号"></p><h3 id="2-mathcal-AMS-符号"><a href="#2-mathcal-AMS-符号" class="headerlink" title="2. $\mathcal{AMS}$ 符号"></a>2. $\mathcal{AMS}$ 符号</h3><blockquote><p>本小节所有符号依赖 amssymb 宏包</p></blockquote><p><img src="https://i.loli.net/2021/08/22/TeYbwCfDPpOk5RJ.png" alt="AMS希腊字母和希伯来字母"></p><p><img src="https://i.loli.net/2021/08/22/YC1UpDd9qc4fVXr.png" alt="AMS二元关系符"></p><p><img src="https://i.loli.net/2021/08/22/h2lYCRMqnobeySd.png" alt="AMS二元运算符"></p><p><img src="https://i.loli.net/2021/08/22/6WoGqTQpDLzjHAC.png" alt="AMS箭头"></p><p><img src="https://i.loli.net/2021/08/22/u9nHIlsfzChqBW2.png" alt="AMS反义二元关系符和箭头"></p><p><img src="https://i.loli.net/2021/08/22/h2T63BwGbIOCzlY.png" alt="AMS定界符"></p><p><img src="https://i.loli.net/2021/08/22/vId7nFjUgHma5uz.png" alt="AMS其它符号"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬取网页学习笔记</title>
      <link href="/yyds/69a9b431.html"/>
      <url>/yyds/69a9b431.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文仅涉及一些网页爬取工具的简单应用。利用python的<code>urllib、requests、BeautifulSoup</code>等库尝试实现了简单的爬取百度图片、必应图片/每日壁纸、豆瓣评论等功能。</p></blockquote><h2 id="一、工具库介绍"><a href="#一、工具库介绍" class="headerlink" title="一、工具库介绍"></a>一、工具库介绍</h2><h3 id="1-urllib-包"><a href="#1-urllib-包" class="headerlink" title="1. urllib 包"></a>1. urllib 包</h3><ul><li>介绍：Python urllib 库用于操作网页 URL，并对网页的内容进行抓取处理</li><li><a href="https://docs.python.org/zh-cn/3/library/urllib.html">urllib—-URL处理模块</a></li><li>模块：<ul><li><strong>urllib.request</strong> - 打开和读取 URL。</li><li><strong>urllib.error</strong> - 包含 urllib.request 抛出的异常。</li><li><strong>urllib.parse</strong> - 解析 URL。</li><li><strong>urllib.robotparser</strong> - 解析 robots.txt 文件。</li></ul></li></ul><h3 id="2-requests-库"><a href="#2-requests-库" class="headerlink" title="2. requests 库"></a>2. requests 库</h3><ul><li>介绍：基于urllib，采⽤Apache2 Licensed开源协议的 HTTP 库</li><li><a href="https://docs.python-requests.org/zh_CN/latest/">官方文档</a></li><li>主要有7个方法<ul><li>Requests库主要有7个方法，分别是<ol><li>requests.request()：构造一个请求，支撑以下各方法的基础方法</li><li>requests.get()：获取HTML网页的主要方法，对应于HTTP的GET</li><li>requests.head()：获取HTML网页头信息的方法，对应于HTTP的HEAD</li><li>requests.post()：向HTML网页提交POST请求的方法，对应于HTTP的POST</li><li>requests.put()：向HTML网页提交PUT请求的方法，对应于HTTP的PUT</li><li>requests.patch()：向HTML网页提交局部修改请求，对应于HTTP的PATCH</li><li>requests.delete()：向HTML页面提交删除请求，对应于HTTP的DELETE</li></ol></li></ul></li></ul><h3 id="3-BeautifulSoup"><a href="#3-BeautifulSoup" class="headerlink" title="3. BeautifulSoup"></a>3. BeautifulSoup</h3><ul><li>介绍：提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据。</li><li><a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/">文档</a></li></ul><h2 id="二、爬取百度-必应图片"><a href="#二、爬取百度-必应图片" class="headerlink" title="二、爬取百度/必应图片"></a>二、爬取百度/必应图片</h2><h3 id="1-分析下载链接"><a href="#1-分析下载链接" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p>打开百度图片，输入关键词如”风景壁纸”，开发者工具-&gt;Network-&gt;抓包工具XHR。鼠标向下滑动，可得到图片的请求报文</p><p><img src="https://i.loli.net/2021/08/05/rYCIMVQE3d1JRzp.png" alt="image-20210805205941341"></p><ul><li>这里<code>https://image.baidu.com/search/acjson?</code>是我们需要的链接，问号后面的都是对应的参数信息</li></ul></li><li><p>同时可得到浏览器的请求报文头部信息（<code>Request Headers</code>），可用于模拟浏览器的请求操作，以应对网站的安全验证。这里百度图片仅验证<code>User-Agent</code></p><p><img src="https://i.loli.net/2021/08/05/asr6Dt3KpUu41VJ.png" alt="image-20210805210255889"></p></li></ul><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">import</span> urllib<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>定义类并初始化</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GetBaiduImage</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> keyword<span class="token punctuation">,</span> page<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>path <span class="token operator">=</span> path        self<span class="token punctuation">.</span>keyword <span class="token operator">=</span> keyword        self<span class="token punctuation">.</span>page <span class="token operator">=</span> page        self<span class="token punctuation">.</span>pn <span class="token operator">=</span> <span class="token number">1</span>                  <span class="token comment"># pn代表从第几张图片开始获取，百度图片下滑时默认一次性显示30张</span>        <span class="token comment"># self.first = 1              # 代表从第几张图片开始获取，必应图片下滑时默认一次性显示30张</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><ul><li>注意：这里的<code>param</code> 就是刚刚抓包得到链接的参数部分，<strong>一个都不能少</strong></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    param <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'tn'</span><span class="token punctuation">:</span> <span class="token string">'resultjson_com'</span><span class="token punctuation">,</span>        <span class="token string">'logid'</span><span class="token punctuation">:</span> <span class="token string">' 7517080705015306512'</span><span class="token punctuation">,</span>        <span class="token string">'ipn'</span><span class="token punctuation">:</span> <span class="token string">'rj'</span><span class="token punctuation">,</span>        <span class="token string">'ct'</span><span class="token punctuation">:</span> <span class="token string">'201326592'</span><span class="token punctuation">,</span>        <span class="token string">'is'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'fp'</span><span class="token punctuation">:</span> <span class="token string">'result'</span><span class="token punctuation">,</span>        <span class="token string">'queryWord'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>keyword<span class="token punctuation">,</span>        <span class="token string">'cl'</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>        <span class="token string">'lm'</span><span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>        <span class="token string">'ie'</span><span class="token punctuation">:</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span>        <span class="token string">'oe'</span><span class="token punctuation">:</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span>        <span class="token string">'adpicid'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'st'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'z'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'ic'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'hd'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'latest'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'copyright'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'word'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>keyword<span class="token punctuation">,</span>        <span class="token string">'s'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'se'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'tab'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'width'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'face'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'istype'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'qc'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'nc'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        <span class="token string">'fr'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'expermode'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'force'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'cg'</span><span class="token punctuation">:</span> <span class="token string">'star'</span><span class="token punctuation">,</span>        <span class="token string">'pn'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>pn<span class="token punctuation">,</span>        <span class="token string">'rn'</span><span class="token punctuation">:</span> <span class="token string">'30'</span><span class="token punctuation">,</span>        <span class="token string">'gsm'</span><span class="token punctuation">:</span> <span class="token string">'1e'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token comment"># =============================================================================</span><span class="token comment">#         # first 参数控制从第 first 张图开始（与百度图片的 pn 参数类似）</span><span class="token comment">#         param = &#123;</span><span class="token comment">#             'q': self.keyword,</span><span class="token comment">#             'first': self.first,</span><span class="token comment">#             'count': '30',</span><span class="token comment">#             'cw': '1177',</span><span class="token comment">#             'ch': '593',</span><span class="token comment">#             'relp': '35',</span><span class="token comment">#             'tsc': 'ImageBasicHover',</span><span class="token comment">#             'datsrc': 'I',</span><span class="token comment">#             'layout': 'RowBased_Landscape',</span><span class="token comment">#             'mmasync': '1',</span><span class="token comment">#             'dgState': '',</span><span class="token comment">#             'IG': '9D7CBFCB39434C9583EA8186FB044DAA',</span><span class="token comment">#             'SFX': '3',</span><span class="token comment">#             'iid': 'images.5571'</span><span class="token comment">#             &#125;</span><span class="token comment"># =============================================================================</span>    header <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        html_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">,</span> params<span class="token operator">=</span>param<span class="token punctuation">)</span>        html_res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_res<span class="token punctuation">.</span>apparent_encoding        html_res<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># html_res是响应response,text方法返回字符串形式的html,而content方法是直接拉取得到的字节类型数据,还需要手动解码为字符串</span>        <span class="token comment"># 当text()显示不正常时使用content.decoding('utf-8/gbk/gbk2312')</span>        html_text <span class="token operator">=</span> html_res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>分析拉取到的html文本（变量<code>html</code>）并获取图片的下载链接</p><ul><li>分析发现<code>thumbURL</code>对应的就是图片下载链接</li></ul><p><img src="https://i.loli.net/2021/08/05/IvE8ew5krWlHF2V.png" alt="image-20210805212258112"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetImageUrls</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    html <span class="token operator">=</span> self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'test.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token comment"># urls = re.findall('murl&amp;quot;:&amp;quot;(.*?)&amp;quot;', html, re.S)     # 必应图片</span>        urls <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"thumbURL":"(.*?)"'</span><span class="token punctuation">,</span> html<span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>     <span class="token comment"># 百度图片</span>    <span class="token keyword">return</span> urls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Download</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           img_urls <span class="token operator">=</span> self<span class="token punctuation">.</span>GetImageUrls<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> img_url <span class="token keyword">in</span> img_urls<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>img_url<span class="token punctuation">,</span> path<span class="token operator">+</span><span class="token string">'%s.jpg'</span><span class="token operator">%</span>name<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"下载失败！"</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功下载第%s张图片'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                name <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># 下载下一页</span>        self<span class="token punctuation">.</span>pn <span class="token operator">+=</span> <span class="token number">29</span>   <span class="token comment"># 百度图片</span>        <span class="token comment"># self.first += 29# 必应图片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://image.baidu.com/search/acjson?'</span>    path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/百度图片/'</span>    keyword <span class="token operator">=</span> <span class="token string">'风景壁纸'</span>            <span class="token comment"># 想要搜索的图片</span>    page <span class="token operator">=</span> <span class="token string">'2'</span>                     <span class="token comment"># 想要爬取几页</span>    imgobj <span class="token operator">=</span> GetBaiduImage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> keyword<span class="token punctuation">,</span> page<span class="token punctuation">)</span>    imgobj<span class="token punctuation">.</span>Download<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-缺陷"><a href="#3-缺陷" class="headerlink" title="3. 缺陷"></a>3. 缺陷</h3><ul><li>对于爬取必应图片，将上面的注释取消，并注释对应部分即可</li><li>百度图片这种方法只能爬取缩略图</li><li>必应图片可爬取高清大图，但每隔几张就会爬取失败。对应代码中“下载失败”的异常处理</li></ul><h3 id="4-源代码"><a href="#4-源代码" class="headerlink" title="4. 源代码"></a>4. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBaiduImage.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBaiduImage.py</a></li></ul><h2 id="三、爬取必应的每日壁纸"><a href="#三、爬取必应的每日壁纸" class="headerlink" title="三、爬取必应的每日壁纸"></a>三、爬取必应的每日壁纸</h2><blockquote><p>已经有人搜集了必应的每日壁纸：<a href="https://bing.ioliu.cn/">必应每日高清壁纸</a>。并提供了直接下载，因此我们直接从该网站上爬取图片。</p></blockquote><h3 id="1-分析下载链接-1"><a href="#1-分析下载链接-1" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p>页数</p><ul><li><p>分析发现每一页对应的链接应该是：<code>https://bing.ioliu.cn/?p=&#123;n&#125;</code>。n对应页数。所以我们可以找到总页数并将其提取出来</p><p><img src="https://i.loli.net/2021/08/05/vos9iauPCq7Ac2g.png" alt="image-20210805215127596"></p></li></ul></li><li><p>图片链接</p><ul><li>这里直接获取下载链接并存为二进制文件。或者也可以像第一节那样获取图片链接并使用<code>urllib.request.urlretrieve()</code>函数下载</li></ul><p><img src="https://i.loli.net/2021/08/05/Qr73JuOn8c5KNlp.png" alt="image-20210805215515224"></p></li><li><p>获取图片信息，并将之作为图片名</p><p><img src="https://i.loli.net/2021/08/05/cVQOZ59UMyI13mo.png" alt="image-20210805220452156"></p></li></ul><h3 id="2-代码实现-1"><a href="#2-代码实现-1" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">import</span> os<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        user_agent <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'</span><span class="token punctuation">&#125;</span>        html_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers <span class="token operator">=</span> user_agent<span class="token punctuation">)</span>        html_text<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_text<span class="token punctuation">.</span>apparent_encoding        html_text<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_text<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取最大页数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetMaxPageCount</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 获取主页信息，并且获取网站的最大页数 </span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    tag_page <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'page'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    page_txt <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">for</span> tag_child <span class="token keyword">in</span> tag_page<span class="token punctuation">.</span>children<span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tag_child<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            page_txt <span class="token operator">=</span> tag_child<span class="token punctuation">.</span>string            match <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'(?&lt;=1 / )\d*'</span><span class="token punctuation">,</span> page_txt<span class="token punctuation">)</span>            max_page_count <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> max_page_count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>存储图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">SavePictureInUrl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pic_url<span class="token punctuation">,</span> pic_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url链接获取图片的二进制数据，并且根据传入的路径和文件名将文件写入到对应的路径中</span>    source <span class="token operator">=</span> self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>pic_url<span class="token punctuation">)</span>    <span class="token keyword">if</span> source <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>     file_name <span class="token operator">=</span> <span class="token string">'&#123;&#125;.jpg'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>pic_name<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>pic_path<span class="token operator">+</span>file_name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>source<span class="token punctuation">.</span>content<span class="token punctuation">)</span>            sleep<span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"此图片下载失败！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载一页的图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetOnePageJpg</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> page_count<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 从返回的网页数据中获取每张图片的相关信息以及图片下载的url，然后调用相关函数下载图片</span>    url <span class="token operator">=</span> <span class="token string">'https://bing.ioliu.cn/?p=&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page_count<span class="token punctuation">)</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>    tag_container <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'container'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    tag_item <span class="token operator">=</span> tag_container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> tag_pic <span class="token keyword">in</span> tag_item<span class="token punctuation">.</span>children<span class="token punctuation">:</span>        <span class="token comment"># 获取图片的标题和日期信息并且拼接成图片名</span>        tag_title <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'h3'</span><span class="token punctuation">)</span>        text_title <span class="token operator">=</span> tag_title<span class="token punctuation">.</span>string        a <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'[^\*"/:?\\|&lt;>]'</span><span class="token punctuation">,</span> text_title<span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>      <span class="token comment">#剔除某些不能作为文件名的特殊字符</span>        text_title <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span>        tag_calendar <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'calendar'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        tag_em <span class="token operator">=</span> tag_calendar<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'em'</span><span class="token punctuation">)</span>        text_calendar <span class="token operator">=</span> tag_em<span class="token punctuation">.</span>string        text_pic_name <span class="token operator">=</span> text_calendar <span class="token operator">+</span> <span class="token string">'__'</span> <span class="token operator">+</span> text_title        <span class="token keyword">if</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>pic_path<span class="token operator">+</span>text_pic_name<span class="token operator">+</span><span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token comment"># 获取图片的下载url</span>        tag_download <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'ctrl download'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        pic_url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> tag_download<span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>        <span class="token comment">#信息保存到图片中</span>        self<span class="token punctuation">.</span>SavePictureInUrl<span class="token punctuation">(</span>pic_url<span class="token punctuation">,</span> text_pic_name<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> flush<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment">#输出进度信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载所有页的图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetAllPageJpg</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 爬取所有的图片，并保存在输入的路径参数下</span>    max_page_count <span class="token operator">=</span> self<span class="token punctuation">.</span>GetMaxPageCount<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> page_index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> max_page_count<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>GetOnePageJpg<span class="token punctuation">(</span>page_index<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'正在获取，已完成：&#123;:.2f&#125; %'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page_index<span class="token operator">/</span>max_page_count<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> flush<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment">#输出进度信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://bing.ioliu.cn/'</span>         pic_path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/必应每日壁纸/'</span>      getBingImg <span class="token operator">=</span> GetBingImage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> pic_path<span class="token punctuation">)</span>    getBingImg<span class="token punctuation">.</span>GetAllPageJpg<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-源代码"><a href="#3-源代码" class="headerlink" title="3. 源代码"></a>3. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBingImage.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBingImage.py</a></li></ul><h2 id="四、爬取豆瓣评论"><a href="#四、爬取豆瓣评论" class="headerlink" title="四、爬取豆瓣评论"></a>四、爬取豆瓣评论</h2><h3 id="1-分析下载链接-2"><a href="#1-分析下载链接-2" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p><a href="https://movie.douban.com/subject/30174085/reviews">《怒火重案》的全部影评</a></p></li><li><p>获取完整评论链接。分析发现每篇影评在此链接显示并不完整，要完整链接需要再次跳转。</p><p><img src="https://i.loli.net/2021/08/05/IpJ4RzqlyYnjE7L.png" alt="image-20210805221421635"></p></li><li><p>获取下一页的链接。发现每一页都是由原始链接和<code>?start=&#123;n&#125;</code>拼接得到。该信息也可匹配得到，由属性<code>next</code>对应</p><p><img src="https://i.loli.net/2021/08/05/CV76oIPDrUjlmXe.png" alt="image-20210805222302884"></p></li><li><p>通过完整评论链接获取全文内容及其它相关信息（属性<code>article</code>对应内容）</p><p><img src="https://i.loli.net/2021/08/05/vP9w2sNJ4ZidYkC.png" alt="image-20210805221711519"></p><ul><li>同时在这儿我们可以获取标题、作者和日期等相关信息。</li></ul></li></ul><h3 id="2-代码实现-2"><a href="#2-代码实现-2" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        user_agent <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'</span><span class="token punctuation">&#125;</span>        html_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers <span class="token operator">=</span> user_agent<span class="token punctuation">)</span>        html_text<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_text<span class="token punctuation">.</span>apparent_encoding        html_text<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_text<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取完整评论链接和下一页链接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetNextPageAndCompleUrls</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.获取下一页评论的链接</span>    <span class="token comment"># 2.获取完整评论的链接</span>    <span class="token comment"># 获取主页信息，并且获取下一页评论的尾部链接</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    tag_next <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'next'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    match <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'href="(.*?)"'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_next<span class="token punctuation">)</span><span class="token punctuation">)</span>    next_page <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> match<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment"># 拼接下一页url如"?start=20"</span>    <span class="token comment"># 获取该页所有评论的完整评论链接</span>    tag_main <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'main-bd'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    comple_urls <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)">'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_main<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> next_page<span class="token punctuation">,</span> comple_urls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>爬取所有评论并存储</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">SaveComments</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 爬取所有评论并储存</span>    count <span class="token operator">=</span> <span class="token number">1</span>                           <span class="token comment"># 评论条数</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>pages<span class="token punctuation">)</span><span class="token punctuation">:</span>        source <span class="token operator">=</span> self<span class="token punctuation">.</span>GetNextPageAndCompleUrls<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        url <span class="token operator">=</span> source<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                     <span class="token comment"># 下一页的链接</span>        comple_urls <span class="token operator">=</span> source<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>             <span class="token comment"># 所有的评论链接,是一个大小为20的列表</span>        <span class="token keyword">for</span> comple_url <span class="token keyword">in</span> comple_urls<span class="token punctuation">:</span>            soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>comple_url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>            <span class="token comment"># 获取评论相关信息</span>            tag_article <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'article'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token comment"># 作者</span>            author <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'&lt;span>(.*?)&lt;/span>'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span>            <span class="token comment"># 时间</span>            time <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;span class="main-meta".*?>(.*?)&lt;/span>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 标题</span>            title <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;span property="v:summary">(.*?)&lt;/span>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 正文</span>            content <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;p data-page="0">(.*?)&lt;/p>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>            <span class="token comment"># 拼接并存储</span>            head <span class="token operator">=</span> <span class="token string">"标题: "</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> <span class="token string">"作者: "</span> <span class="token operator">+</span> author <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> <span class="token string">"日期: "</span> <span class="token operator">+</span> time <span class="token operator">+</span> <span class="token string">'\n'</span>            content <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>content<span class="token punctuation">)</span>            article <span class="token operator">=</span> head <span class="token operator">+</span> content            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'--------------第&#123;&#125;条评论-----------------------\n'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>article<span class="token punctuation">)</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n\n'</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"写入第&#123;&#125;条评论"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>                count <span class="token operator">+=</span> <span class="token number">1</span>                sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/subject/30174085/reviews'</span>         path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/豆瓣评论/comments.txt'</span>      pages <span class="token operator">=</span> <span class="token number">3</span>    getDoubanComments <span class="token operator">=</span> GetDoubanComments<span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> pages<span class="token punctuation">)</span>    getDoubanComments<span class="token punctuation">.</span>SaveComments<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-缺陷-1"><a href="#3-缺陷-1" class="headerlink" title="3. 缺陷"></a>3. 缺陷</h3><ul><li>一些评论无法爬取，应该是网站的反爬机制导致的。最好是利用ip代理解决，可参考：<a href="https://www.cnblogs.com/python147/p/14499657.html">爬虫遇到反爬机制怎么办? 看看我是如何解决的！</a></li></ul><h3 id="4-源代码-1"><a href="#4-源代码-1" class="headerlink" title="4. 源代码"></a>4. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetDoubanComments.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetDoubanComments.py</a></li></ul><h2 id="五、参考链接"><a href="#五、参考链接" class="headerlink" title="五、参考链接"></a>五、参考链接</h2><ul><li><a href="https://blog.csdn.net/qq_44921056/article/details/114174916">python爬虫随心所欲地爬取百度图片</a></li><li><a href="https://blog.csdn.net/HelloWorldTM/article/details/107049627">python爬虫爬取必应每日高清壁纸</a></li><li><a href="https://www.cnblogs.com/yunlongaimeng/p/9466187.html">python requests的content和text方法的区别</a></li><li><a href="https://www.runoob.com/regexp/regexp-syntax.html">菜鸟教程-正则表达式</a></li><li><a href="https://www.runoob.com/python3/python-urllib.html">菜鸟教程-Python urllib</a></li><li><a href="https://new.qq.com/omn/20210122/20210122A0538600.html">有哪些屡试不爽的反反爬技巧</a></li><li><a href="https://www.cnblogs.com/python147/p/14499657.html">爬虫遇到反爬机制怎么办? 看看我是如何解决的！</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用指令</title>
      <link href="/yyds/b287a84e.html"/>
      <url>/yyds/b287a84e.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">node -v# 查看node.js版本号npm update hexo -g# 升级npm install hexo -g# 安装hexonpm -v# 查看npm版本号npm install package# 安装...npm uninstall package# 卸载hexo init filename# 初始化，只有最开始配置时需要使用hexo server# 开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo server -s# 以静态模式启动hexo server -p portNum# 修改访问端口，默认为4000hexo server -i ip地址# 自定义IPhexo clean# 清除缓存（网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹）hexo generate# 生成静态页面至public目录hexo deploy# 自动生成网站静态文件并部署到设定仓库hexo help# 查看帮助 hexo --version# 查看Hexo的版本hexo -v# 查看Hexo的版本缩写：hexo n &#x3D;&#x3D; hexo new hexo g &#x3D;&#x3D; hexo generate hexo s &#x3D;&#x3D; hexo serverhexo d &#x3D;&#x3D; hexo deployhexo cl &#x3D;&#x3D; hexo clean组合命令：hexo s -g # 生成并本地预览hexo d -g # 生成并上传写文章hexo new newPost# 新建文章（完整命令是hexo new post newpost）hexo new page newPage# 新建页面  hexo new draft newDraft# 新建草稿，想写文章又不想被看见hexo server --draft# 在本地端口开启预览hexo publish draft newDraft# 将草稿文件发到post中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub免费搭建个人博客</title>
      <link href="/yyds/4fee7e8a.html"/>
      <url>/yyds/4fee7e8a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><blockquote><p>本博客的搭建参考了众多博主的搭建教程（文章主体结构参考<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a>最多），因为时间有限且个人属于<strong>前端小白</strong>，故个性化做得不是很好，还有许多需要完善的地方。另外搭建个人博客需要一些<strong>耐心</strong>，很多细节都会导致Bug的出现。本文的内容随意复制，引用的话可以加一个参考链接，谢谢<span class="github-emoji" alias="grin" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">&#x1f601;</span> 。希望大家都能搭建好自己舒适的博客~</p></blockquote><h3 id="搭建原因及思路"><a href="#搭建原因及思路" class="headerlink" title="搭建原因及思路"></a>搭建原因及思路</h3><ul><li><p>原因</p><ul><li>之前是在博客园上写文章，但是总是感觉不舒服，因为有些广告啥的，另外虽然想做一些个性化，但一是因为自己是个前端小白，好多东西不会；二是不太愿意花那么多时间去弄一个不属于自己的东西。没错，第三方的平台会给我一种疏离感，而个人博客个性化极强，从头到尾这么搭建下来，不得不说心理极度舒适<span class="github-emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span>。除此之外，大一的时候上导论课也接触过一些关于服务器、前端、网站等等，也算是种下了一颗种子，但奈何自己太菜又太懒，一直没有下定决心去做。现在趁着大三暑假，花点时间搭建个人博客，也算是解决了一个心结。</li></ul></li><li><p>思路</p><ul><li><p>基于开源框架<code>Hexo</code>搭建博客，直接在<code>GitHub Pages</code>平台上托管博客</p><blockquote><p>其实也可以在<code>Coding</code>或<code>Gitee</code>上部署，<code>Coding</code>我没有尝试，但<code>Gitee</code>由于最近在创建绿色网络环境，<code>Pages</code>暂停服务了，现在没法申请。</p></blockquote></li><li><p>因为打算白嫖，所以没有买个人域名，如果买了个人域名，在<code>GitHub</code>上绑定之后即可访问。我白嫖的地址：<code>https://321hjd.github.io/</code></p></li></ul></li></ul><h3 id="教程结构安排"><a href="#教程结构安排" class="headerlink" title="教程结构安排"></a>教程结构安排</h3><ul><li>第一部分：<code>Hexo</code>的初步搭建以及部署至<code>GitHub Pages</code>上</li><li>第二部分：<code>Hexo</code>的主题更换以及基本配置</li><li>第三部分：个性化。添加各种功能，如评论系统、说说模块等</li><li>第四部分：博客的性能优化</li></ul><h2 id="一、搭建"><a href="#一、搭建" class="headerlink" title="一、搭建"></a>一、搭建</h2><hr><p><code>Hexo</code>的初步搭建以及部署至<code>GitHub Pages</code>上</p><h3 id="工具说明"><a href="#工具说明" class="headerlink" title="工具说明"></a>工具说明</h3><ul><li><p><a href="https://hexo.io/zh-cn/">Hexo</a></p><blockquote><p>是一个基于<code>Node.js</code>的快速, 简洁且高效的静态网站生成框架. 让上百个页面在几秒内瞬间完成渲染. <code>Hexo</code>支持<code>Github Flavored Markdown</code>的所有功能, 甚至可以整合<code>Octopress</code>的大多数插件. 并自己也拥有强大的插件系统.</p></blockquote></li><li><p><a href="https://git-scm.com/download">Git</a></p><blockquote><p><code>Git</code> 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<code>Git</code> 是 <code>Linus Torvalds</code> 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<code>Git</code>与常用的版本控制工具<code>CVS, Subversion</code>等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote></li><li><p><a href="http://nodejs.cn/download/">Node.js</a></p><blockquote><p>简单的说<code>Node.js</code>就是运行在服务端的<code>JavaScript</code>。<code>Node.js</code> 是一个基于<code>Chrome JavaScript</code> 运行时建立的一个平台。<code>Node.js</code>是一个事件驱动I/O服务端<code>JavaScript</code>环境，基于<code>Google</code>的V8引擎，V8引擎执行 <code>JavaScript</code>的速度非常快，性能非常好。</p></blockquote></li><li><p><a href>npm(node package manager)</a></p><blockquote><p>是<code>JavaScript</code>世界的包管理工具,并且是<code>Node.js</code>平台的默认包管理工具</p></blockquote></li></ul><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h3><ul><li><strong>Windows</strong>：到<a href="https://git-scm.com/download/win">Git官网</a>下载<code>.exe</code>文件，安装选项全默认<ul><li>安装完成后使用右键的<code>Git Bash Here</code>，执行<code>git --version</code>可查看版本号</li></ul></li><li><strong>Linux</strong>：只需要一行指令<code>sudo apt install git</code>即可</li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a>：廖雪峰老师写的Git教程非常好，强烈建议大家看看</li></ul><h3 id="2-安装Node-js和npm工具"><a href="#2-安装Node-js和npm工具" class="headerlink" title="2. 安装Node.js和npm工具"></a>2. 安装Node.js和npm工具</h3><ul><li><strong>Windows</strong>：到<a href="http://nodejs.cn/download/">Node.js官网</a>下载，安装选项全默认<ul><li>安装好之后，按<code>win+R</code>打开<code>cmd</code>，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，说明成功</li></ul></li><li><strong>Linux</strong>：<ul><li>安装及配置环境变量：参考<a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-5">Hexo+Github博客搭建完全教程</a></li></ul></li></ul><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装Hexo</h3><ul><li><p>找个地方右键<code>Git Bash Here</code>，后面的指令操作都是使用<code>Git Bash</code></p></li><li><p>配置<code>npm</code>的国内镜像源：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.or<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置完成后，输入<code>npm info hexo</code>，如果配置成功，<code>dist</code>会显示</p><p><code>.tarball: https://registry.nlark.com/hexo/download/hexo-5.4.0.tgz</code></p></li><li><p>通过<code>npm</code>安装<code>Hexo</code>（<code>-g</code>是指定全局安装，之后可以在任意位置使用<code>hexo</code>指令）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后输入<code>hexo -v</code>查看是否安装成功。若出现版本号，则至此已安装完成</p></li><li><p>接下来初始化我们的静态网站，进入到存放博客文件的目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init MyBlog<span class="token comment"># 初始化创建，将在当前目录下新建MyBlog文件夹 </span><span class="token builtin class-name">cd</span> MyBlog<span class="token comment"># 进入这个文件夹，这个文件夹下面将存放所有相关文件</span><span class="token function">npm</span> <span class="token function">install</span><span class="token comment"># 进一步安装hexo所需文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>大概效果如下：</p><p><img src="https://i.loli.net/2021/07/21/GSlouvgFC4XZc2D.png" alt="指令执行结果"></p></li><li><p>指令执行完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules/</code>：<code>Hexo</code>的依赖包</li><li><code>scaffolds/</code>：生成文章的一些模板</li><li><code>source/</code>：用来存放写的文章</li><li><code>themes/</code>：主题</li><li><code>_config.yml</code>：博客的配置文件</li><li>其它：<code>.github/、.gitignore、_config.landscape.yml、package.json、package-lock.json</code></li></ul></li></ul></li><li><p>打开本地服务器查看博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span class="token comment"># 生成静态网页</span>hexo server<span class="token comment"># 打开本地服务器(默认是4000端口)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>正常情况下应该会出现下图：</p><p><img src="https://i.loli.net/2021/07/21/daXQtvF1IqcnkOf.png" alt="Hexo-blog"></p><p>这时博客根目录下会生成<code>public</code>目录，这就是我们部署到<code>GitHub</code>上所需要上传的文件夹。</p></li><li><p><code>Ctrl + C</code>可关闭本地服务器</p></li><li><p><a href="https://321hjd.github.io/yyds/b287a84e.html">常用hexo指令</a></p></li></ul><h3 id="4-注册GitHub账号并新建个人仓库"><a href="#4-注册GitHub账号并新建个人仓库" class="headerlink" title="4. 注册GitHub账号并新建个人仓库"></a>4. 注册GitHub账号并新建个人仓库</h3><ul><li><p><code>GitHub</code>：<a href="https://github.com/">https://github.com/</a></p></li><li><p>新建项目仓库<code>new repository</code>，注意项目名字最好是<strong>和用户名相同</strong>，并加上<code>.github.io</code><strong>后缀</strong>。比如我的<code>repo</code>：<code>321hjd.github.io</code></p></li><li><p>注意勾选上<code>README</code>初始化，可以描述一下该<code>repo</code>是干嘛的</p></li><li><p>然后在项目页面选择<code>Setting</code>并下拉，进入<code>Pages</code>，可以看到分配给自己的Pages（如果没正常显示，可能还差点啥，具体记不太清楚了，当时没记录<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）​​</p><p><img src="https://i.loli.net/2021/07/21/M8bBcsROg5YK3Gk.png" alt="GitHub Pages"></p></li></ul><h3 id="5-生成本地SSH并添加至GitHub"><a href="#5-生成本地SSH并添加至GitHub" class="headerlink" title="5. 生成本地SSH并添加至GitHub"></a>5. 生成本地SSH并添加至GitHub</h3><ul><li><p>生成<code>SSH</code>并添加至<code>GitHub</code>，使得<code>GitHub</code>可以识别本地（<code>name</code>和<code>email</code>可以和注册<code>Github</code>时的不同）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token comment"># name按自己喜好取</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span><span class="token comment"># global代表本机上任一地方的Git用户都是此处设置的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>创建<code>SSH</code></p><blockquote><p><code>ssh</code>，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在<code>GitHub</code>上，这样当你链接<code>GitHub</code>自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过<code>git</code>上传你的文件到<code>GitHub</code>上。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span><span class="token comment"># 刚刚设置的email</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>这时它会告诉你已经生成了<code>.ssh</code>文件夹，应该是在系统盘的用户目录下，如：<code>C:\Users\username\.ssh</code>。找到该文件夹并复制<code>id_rsa.pub</code>中的所有内容</p></li><li><p>打开<code>GitHub</code>，在头像下面点击<code>Settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，随便取一个名字，然后将刚刚复制的内容全部粘贴进去，如图：</p><p><img src="https://i.loli.net/2021/07/21/2NeyZpbxc9GH6WJ.png" alt="示例-SSH"></p></li><li><p>再在<code>git bash</code>输入<code>ssh -T git@github.com</code>，若出现如下结果，则添加成功</p><p><img src="https://i.loli.net/2021/07/21/UNw1stIdo9jPTLx.png" alt="示例-success"></p></li><li><p>至此，我们已经可以在本地建立<code>repo</code>并与<code>GitHub</code>连接起来，如<code>pull or push</code></p></li></ul><h3 id="6-将Hexo部署至GitHub"><a href="#6-将Hexo部署至GitHub" class="headerlink" title="6. 将Hexo部署至GitHub"></a>6. 将Hexo部署至GitHub</h3><ul><li><p>这一步，会将<code>Hexo</code>生成的文章部署到<code>GitHub</code>上。</p></li><li><p>首先我们需要安装一个插件<code>deployer-git</code>，这样我们才能用命令部署至<code>GitHub</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后打开博客根目录的<code>_config.yml</code>文件，</p><ul><li><p>修改<code>url</code>部分并新增<code>root</code>，写为</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">url: https:&#x2F;&#x2F;&#123;username&#125;.github.io&#x2F;# Pages地址root: &#x2F;    # 网站根目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改最后一行的配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy:  type: git  repository: https:&#x2F;&#x2F;github.com&#x2F;&#123;username&#125;&#x2F;&#123;yourrepo&#125;  # 示例：https:&#x2F;&#x2F;github.com&#x2F;321hjd&#x2F;321hjd.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>最后执行以下命令，部署成功，此时可以访问<code>GitHub</code>分配的<code>Pages</code>如我的<code>https://321hjd.github.io</code>看到博客主页</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span class="token comment"># 清除缓存（网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹）</span>hexo generate<span class="token comment"># 生成静态页面至public目录</span>hexo deploy<span class="token comment"># 自动生成网站静态文件并部署到设定仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：若这一步完成后访问不了<code>Pages</code>，可以参考本节的<a href="#Q&amp;A-1">Q&amp;A</a>，若还是无法解决，请仔细查看上述步骤是否正常完成，或根据本节的参考链接跳转至其他大佬处查询。</p></blockquote></li></ul><h3 id="7-写文章并发布文章"><a href="#7-写文章并发布文章" class="headerlink" title="7. 写文章并发布文章"></a>7. 写文章并发布文章</h3><blockquote><p>建议写一个test文档，专门用于测试功能是否能正确实现。<br>另外<code>markdown</code>编辑器建议使用<code>Typora</code>，非常好用~</p></blockquote><ul><li><p>新建test文档。在博客根目录下右键打开<code>git bash</code>，执行指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"test"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>此时打开<code>xxx/source/_posts</code>可以发现多了一个<code>test.md</code></li><li>编辑该文件并执行<code>hexo g</code>、<code>hexo s</code>可以本地预览，也可以继续执行<code>hexo d</code>部署至<code>GitHub</code>，这时候就可以在你的<code>Pages</code>上看到发布的文章了</li></ul></li></ul><h3 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&A"></a><span id="Q&amp;A-1">Q&A</span></h3><blockquote><p><strong>Q</strong>：使用GitHub的pages服务，部署到<code>GitHub</code>后访问<code>username.github.io</code>总是无法连接（手机热点/WiFi都不行，不知道为啥）<br><img src="https://i.loli.net/2021/07/22/ZB2ltXmbpSvs3FV.png" alt="github.io无法连接"><br><strong>A</strong>：在<a href="http://tool.chinaz.com/dns">站长之家</a>查看博客（<code>https://&#123;username&#125;.github.io</code>)的<code>IP</code>地址，修改<code>C:\Windows\System32\drivers\etc\HOSTS</code>文件（需要管理员权限)，将<code>IP地址 &#123;username&#125;.github.io</code>添加到文件最后即可（如<code>185.199.111.153 321hjd.github.io</code>)。（枯了，还是有缺陷，电脑连手机热点的时候没法访问，只能用<code>WiFi</code>，但是手机热点上<code>GItHub</code>感觉又要容易一些<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>，<code>Gitee</code>的<code>Pages</code>服务快点恢复吧😭​)</p></blockquote><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/">使用hexo和gitee搭建免费个人博客详细教程</a></li><li><a href="https://blog.csdn.net/qq_45836474/article/details/107875540?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-3.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-3.control">*.github.io的个人博客网站无法连接的问题</a></li></ul><h2 id="二、主题基本配置"><a href="#二、主题基本配置" class="headerlink" title="二、主题基本配置"></a>二、主题基本配置</h2><h3 id="1-Hexo相关目录文件介绍"><a href="#1-Hexo相关目录文件介绍" class="headerlink" title="1. Hexo相关目录文件介绍"></a>1. Hexo相关目录文件介绍</h3><p>具体都可以参考<a href="https://hexo.io/zh-cn/docs/setup">官方文档</a></p><h4 id="1-1-博客目录结构"><a href="#1-1-博客目录结构" class="headerlink" title="1.1 博客目录结构"></a>1.1 博客目录结构</h4><pre class="line-numbers language-none"><code class="language-none">- node_modules# node.js库目录- public# 生成的网页文件目录- scaffolds# 新文章或页面的模板文件- source# 最常用的目录，后面个性化会新增很多    - _data# 存放一些页面的配置文件    - _posts# 文章存放的目录    - about# “关于”页面    - archives# “归档”页面    - categories# “分类”页面    - friends# “友情链接”页面    - tags# “标签”页面- themes# 存放主题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-Hexo基本配置"><a href="#1-2-Hexo基本配置" class="headerlink" title="1.2 Hexo基本配置"></a>1.2 Hexo基本配置</h4><ul><li><p>网站信息</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">title: Hexo# 网站标题subtitle: &#39;&#39;# 网站副标题description: &#39;&#39;# 网站描述，主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词keywords:# 网站关键词author: John Doe# 作者language: en# 语言，简体中文比如zh-CN(可以后面换了主题后再改)timezone: &#39;&#39;# 时区，比如UTC&#x2F;America&#x2F;Japan，可以不填<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>网址</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">url:# 网址root:# 网站根目录permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;# 文章的永久链接格式permalink_defaults:# 永久链接中各部分的默认值...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>使用默认的<code>permalink</code>的话，生成文章<code>test.md</code>的链接就是</p><p><code>https://&#123;username&#125;.github.io/2021/7/22/test</code></p></li><li><p>后面会将关于<code>permalink</code>的优化（主要是防止修改文章名后链接发生变化）</p></li></ul></li><li><p>主题：<code>theme: landscap</code>，默认是<code>landscape</code>，要更换主题下载后放入<code>themes</code>文件夹下，然后修改此处即可</p></li><li><p><code>Front-matter</code></p><ul><li><p><code>Front-matter</code> 是<code>md</code>文件最上方以 <code>---</code>分隔的区域，用于指定个别文件的变量，具体可参考<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a></p><blockquote><p>注意下面部分属性是需要下载主题以后才能配置的，暂时默认就好，后续更换主题后再改也不迟~</p></blockquote></li></ul><pre class="line-numbers language-none"><code class="language-none">title: &quot;test&quot;# 文章标题，可以和.md文件名不同（注意Windows下文件名特殊字符的问题）date: 2021-07-21 14:46:34 # 文章生成日期author: hjd# 作者img:# 文章封面图片，缺省应该是会按照一定的规则从主题目录下的xxx&#x2F;source&#x2F;medias&#x2F;featureimages&#x2F;中拉取图片coverImg:# 轮播图片top: false# 置顶cover: false# 是否在首页进行轮播toc: true# 目录mathjax: false# 是否支持mathjax，即数学公式password:# 文章密码summary:# 简介tags:# 标签，注意多级标签这样写  - tag1  - tag2  - ...categories:# 分类<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>layout</code></p><ul><li><p>三种默认布局：<code>post、page、draft</code>，即<code>scaffolds</code>目录下的三个模板</p><ul><li>注意：那三个模板中的<code>Front-matter</code>是可以修改的</li></ul></li><li><p><code>post</code>：当使用指令<code>hexo new test</code>时，默认使用的布局是<code>post</code>，即<code>source/_posts/</code>下的文件，完整指令应该是<code>hexo new &#123;layout&#125; &quot;title&quot;</code></p></li><li><p><code>page</code>：执行<code>hexo new page newpage</code>，会在<code>source</code>目录下新建<code>newpage</code>文件夹和其中的<code>index.md</code>，这样访问该<code>newpage</code>的路径就是：</p><p><code>https://&#123;username&#125;.github.io/newpage</code></p></li><li><p><code>draft</code>：草稿，想写文章但不想别人看或者暂时不发出去，即预览或部署时令系统忽略该文章</p><ul><li>执行<code>hexo new draft newdraft</code>，会生成<code>source/_drafts/newdraft.md</code>文件</li><li>想要预览该草稿时，可以执行<code>hexo server --draft</code>指令</li><li>想要将草稿发表致至<code>_posts</code>中，执行<code>hexo publish draft newdraft</code>即可（<code>_draft/</code>中的<code>test.md</code>将被移动至<code>_posts/</code>）</li></ul></li></ul></li></ul><h3 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2. 更换主题"></a>2. 更换主题</h3><blockquote><p>注意，我使用的主题是<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>（<code>README</code>中有配置相关介绍）。当然你也可以使用其它主题比如相当受欢迎的<a href="https://github.com/theme-next">NexT</a>。后续教程全部都是针对<code>matery</code>主题的，部分地方可以相互借鉴，但存在一定差异，请各位看官斟酌。</p><p>关于该主题的特性就不多说了，<code>GitHub</code>上有介绍，大家<code>git clone</code>下来后也可以自行体会，下面主要介绍基本的一些配置和问题的解决。</p><p>关于下面的一些功能实现，建议大家专门写一个<code>test.md</code>来测试每一项功能。</p></blockquote><h4 id="2-1-下载主题并更换"><a href="#2-1-下载主题并更换" class="headerlink" title="2.1 下载主题并更换"></a>2.1 下载主题并更换</h4><ul><li><p>在<code>themes/</code>目录下执行该指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后将博客根目录下<code>_config.yml</code>中的<code>theme</code>属性值改为<code>hexo-theme-matery</code></p></li></ul><h4 id="2-2-添加404页面"><a href="#2-2-添加404页面" class="headerlink" title="2.2 添加404页面"></a>2.2 添加404页面</h4><ul><li><p>在<code>/source/</code>目录下新建<code>404.md</code></p><pre class="line-numbers language-none"><code class="language-none">title: 404 date: 2021-07-14 00:00:00 type: &quot;404&quot; layout: &quot;404&quot; description: &quot;经典404 Not Found →_→&quot; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后在<code>/themes/hexo-theme-matery/layout</code>目录下新建一个<code>404.ejs</code>文件</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* don't remove. */</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 90.2vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-cover pd-header about-cover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s10 offset-s1 m8 offset-m2 l8 offset-l2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        404                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> page<span class="token punctuation">.</span>description </span><span class="token delimiter punctuation">%></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>banner<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 每天切换 banner 图.  Switch banner image every day.</span>        <span class="token keyword">var</span> bannerUrl <span class="token operator">=</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/medias/banner/'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url('</span> <span class="token operator">+</span> bannerUrl <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/medias/banner/0.jpg'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-3-代码高亮"><a href="#2-3-代码高亮" class="headerlink" title="2.3 代码高亮"></a>2.3 代码高亮</h4><ul><li><p>根据<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>的配置建议，直接使用<code>prismjs</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-prism-plugin<span class="token comment"># 若node_modules中有hexo-prism-plugin插件，先写在</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后修改博客根目录下的<code>_config.yml</code>配置文件</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">highlight:  enable: false# 改为false  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: true# 改为true  preprocess: true  line_number: true  tab_replace: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>默认的<code>prismjs</code>主题是<code>Tomorrow Night</code>，若需要更换，到<a href="https://prismjs.com/download.html#themes=prism&amp;languages=markup+css+clike+javascript">prismjs download page</a>下载喜欢的<code>css</code>文件，然后替换<code>themes/hexo-theme-matery/source/libs/prism/prism.css</code>即可</p><blockquote><p>这里发现了一些问题，如c++、yml等无法高亮，暂时还没找到解决方案⊙﹏⊙∥。</p><font color="red">另外注意代码块前面不能有列表符号，否则不能正常渲染。</font></blockquote></li></ul><h4 id="2-4-数学公式渲染"><a href="#2-4-数学公式渲染" class="headerlink" title="2.4 数学公式渲染"></a>2.4 数学公式渲染</h4><ul><li><p>存在的问题：<code>Hexo</code>默认的渲染引擎<code>hexo-renderer-marked</code>和<code>markdown</code>语法冲突，因为该引擎会将一些特殊的<code>markdown</code>符号转换为相应的<code>HTML</code>标签，比如在<code>markdown</code>语法中，下划线<code>&#39;_&#39;</code>代表斜体，但会被该渲染引擎处理为<code>&lt;em&gt;</code>标签，类似的还有<code>&#39;*&#39;、&#39;&#123;&#39;、&#39;&#125;、&#39;\&#39;</code>等</p></li><li><p>解决方案：</p><ul><li><p>更换<code>Hexo</code>的渲染引擎</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-renderer-marked --save<span class="token comment"># 卸载原来的引擎</span><span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-kramed --save<span class="token comment"># kramed是与marked相近的轻量级渲染引擎，只是在后者的基础上修复了一些bug</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>然后修复一些行内渲染的<code>bug</code>。</p><ul><li>打开博客根目录的<code>node_modules/kramed/lib/rules/inline.js</code>文件，将第11行的<code>escape</code>变量做相应修改（这一步是在原基础上取消了对<code>\,&#123;,&#125;</code>的转义）</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_>])/,</span>escape<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\([`*\[\]()#$+\-.!_>])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token comment">//注意需要逗号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>同时将第20行的<code>em</code>变量做相应修改</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span>em<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\*((?:\*\*|[\s\S])+?)\*(?!\*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>接下来在主题中开启<code>mathjax</code>开关。打开<strong>主题目录</strong>下的配置文件<code>_config.yml</code>，将<code>mathjax</code>默认的<code>false</code>修改为<code>true</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">mathjax:  enable: true  per_page: true  cdn: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;mathjax&#x2F;2.7.5&#x2F;MathJax.js?config&#x3D;TeX-AMS-MML_HTMLorMML<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>最后在文章的<code>Front-matter</code>中开启<code>mathjax</code>（不需要数学公式的文章建议关闭，因为<code>mathjax</code>的渲染较为耗时）</p><pre class="line-numbers language-none"><code class="language-none">---title: testauthor: hjdmathjax: truetags: ---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>最后还是存在一点问题，比如连续的花括号渲染时会失败。不过在中间加上空格就好了。ps：这是参考教程说的，但可能后面作者已经修复了这个bug，我测试的时候并没有发现有问题<span class="github-emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span></p></blockquote></li></ul><h4 id="2-5-文章图片引用"><a href="#2-5-文章图片引用" class="headerlink" title="2.5 文章图片引用"></a>2.5 文章图片引用</h4><ul><li><p>问题：部署后文章中插入的图片不显示</p></li><li><p>解决方案</p><ul><li>首先安装插件<code>hexo-asset-image</code>：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/7ym0n/hexo-asset-image --save <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>然后打开博客根目录的<code>_config.yml</code>，将<code>post_asset_folder</code>的值修改为<code>true</code>（这时再生成文章时会在<code>_posts</code>目录下生成与文章同名的文件夹）</p><blockquote><p>其实这一步也可以不用，看个人喜好，是不是喜欢把同一篇文章的图片都放在一起</p></blockquote></li><li><p>最后插入图片的路径有三种</p><ul><li>方法一：<code>![](imgname.jpg)</code>（缺点是本地<code>Typora</code>无法预览)</li><li>方法二：相对路径。<code>![](article/imgname.jpg</code>)（这种方法建议打开上一步那个<code>post_asset_folder</code>开关；或者直接建一个文件夹专门存放所有文章的图片)</li><li>方法三：<code>&#123;% asset_img example.jpg This is an example image %&#125;</code>（参考自官方文档）</li></ul></li></ul><blockquote><p>当然还有一种方法是直接将图片上传到图床，然后直接引用图床链接。</p></blockquote></li></ul><h4 id="2-6-添加表情支持"><a href="#2-6-添加表情支持" class="headerlink" title="2.6 添加表情支持"></a>2.6 添加表情支持</h4><ul><li><p>目的：令博客可以使用<code>markdown</code>的表情语法（如<code>&lt;span class=&quot;github-emoji&quot; alias=&quot;cry&quot; style=&quot;&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8&quot;&gt;&amp;#x1f622;&lt;/span&gt;</code>是<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）</p></li><li><p>最开始是根据网上很多的教程包括<code>matery</code>的官方<code>README</code>文件的描述，安装<code>hexo-filter-github-emojis</code>，但奈何安装时总是报错，最后使用了<code>next-theme</code>主题的<code>emoji</code>插件：<code>hexo-filer-emoji</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># npm install hexo-filter-github-emojis --save# 大家可以先试试这个</span><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-emoji --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>然后配置博客根目录配置文件<code>_config.yml</code>的<code>emoji</code>属性即可</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 添加GitHub的emoji支持 emoji:   enable: true   className: github-emoji   styles:   customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-7-添加建站时间"><a href="#2-7-添加建站时间" class="headerlink" title="2.7 添加建站时间"></a>2.7 添加建站时间</h4><ul><li><p>修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，在最后加上：（原来的文件中似乎有这部分代码，看情况修改吧）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>javascript</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)        year - 作为date对象的年份，为4位年份值        month - 0-11之间的整数，做为date对象的月份        day - 1-31之间的整数，做为date对象的天数        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数        minutes - 0-59之间的整数，做为date对象的分钟数        seconds - 0-59之间的整数，做为date对象的秒数        microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span>        <span class="token keyword">var</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">09</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//北京时间2018-2-13 00:00:00</span>        <span class="token keyword">var</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>        <span class="token keyword">var</span> diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"本站已运行 "</span> <span class="token operator">+</span>diffYears<span class="token operator">+</span><span class="token string">" 年 "</span><span class="token operator">+</span>diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分钟 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后在前面如<code>copyright</code>声明后加上以下代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sitetime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-face<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(ง •_•)ง<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-8-不蒜子初始化计数"><a href="#2-8-不蒜子初始化计数" class="headerlink" title="2.8 不蒜子初始化计数"></a>2.8 不蒜子初始化计数</h4><ul><li><p>修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，在最后加上：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> int <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>fixCount<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 50ms周期检测函数</span><span class="token keyword">var</span> pvcountOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 初始化首次数据</span><span class="token keyword">var</span> uvcountOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">function</span> <span class="token function">fixCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> pvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"display"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> uvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加上初始数据</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 停止检测</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后把上面关于不蒜子的一段代码增加两个<code>style=&#39;display:none&#39;</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalTraffic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-eye<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'siteTotalVisits'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalNumberOfvisitors<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>   <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'siteTotalVisitors'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>注意这里除了增加了两个<code>style=&#39;display:none&#39;</code>，还修改了两个<code>&lt;span&gt;</code>的位置，顺带也解决了后面不蒜子计数与<code>live2d</code>模型的冲突。如果要看每一步的操作，请移步洪卫大佬的教程：<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></p></blockquote><h4 id="2-9-字数统计、访问人数及其它"><a href="#2-9-字数统计、访问人数及其它" class="headerlink" title="2.9 字数统计、访问人数及其它"></a>2.9 字数统计、访问人数及其它</h4><ul><li><p>添加文章总字数、站点访问人数、站点文章总字数以及文章更新日期</p><ul><li>下载<code>hexo-wordcount</code>插件</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改主题配置文件<code>_config.yml</code>，激活配置即可</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">postInfo:  date: true        # 发布日期  update: true      # 更新日期  wordCount: true   # 文章字数统计  totalCount: true  # 站点总文章字数  min2read: true    # 文章阅读时长  readCount: false  # 文章阅读次数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意此时还不能看到站点文章总字数的统计，还需修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，添加如下代码</li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>postInfo<span class="token punctuation">.</span>totalCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-chart-area<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>站点总字数:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>     <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">totalcount</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>字<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启首页轮播功能</p><ul><li>配置<code>source/_data/cover.json</code>或直接将文章<code>Front-Matter</code>中的<code>cover</code>属性置为true即可</li></ul></li><li><p>添加搜索功能</p><ul><li><p>下载<code>hexo-generator-search</code>插件：</p><p><code>npm install hexo-generator-search --save</code></p></li><li><p>然后在根目录下的<code>_config.yml</code>中配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>修改<code>scaffolds</code>下模板的<code>Font-matter</code>，放出我的：</p><ul><li><p><code>post</code>和<code>draft</code>建议用一样的</p><pre class="line-numbers language-none"><code class="language-none">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;author: hjdimg:coverImg:top: falsecover: falsetoc: truemathjax: falsepassword:summary:tags:categories:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>page</code></p><pre class="line-numbers language-none"><code class="language-none">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;type: layout: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>其它：如友情链接、关于等页面可参考<a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></p></li></ul><h3 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://www.jianshu.com/p/7ab21c7f0674">在Hexo中渲染MathJax公式</a></li><li><a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></li><li><a href="https://github.com/LuckyZmj/LuckyBlog">Luckysec博客源码：xx/matery/layout/_partial/footer.ejs</a></li></ul><h2 id="三、个性化"><a href="#三、个性化" class="headerlink" title="三、个性化"></a>三、个性化</h2><h3 id="1-添加博客动态标签"><a href="#1-添加博客动态标签" class="headerlink" title="1. 添加博客动态标签"></a>1. 添加博客动态标签</h3><ul><li><p>打开<code>themes/hexo-theme-matery/layout/layout.ejs</code>，在对应位置添加如下代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">       <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span> st<span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"🙈😜有本事点我"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"( ఠൠఠ )ﾉ啊你还真点啊"</span><span class="token punctuation">,</span>                                                                               st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile                     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="2-修改壁纸、添加live2d模型"><a href="#2-修改壁纸、添加live2d模型" class="headerlink" title="2. 修改壁纸、添加live2d模型"></a>2. 修改壁纸、添加<code>live2d</code>模型</h3><ul><li><p>修改壁纸：在<code>themes\Matery\source\css\matery.css</code>文件中找到<code>body</code>，修改如下</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*background-color: #eaeaea;*/</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span><span class="token punctuation">)</span> 0% 0% / cover<span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://i.loli.net/2021/07/17/kYX7dl5qtKpVeMv.jpg"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span><span class="token property">background-attachment</span><span class="token punctuation">:</span> fiexd<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #34495e<span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加<code>live2d</code>模型</p><ul><li><p>安装依赖：<code>npm install --save hexo-helper-live2d</code></p></li><li><p>安装模型（可以上网搜搜有哪些模型，这里以狗狗为例），先在博客根目录的<code>_config.yml</code>中新增配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># live2D模型配置live2d:   enable: true  scriptFrom: local  pluginRootPath: live2dw&#x2F;   pluginJsPath: lib&#x2F;   pluginModelPath: assets&#x2F;  tagMode: false   debug: false   model:      use: live2d-widget-model-wanko   display:      position: right      hOffset: 100      # 水平偏移      vOffset: -50      # 垂直偏移      width: 150       height: 300   mobile: # 手机显示开关      show: true   react:       opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后执行指令即可：<code>npm install live2d-widget-model-wanko</code></p></li></ul><blockquote><p>注意：这里模型与不蒜子似乎有冲突，不过前面添加建站时间部分已经顺带解决了。即修改<code>&lt;span&gt;</code>的部分。</p></blockquote></li></ul><h3 id="3-取消渐变色、滚动条美化、直达评论按钮"><a href="#3-取消渐变色、滚动条美化、直达评论按钮" class="headerlink" title="3. 取消渐变色、滚动条美化、直达评论按钮"></a>3. 取消渐变色、滚动条美化、直达评论按钮</h3><ul><li><p>取消渐变色：在<code>themes\Matery\source\css\matery.css</code>找到<code>.bg-cover:after</code>，注释掉即可</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*去除首页蒙版*/</span><span class="token comment">/*.bg-cover:after &#123;    -webkit-animation: rainbow 60s infinite;    animation: rainbow 60s infinite;&#125;*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>滚动条美化：在<code>themes\Matery\source\css\matery.css</code>样式添加如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 滚动条 */</span><span class="token selector">::-webkit-scrollbar-thumb</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #00FFFF<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 25%<span class="token punctuation">,</span>transparent 25%<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 75%<span class="token punctuation">,</span>transparent 75%<span class="token punctuation">,</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">::-webkit-scrollbar-track</span> <span class="token punctuation">&#123;</span>   <span class="token property">background-color</span><span class="token punctuation">:</span> #CCFFCC<span class="token punctuation">;</span>   <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span>     <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>直达评论按钮（这一条可以等添加完<code>Valine</code>评论模块再做）</p><ul><li><p>新建文件<code>themes\Matery\layout\_partial\back-comment.ejs</code>,粘贴如下代码（我这里评论是<code>valine</code>，直接填写的<code>valine</code>的id——<code>href=&quot;#vcomments&quot;</code>,如果是其他评论，对应修改即可。）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 直达评论 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>to_comment<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment-scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-floating btn-large waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#vcomments<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>直达评论<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes\Matery\layout\_partial\valine.ejs</code>文末添加一条，引用第一步的内容</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>增加样式。在<code>themes\Matery\source\css\matery.css</code>添加内容如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*直达评论按钮样式*/</span><span class="token selector">.comment-scroll</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>   <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.comment-scroll .btn-floating</span> <span class="token punctuation">&#123;</span>   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom right<span class="token punctuation">,</span> #FF9999 0%<span class="token punctuation">,</span> #00FFFF 100%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.comment-scroll .btn-floating i</span> <span class="token punctuation">&#123;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="4-导航栏优化"><a href="#4-导航栏优化" class="headerlink" title="4. 导航栏优化"></a>4. 导航栏优化</h3><h4 id="4-1-菜单修改"><a href="#4-1-菜单修改" class="headerlink" title="4.1 菜单修改"></a>4.1 菜单修改</h4><ul><li><p>这里修改了一些菜单的布局，主要是做了如下改变：</p><ul><li>将时轴、标签、分类放入归档页面下</li><li>新增一级菜单-清单，并在其下添加相册、音乐、书单、电影、资源等页面</li><li>新增一级菜单-说说、工具箱</li></ul></li><li><p>方法：</p><ul><li><p>修改主题下的<code>_config.yml</code>（参考注释即可），如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  Index:    url: &#x2F;    icon: fas fa-home  Archives:    icon: fas fa-archive    children:      - name: 时轴        url: &#x2F;archives        icon: fas fa-paper-plane      - name: 分类         url: &#x2F;categories        icon: fas fa-bookmark       - name: 标签        url: &#x2F;tags        icon: fas fa-tags  List:    icon: fas fa-heartbeat    children:      - name: 音乐         url: &#x2F;music        icon: fas fa-music      - name: 相册        url: &#x2F;galleries        icon: fas fa-image      - name: 书单        url: &#x2F;books        icon: fas fa-list      - name: 电影        url: &#x2F;films        icon: fas fa-film      - name: 资源        url: &#x2F;resources        icon: fas fa-cloud-download-alt  About:    url: &#x2F;about    icon: fas fa-user-circle  Artitalk:    url: &#x2F;artitalk    icon: fas fa-heart  Contact:    url: &#x2F;contact    icon: fas fa-comments  Friends:    url: &#x2F;friends    icon: fas fa-address-book  Tools:    url: &#x2F;tools    icon: fas fa-toolbox<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>其中的<code>icon</code>图标可以到<a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">Font Awesome</a>中选择自己喜欢的</li></ul></li><li><p>然后需要新建对应的<code>page</code>（方法同建立关于、友链等页面）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page musichexo new page gallerieshexo new page bookshexo new page filmshexo new page resourceshexo new page artitalkhexo new page tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>记得将对应生成的<code>index.md</code>中的<code>type</code>和<code>layout</code>都改为对应的标题</strong></li></ul></li><li><p>汉化。需要修改两个文件：<code>themes/hexo-theme-matery/layout/_partial/</code>下的<code>navigation.ejs</code>和<code>mobile-nav.ejs</code>，模仿源代码添加几行代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">var menuMap = new Map();menuMap.set("Index", "首页");menuMap.set("Tags", "标签");menuMap.set("Categories", "分类");menuMap.set("Archives", "归档");menuMap.set("About", "关于");menuMap.set("Artitalk", "说说");menuMap.set("Contact", "留言板");menuMap.set("Friends", "友情链接");menuMap.set("List", "清单"); menuMap.set("Tools", "工具箱");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="4-2-相册"><a href="#4-2-相册" class="headerlink" title="4.2 相册"></a>4.2 相册</h4><ul><li><p>上一步已经新建了<code>galleries</code>页面，其<code>type</code>和<code>layout</code>均为<code>galleries</code></p></li><li><p>添加<code>themes/hexo-theme-matery/source/css/gallery.css</code>文件</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.gallery-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-box</span><span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> center center no-repeat<span class="token punctuation">;</span>  <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box .gallery-cover-img</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-item .gallery-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>  <span class="token property">column-count</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">-moz-page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">-webkit-column-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item img</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item .photo-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #dddddd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*适配移动端布局*/</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes/hexo-theme-matery/layout/</code>目录下新建<code>galleries.ejs</code>和<code>gallery.ejs</code>文件</p><blockquote><p>注意：此处<code>galleries.ejs</code>是整个相册页面的配置，<code>gallery.ejs</code>是单独某一个相册的配置。</p></blockquote><ul><li>这是<code>galleries.ejs</code>文件</li></ul><blockquote><p>注意其中<code>https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/</code>是我使用<code>CDN</code>加速后的图床链接（后面会讲到图床搭建和<code>CDN</code>加速，可以先使用我的看看效果，这也是需要修改的地方，具体如何取决于你的<code>/source/_data/galleries.json</code>如何配置）</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;css&#x2F;gallery.css&quot;&gt;&lt;%- partial(&#39;_partial&#x2F;bg-cover&#39;) %&gt;&lt;main class&#x3D;&quot;content&quot;&gt;    &lt;div class&#x3D;&quot;container&quot;&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) &#123; %&gt;        &lt;% var galleries &#x3D; site.data.galleries; %&gt;        &lt;div class&#x3D;&quot;gallery-wrapper row&quot;&gt;            &lt;% for (var i &#x3D; 0, len &#x3D; galleries.length; i &lt; len; i++) &#123; %&gt;            &lt;% var gallery &#x3D; galleries[i]; %&gt;            &lt;div class&#x3D;&quot;col s6 m4 l4 xl3 gallery-box&quot;&gt;                &lt;a href&#x3D;&quot;.&#x2F;&lt;%- gallery.name %&gt;&quot; class&#x3D;&quot;gallery-item&quot; data-aos&#x3D;&quot;zoom-in-up&quot;&gt;                    &lt;div class&#x3D;&quot;gallery-cover-box&quot; style&#x3D;&quot;background-image: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;ImageBed&#x2F;galleries&#x2F;&lt;%- gallery.cover%&gt;)&quot;&gt;                        &lt;!--&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;ImageBed&#x2F;galleries&#x2F;&lt;%- gallery.cover %&gt;&quot; alt&#x3D;&quot;img&quot; class&#x3D;&quot;gallery-cover-img&quot;&gt;--&gt;                    &lt;&#x2F;div&gt;                    &lt;p class&#x3D;&quot;gallery-name&quot;&gt;                        &lt;%- gallery.name %&gt;                    &lt;&#x2F;p&gt;                &lt;&#x2F;a&gt;            &lt;&#x2F;div&gt;            &lt;% &#125; %&gt;        &lt;&#x2F;div&gt;        &lt;% &#125; %&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;main&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这是<code>gallery.ejs</code>文件，同样<code>url</code>需要修改为自己的图床地址</li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>fancybox </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>justifiedGallery </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这儿的网址：https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span><span class="token number">321</span>hjd<span class="token operator">/</span>ImageBed<span class="token operator">/</span>galleries<span class="token operator">/</span> 改为你图片放的位置的网址，比如你用Github图床的话，就改为你图床的网址 <span class="token operator">--</span><span class="token operator">></span>    imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\"https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\"\n"</span> <span class="token operator">+</span>            <span class="token string">"     class=\"photo-item\" rel=\"example_group\"\n"</span> <span class="token operator">+</span>            <span class="token string">"     data-fancybox=\"images\">\n"</span> <span class="token operator">+</span>            <span class="token string">"      &lt;img src=\"https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\"\n"</span> <span class="token operator">+</span>            <span class="token string">"       alt="</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">">\n"</span> <span class="token operator">+</span>            <span class="token string">"    &lt;/a>"</span><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span><span class="token comment">&lt;!--   "  &lt;p class=\"photo-name\">" + photo + "&lt;/p>\n" +文件名先注释掉  --></span><span class="token comment">&lt;!-- 不加密写法 --></span><span class="token comment">&lt;!-- &lt;div class="container">    &lt;div class="photo-wrapper" >        &lt;div class="waterfall" id="mygallery">            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>        &lt;/div>    &lt;/div>&lt;/div> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token comment">&lt;!-- 加密写法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>password <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token comment">&lt;!-- &lt;script src="/lib/crypto-js.js">&lt;/script> --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/crypto-js.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/gallery-encrypt.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-security<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-input-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span>  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码查看内容<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-decrypt<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn_decrypt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>解密<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>encrypt-blog<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">aes</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">,</span> page<span class="token punctuation">.</span>password<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>encrypt-blog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>lazyload </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>fancybox </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>justifiedGallery </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// $(".waterfall").lazyload();</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//  不加密写法</span><span class="token comment">// $("#mygallery").justifiedGallery(&#123;margins: 5, rowHeight: 150&#125;);</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#encrypt-blog"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>margins<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> rowHeight<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>source/galleries/</code>下创建相册（比如“壁纸”，用于下面测试）文件夹，并在其下创建<code>index.md</code>，并设置<code>Front-mattery</code>（注意这里的<code>type</code>和<code>layout</code>都是<code>gallery</code>而非<code>galleries</code>，这与前面的<code>gallery.ejs、galleries.ejs</code>相关）</p><pre class="line-numbers language-none"><code class="language-none">---title: 壁纸date: 2021-07-19 20:27:35type: gallerylayout: gallery---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在根目录下新建<code>/source/_data/galleries.json</code>，添加如下内容</p><blockquote><p>这里的<code>name</code>必须和上一步的<code>title</code>一致。另外我的图床图片地址是<code>/galleries/星空/01.jpg</code>，所以前面<code>ejs</code>文件中的<code>url</code>是那样。</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"壁纸"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"星空/01.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"壁纸"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"星空/01.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/02.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/03.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/04.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/05.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/06.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/07.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/08.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/09.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/10.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/11.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/12.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/13.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/14.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/15.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>现在编译一下应该可以显示了，但是布局很难看且不能放大。因为还需要两个插件<code>fancybox</code>和<code>justifiedGallery</code>。（<code>gallery.ejs</code>文件里引用了，但我们没下载这俩插件）</p><ul><li><p>打开主题目录下的配置文件<code>_config.yml</code>，找到存放前端库链接的地方（可搜索libs），将两插件对应的<code>css</code>和<code>js</code>链接写在那儿（不同的版本可以到官网上去找）。</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"> css:# 新增插件-用于调整相册布局，可以令图片具有点击放大功能，且布局美观   fancybox: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.css        justifiedGallery: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;justifiedGallery&#x2F;3.7.0&#x2F;css&#x2F;justifiedGallery.min.css  js:   # 新增插件-用于调整相册布局   fancybox: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.js        justifiedGallery: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;justifiedGallery&#x2F;3.7.0&#x2F;js&#x2F;jquery.justifiedGallery.min.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>现在编译就可以看到比较舒适的相册页面了。</p></li></ul></li><li><p>相册加密（<code>AES</code>加密）</p><ul><li><p>具体实现可以参考：<a href="https://liyangzone.com/2019/07/30/%E4%BD%BF%E7%94%A8AES%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86Hexo%E7%9B%B8%E5%86%8C/">使用AES算法加密Hexo相册</a></p></li><li><p>在主题根目录下新建目录及文件：<code>scripts/helpers/encrypt.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* global hexo */</span><span class="token string">'use strict'</span><span class="token punctuation">;</span><span class="token keyword">const</span> CryptoJS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto-js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>helper<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'aes'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span>password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  content <span class="token operator">=</span> <span class="token function">escape</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token function">String</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> content<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后修改<code>gallery.ejs</code>文件（这一步不需要做，因为前面那段代码其实已经写好了，就是“加密写法”那里）</p></li><li><p>修改<code>/themes/hexo-theme/matery/source/css/my.css</code>，美化解密按钮</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.hbe-input-container  .btn-decrypt</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #3f90ff<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>手动安装<code>crypto-js</code>插件，到<code>node_modules/crypto-js/</code>下找到<code>crypto-js.js</code>文件，并复制到主题目录下的<code>source/js/</code>下（注意<code>gallery.ejs</code>中的引用目录可能需要修改<code>&lt;script src=&quot;/js/crypto-js.js&quot;&gt;&lt;/script&gt;</code>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> crypto-js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后在主题目录的<code>source/js/</code>下新建<code>gallery-encrypt.js</code>，将我的代码粘进去就好（主要是不知道原来是从哪儿找来的了<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）</p><p><a href="https://cdn.jsdelivr.net/gh/321hjd/CDN-for-Hexo@CDN-for-Hexo-0.0.3/source/js/gallery-encrypt.js">https://cdn.jsdelivr.net/gh/321hjd/CDN-for-Hexo@CDN-for-Hexo-0.0.3/source/js/gallery-encrypt.js</a></p></li><li><p>最后需要在相册比如“壁纸”目录下<code>index.md</code>中的<code>Front-matter</code>中添加<code>password</code>，自己设置一个密码就好，如：<code>password: 123</code></p></li></ul></li></ul><h4 id="4-3-音乐模块"><a href="#4-3-音乐模块" class="headerlink" title="4.3 音乐模块"></a>4.3 音乐模块</h4><blockquote><p>这里我是设置了一个吸底模式的音乐模块和一个单独音乐页面。如果愿意就把音乐页面放在主页，根据注释操作即可。另外注意歌单歌曲过多可能会显示不出来，尽量少一些为好。（建议QQ音乐，网易云经常抽风，不知道为啥）</p></blockquote><ul><li><p>吸底模式：参考主题目录的<code>_config.yml</code>注释即可</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 是否在首页显示音乐.music:  enable: true  title: #非吸底模式有效    enable: true    show: 听听音乐  autoHide: true    # hide automaticaly  server: netease   #requiremusic platform: netease(网易云), tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 6862612332     #requiresong id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: true      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠  hideLrc: true     # 隐藏歌词# 提示： server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。 type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手） id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>单独音乐页面</p><ul><li><p>同样配置主题目录下的<code>_config.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 单独的音乐页面.（注意是musics，与之前的区分开）musics:  enable: true  url: &#x2F;music# 这是前面菜单优化部分新建的音乐页面的路径  title:          #非吸底模式有效    enable: true    show: 听听音乐  server: netease   #require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 6862612332     #require song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false  # 列表默认折叠  listMaxHeight: &quot;525px&quot; #列表最大高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将<code>themes/hexo-theme-matery/layout/_widget/</code>下的<code>music.ejs</code>复制一份命名为<code>musics.ejs</code></p></li><li><p>然后再在<code>themes/hexo-theme-matery/layout/</code>下新建<code>musics.ejs</code>文件，粘贴代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* don't remove. */</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 75vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutme<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container about-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>music-player<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>musics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>musics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/musics'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">                        <span class="token selector">.bubbles > .particle</span> <span class="token punctuation">&#123;</span>                            <span class="token comment">/*初始透明度为0*/</span>                            <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                            <span class="token comment">/*初始颜色为荧光色，透明度为0.7*/</span>                            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>128<span class="token punctuation">,</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">/*使用bubbles动画，持续时间18秒，缓慢进入，无限循环*/</span>                            <span class="token property">animation</span><span class="token punctuation">:</span> bubbles 18s ease-in infinite<span class="token punctuation">;</span>                            <span class="token property">border-radius</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token comment">/*css keyframes 动画*/</span>                        <span class="token atrule"><span class="token rule">@keyframes</span> bubbles</span> <span class="token punctuation">&#123;</span>                            <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                            <span class="token selector">5%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>                                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -20%<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                            <span class="token comment">/*这里-8000%表示是气泡的8000%*/</span>                            <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -8000%<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>                        <span class="token comment">&lt;!-- 这里让元素宽度100%（和页面等宽） --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>particletext bubbles<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://code.jquery.com/jquery-3.1.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">                          <span class="token keyword">function</span> <span class="token function">bubbles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                             $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".particletext.bubbles"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">var</span> bubblecount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">;</span>                                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> bubblecount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                   <span class="token keyword">var</span> size <span class="token operator">=</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                   <span class="token comment">//这里的animation-delay很重要，关系到你的特效是否看上去是连续无断层的，上一步中css是18秒，所以这一步中延迟时间就设置成$.rnd(0,180)/10)</span>                                   <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="particle" style="top:'</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%; left:'</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%;width:'</span> <span class="token operator">+</span> size <span class="token operator">+</span> <span class="token string">'px; height:'</span> <span class="token operator">+</span> size <span class="token operator">+</span> <span class="token string">'px;animation-delay: '</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'s;">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">&#125;</span>                             <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token punctuation">&#125;</span>                          jQuery<span class="token punctuation">.</span><span class="token function-variable function">rnd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                              m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>                              n <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">+</span> m<span class="token punctuation">;</span>                          <span class="token punctuation">&#125;</span>                          <span class="token function">bubbles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>                                            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="4-4-快速导航"><a href="#4-4-快速导航" class="headerlink" title="4.4 快速导航"></a>4.4 快速导航</h4><blockquote><p>这一部分暂时没做完个性化，仅仅是将别人的导航页面copy过来了而已。下面只介绍基本方法。另外其实有两种，一种是真正的导航页面；另一种是简单的浏览器主页。我比较偏向于简约版的后者。</p></blockquote><ul><li><p>绕过渲染。因为hexo 编译会对主题模板进行渲染之后生成静态页面，但是这个导航的网站本身就是 <code>html</code>文件，因此不需要渲染，那么跳过渲染就需要配置根目录<code>_config.yml</code>中的 <code>skip_render</code> 项</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 指定目录跳过hexo渲染skip_render:  - &#39;tools&#x2F;**&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>工具箱页面在4.1节已经新建完成。</p></li><li><p>添加<a href="https://github.com/WebStackPage/WebStackPage.github.io">WebStackPage导航网站</a>（这是一位名叫 Viggo 的UI设计师的公益项目，开源的静态网站，源码本身就是成品，下载代码之后就可以直接使用。）</p><ul><li><p>从官方项目地址克隆到本地</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/WebStackPage/WebStackPage.github.io <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将里面的文件放在博客根目录的<code>source/tools/</code>下即可</p></li><li><p>这时候编译进入&lt;工具箱&gt;页面应该能看到如下效果</p></li></ul><p><img src="https://camo.githubusercontent.com/cd5db39ba59752822b7770d5074571fc4db1660af9066dfdb9953ff53ed7195e/687474703a2f2f7777772e776562737461636b2e63632f6173736574732f696d616765732f707265766965772e676966" alt="WebStackPage"></p><ul><li>然后后续自己修改细节即可</li></ul></li><li><p>添加<a href="https://blog.5iux.cn/4679.html">D.Young大叔设计的主页</a></p><ul><li>同上，克隆到本地然后放入<code>tools/</code>再编译即可。效果如下：</li></ul><p><img src="https://i.loli.net/2021/07/23/1m2MPto9GQdY5lT.png" alt="主页"></p></li></ul><h3 id="5-Valine评论模块"><a href="#5-Valine评论模块" class="headerlink" title="5. Valine评论模块"></a>5. Valine评论模块</h3><h4 id="5-1-Valine评论模块添加"><a href="#5-1-Valine评论模块添加" class="headerlink" title="5.1 Valine评论模块添加"></a>5.1 Valine评论模块添加</h4><ul><li><p>到<a href="https://leancloud.app/">leancloud官网</a>注册并创建应用（建议使用<strong>国际版</strong>，因为后面的<code>artitalk</code>模块使用国际版更加方便）</p></li><li><p>修改主题目录下配置文件<code>_config.yml</code>，激活<code>Valine</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">valine:  enable: true  appId: XXXXXXXXXXXXXXXXXXXXX# appId和appKey是在leancloud注册后获取的（设置-&gt;应用凭证）  appKey: XXXXXXXXXXXXXXXXXXXX  notify: true  verify: true  visitor: true  avatar: &#39;mm&#39; # Gravatar style : mm&#x2F;identicon&#x2F;monsterid&#x2F;wavatar&#x2F;retro&#x2F;hide  pageSize: 10  placeholder: &#39;just go go&#39; # Comment Box placeholder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>为添加博主、访客、小伙伴等tag，以及直接通过邮箱或QQ拉取头像，直接使用大佬魔改后的<code>Valine.min.js</code>文件，并覆盖<code>themes/hexo-theme-matery/source/libs/valine/Valine.min.js</code></p></li><li><p>然后配置<code>themes/hexo-theme-matery/layout/_partia/valine.ejs</code>文件</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> el<span class="token operator">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span> enableQQ<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enableQQ </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>  appId<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appId </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>appKey<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appKey </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> visitor<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>visitor </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>avatar<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>avatar </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>pageSize<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>pageSize </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> lang<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">==</span> <span class="token string">"zh-CN"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>zh-cn<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>en<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> placeholder<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>placeholder </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>meta<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span> <span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>requiredFields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span><span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//必填项</span>tagMeta<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"博主"</span><span class="token punctuation">,</span> <span class="token string">"小伙伴"</span><span class="token punctuation">,</span> <span class="token string">"访客"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>master<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"d502ea4605b856df3b9b73bad1e8592e"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">// 我的邮箱（MD5加密后）似乎只能用小写，大写无法识别</span><span class="token comment">// friends: // 小伙伴MD5加密后的邮箱</span><span class="token comment">// metaPlaceholder: // 昵称和邮箱无内容时的显示内容</span>recordIP<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> emojiCDN<span class="token operator">:</span> <span class="token string">'//i0.hdslb.com/bfs/emote/'</span><span class="token punctuation">,</span><span class="token comment">// 表情title和图片映射</span>emojiMaps<span class="token operator">:</span> <span class="token punctuation">&#123;</span>             <span class="token comment">//第一个是自定义表情的示例，模仿添加即可</span><span class="token string">"让我瞅瞅"</span><span class="token operator">:</span> <span class="token string">"https://i.loli.net/2021/07/18/bzTH82kc7KnsBXC.jpg"</span><span class="token punctuation">,</span><span class="token string">"tv_doge"</span><span class="token operator">:</span> <span class="token string">"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_亲亲"</span><span class="token operator">:</span> <span class="token string">"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_偷笑"</span><span class="token operator">:</span> <span class="token string">"bb690d4107620f1c15cff29509db529a73aee261.png"</span><span class="token punctuation">,</span><span class="token string">"tv_再见"</span><span class="token operator">:</span> <span class="token string">"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_冷漠"</span><span class="token operator">:</span> <span class="token string">"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png"</span><span class="token punctuation">,</span><span class="token string">"tv_发怒"</span><span class="token operator">:</span> <span class="token string">"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png"</span><span class="token punctuation">,</span><span class="token string">"tv_发财"</span><span class="token operator">:</span> <span class="token string">"34db290afd2963723c6eb3c4560667db7253a21a.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_可爱"</span><span class="token operator">:</span> <span class="token string">"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_吐血"</span><span class="token operator">:</span> <span class="token string">"09dd16a7aa59b77baa1155d47484409624470c77.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_呆"</span><span class="token operator">:</span> <span class="token string">"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png"</span><span class="token punctuation">,</span><span class="token string">"tv_呕吐"</span><span class="token operator">:</span> <span class="token string">"9f996894a39e282ccf5e66856af49483f81870f3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_困"</span><span class="token operator">:</span> <span class="token string">"241ee304e44c0af029adceb294399391e4737ef2.png"</span><span class="token punctuation">,</span><span class="token string">"tv_坏笑"</span><span class="token operator">:</span> <span class="token string">"1f0b87f731a671079842116e0991c91c2c88645a.png"</span><span class="token punctuation">,</span><span class="token string">"tv_大佬"</span><span class="token operator">:</span> <span class="token string">"093c1e2c490161aca397afc45573c877cdead616.png"</span><span class="token punctuation">,</span><span class="token string">"tv_大哭"</span><span class="token operator">:</span> <span class="token string">"23269aeb35f99daee28dda129676f6e9ea87934f.png"</span><span class="token punctuation">,</span><span class="token string">"tv_委屈"</span><span class="token operator">:</span> <span class="token string">"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png"</span><span class="token punctuation">,</span><span class="token string">"tv_害羞"</span><span class="token operator">:</span> <span class="token string">"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png"</span><span class="token punctuation">,</span><span class="token string">"tv_尴尬"</span><span class="token operator">:</span> <span class="token string">"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_微笑"</span><span class="token operator">:</span> <span class="token string">"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png"</span><span class="token punctuation">,</span><span class="token string">"tv_思考"</span><span class="token operator">:</span> <span class="token string">"90cf159733e558137ed20aa04d09964436f618a1.png"</span><span class="token punctuation">,</span><span class="token string">"tv_惊吓"</span><span class="token operator">:</span> <span class="token string">"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_打脸"</span><span class="token operator">:</span> <span class="token string">"56ab10b624063e966bfcb76ea5dc4794d87dfd47.png"</span><span class="token punctuation">,</span><span class="token string">"tv_抓狂"</span><span class="token operator">:</span> <span class="token string">"fe31c08edad661d63762b04e17b8d5ae3c71a757.png"</span><span class="token punctuation">,</span><span class="token string">"tv_抠鼻"</span><span class="token operator">:</span> <span class="token string">"c666f55e88d471e51bbd9fab9bb308110824a6eb.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_斜眼笑"</span><span class="token operator">:</span> <span class="token string">"911f987aa8bc1bee12d52aafe62bc41ef4474e6c.png"</span><span class="token punctuation">,</span><span class="token string">"tv_无奈"</span><span class="token operator">:</span> <span class="token string">"ea8ed89ee9878f2fece2dda0ea8a5dbfe21b5751.png"</span><span class="token punctuation">,</span><span class="token string">"tv_晕"</span><span class="token operator">:</span> <span class="token string">"5443c22b4d07fb1907ccc610c8e6db254f2461b7.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流汗"</span><span class="token operator">:</span> <span class="token string">"cead1c351ab8d79e9f369605beb90148db0fbed3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流泪"</span><span class="token operator">:</span> <span class="token string">"7e71cde7858f0cd50d74b0264aa26db612a8a167.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流鼻血"</span><span class="token operator">:</span> <span class="token string">"c32d39db2737f89b904ca32700d140a9241b0767.png"</span><span class="token punctuation">,</span><span class="token string">"tv_点赞"</span><span class="token operator">:</span> <span class="token string">"f85c354995bd99e28fc76c869bfe42ba6438eff4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_生气"</span><span class="token operator">:</span> <span class="token string">"26702dcafdab5e8225b43ffd23c94ac1ff932654.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_生病"</span><span class="token operator">:</span> <span class="token string">"8b0ec90e6b86771092a498c54f09fc94621c1900.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_疑问"</span><span class="token operator">:</span> <span class="token string">"0793d949b18d7be716078349c202c15ff166f314.png"</span><span class="token punctuation">,</span><span class="token string">"tv_白眼"</span><span class="token operator">:</span> <span class="token string">"c1d59f439e379ee50eef488bcb5e5378e5044ea4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_皱眉"</span><span class="token operator">:</span> <span class="token string">"72ccad6679fea0d14cce648b4d818e09b8ffea2d.png"</span><span class="token punctuation">,</span><span class="token string">"tv_目瞪口呆"</span><span class="token operator">:</span> <span class="token string">"0b8cb81a68de5d5365212c99375e7ace3e7891b7.png"</span><span class="token punctuation">,</span><span class="token string">"tv_睡着"</span><span class="token operator">:</span> <span class="token string">"8b196675b53af58264f383c50ad0945048290b33.png"</span><span class="token punctuation">,</span><span class="token string">"tv_笑哭"</span><span class="token operator">:</span> <span class="token string">"1abc628f6d4f4caf9d0e7800878f4697abbc8273.png"</span><span class="token punctuation">,</span><span class="token string">"tv_腼腆"</span><span class="token operator">:</span> <span class="token string">"89712c0d4af73e67f89e35cbc518420380a7f6f4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_色"</span><span class="token operator">:</span> <span class="token string">"61822c7e9aae5da76475e7892534545336b23a6f.png"</span><span class="token punctuation">,</span><span class="token string">"tv_调侃"</span><span class="token operator">:</span> <span class="token string">"4bc022533ef31544ca0d72c12c808cf4a1cce3e3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_调皮"</span><span class="token operator">:</span> <span class="token string">"b9c41de8e82dd7a8515ae5e3cb63e898bf245186.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_鄙视"</span><span class="token operator">:</span> <span class="token string">"6e72339f346a692a495b123174b49e4e8e781303.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_闭嘴"</span><span class="token operator">:</span> <span class="token string">"c9e990da7f6e93975e25fd8b70e2e290aa4086ef.png"</span><span class="token punctuation">,</span><span class="token string">"tv_难过"</span><span class="token operator">:</span> <span class="token string">"87f46748d3f142ebc6586ff58860d0e2fc8263ba.png"</span><span class="token punctuation">,</span><span class="token string">"tv_馋"</span><span class="token operator">:</span> <span class="token string">"fc7e829b845c43c623c8b490ee3602b7f0e76a31.png"</span><span class="token punctuation">,</span><span class="token string">"tv_鬼脸"</span><span class="token operator">:</span> <span class="token string">"0ffbbddf8a94d124ca2f54b360bbc04feb6bbfea.png"</span><span class="token punctuation">,</span><span class="token string">"tv_黑人问号"</span><span class="token operator">:</span> <span class="token string">"45821a01f51bc867da9edbaa2e070410819a95b2.png"</span><span class="token punctuation">,</span><span class="token string">"tv_鼓掌"</span><span class="token operator">:</span> <span class="token string">"1d21793f96ef4e6f48b23e53e3b9e42da833a0f6.png"</span> <span class="token comment">// ... 更多表情 </span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="5-2-增强评论系统"><a href="#5-2-增强评论系统" class="headerlink" title="5.2 增强评论系统"></a>5.2 增强评论系统</h4><ul><li><p>功能：</p><ul><li>支持评论回复提醒（微信/QQ/邮件）</li><li>支持@对方时给对方发送邮件并自带主题</li></ul></li><li><p>在<code>leancloud</code>上部署评论增强系统：<code>Valine-Admin-server</code>(使用的是<a href="https://github.com/kaze0617/Valine-Admin-Server">小康改版</a>)</p><ul><li><p>打开<code>leancloud</code>，云引擎-&gt;WEB-&gt;部署-&gt;部署项目-&gt;Git部署-&gt;配置Git，然后将`<a href="https://github.com/kaze0617/Valine-Admin-Server">https://github.com/kaze0617/Valine-Admin-Server</a> 填入其中，保存-&gt;部署项目-&gt;部署。</p><p><img src="https://i.loli.net/2021/07/23/kgIwu3hXjJa4CtQ.png" alt="部署Valine-Admin-Server"></p></li></ul></li><li><p>配置环境变量：云引擎-&gt;设置-&gt;自定义环境变量</p><blockquote><p>我只设置了邮件和微信提醒，没用QQ的。设置完成后再次部署生效。<br>|     变量      |           示例            |                             说明                             |<br>| :—————-: | :———————————-: | :—————————————————————————————: |<br>|   SITE_NAME   |         hjd’blog          |                        [必填]博客名称                        |<br>|   SITE_URL    | <a href="https://321hjd.github.io/">https://321hjd.github.io/</a> |                        [必填]首页地址                        |<br>| SMTP_SERVICE  |            QQ             |       邮件服务提供商，支持 QQ、163、126、Gmail以及更多       |<br>|   SMTP_USER   |     2857126002@qq.com     |                      [必填]SMTP登录用户                      |<br>|   SMTP_PASS   |            xxx            | [必填]SMTP登录密码（QQ邮箱可通过设置-账户-SMTP服务-生成授权码获取） |<br>|  SENDER_NAME  |         hjd’blog          |                         [必填]发件人                         |<br>| SENDER_EMAIL  |     2857126002@qq.com     |                        [必填]发件邮箱                        |<br>| BLOGGER_EMAIL |     2857126002@qq.com     |         [可选]博主通知收件地址，默认使用SENDER_EMAIL         |<br>|     SCKEY     |            xxx            |      <a href="http://sc.ftqq.com/">Server酱</a> SCKEY 用于微信通知      |<br>| DISABLE_EMAIL |           false           |                   如果为true，关闭邮件通知                   |<br>| TEMPLATE_NAME |          custom2          |                    设置回复邮件的主题样式                    |</p></blockquote></li><li><p>微信提醒还需要按照<a href="http://sc.ftqq.com/">Server酱-消息通道</a> 的指示注册企业微信并创建应用才行</p></li><li><p>博主回复别人后的邮件提醒效果：</p><p><img src="https://i.loli.net/2021/07/23/4qiNyprDSh9bwmQ.jpg" alt="邮件提醒" style="zoom:25%;"></p></li><li><p>有人评论时的微信提醒效果</p><p><img src="https://i.loli.net/2021/07/23/Hf8qQY5BkpaZ4On.jpg" alt="微信提醒" style="zoom:25%;"></p></li><li><p>后台管理。增删改评论在<code>leancloud</code>的数据存储-&gt;结构化数据-&gt;Comment处操作即可</p></li><li>防止休眠（如果不设置，每过一段时间重新部署，才能收到评论提醒）。需要购买域名，具体请参考：<a href="https://lovelijunyi.gitee.io/posts/e52c.html">Valine评论系统详解</a></li></ul><h3 id="6-说说模块Artitalk"><a href="#6-说说模块Artitalk" class="headerlink" title="6. 说说模块Artitalk"></a>6. 说说模块Artitalk</h3><ul><li><p>在<a href="https://leancloud.app/">leancloud官网</a>（建议使用国际版，否则需要配置<code>serverurl</code>）注册并绑定手机号和邮箱。然后创建应用（与<code>Valine</code>不是同一个）</p><blockquote><p>注意下面一定要设置好（尤其是权限），否则可能发不了说说，或者任意人都能在你的博客上修改或发表说说。</p></blockquote><ul><li>在<code>结构化数据</code>中创建<code>class</code>，命名为<code>shuoshuo</code></li><li>在你新建的应用中找到<code>结构化数据</code>下的<code>用户</code>。点击<code>添加用户</code>，输入想用的用户名及密码。（这就是你用来发说说的账号）</li><li>回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。（注意一定要等匹配后看到显示了<code>objectId</code>才没问题）</li><li>然后新建一个名为<code>atComment</code>的class，权限默认</li><li>点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</li><li>将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说</li></ul></li><li><p>下载<code>Artitalk</code>并放入组件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone --depth <span class="token number">2</span> git@github.com:ArtitalkJS/Artitalk.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在<code>themes/hexo-theme-matery/source/libs/</code>下新建<code>artitalk</code>文件夹。将下载所得<code>Artitalk</code>中<code>dist</code>下的组件代码（两个文件：<code>artitalk.min.js</code>和<code>artitalk.min.css</code>）全部放入<code>artitalk/</code>下</li></ul></li><li><p>引入该模块。修改主题配置文件<code>_config.yml</code>，在<code>libs</code>下加入刚刚的两个文件，如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">libs:  css:    artitalk: &#x2F;libs&#x2F;artitalk&#x2F;artitalk.min.css   js:    artitalk: &#x2F;libs&#x2F;artitalk&#x2F;artitalk.min.js <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>引入<code>css</code>。在<code>themes/hexo-theme-matery/layout/_partial/head.ejs</code>的尾部对应位置引入<code>css</code>（参照其它代码即可）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>artitalk<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>模块准备。在主题目录下 <code>/layout/</code> 目录新建一个 <code>artitalk.ejs 文件</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">ype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#pubShuo</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#operare_artitalk .shuoshuo_input_log</span> <span class="token punctuation">&#123;</span>    <span class="token property">outline-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #0bb7fbd6<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 70%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#artitalk_main</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px <span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> 5%<span class="token punctuation">;</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> 5%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#lazy</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#artitalk_main .cbp_tmtimeline > li .cbp_tmlabel::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid transparent<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span>   <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>   <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>     <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>   <span class="token property">border-right-color</span><span class="token punctuation">:</span>  #0bb7fbd6 <span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>     <span class="token property">top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>artitalk<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>articles11<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container  chip-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-pen-alt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 说说           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>artitalk_main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">new</span> <span class="token class-name">Artitalk</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        appId<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>appId  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>        appKey<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>appKey  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>serverURL<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          serverURL<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>serverURL  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          lang<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>lang  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          pageSize<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>pageSize  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>shuoPla<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          shuoPla<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>shuoPla  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>avatarPla<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          avatarPla<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>avatarPla  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>motion <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          motion<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          motion<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span>  </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>bgImg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          bgImg<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>bgImg  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color1<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color1  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color2<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color2  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color3<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color3  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>cssUrl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          cssUrl<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>cssUrl  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>          atEmoji<span class="token operator">:</span> <span class="token punctuation">&#123;</span>              baiyan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/baiyan.png"</span><span class="token punctuation">,</span>              bishi<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/bishi.png"</span><span class="token punctuation">,</span>              bizui<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/bizui.png"</span><span class="token punctuation">,</span>              chan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/chan.png"</span><span class="token punctuation">,</span>              daku<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/daku.png"</span><span class="token punctuation">,</span>              dalao<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dalao.png"</span><span class="token punctuation">,</span>              dalian<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dalian.png"</span><span class="token punctuation">,</span>              dianzan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dianzan.png"</span><span class="token punctuation">,</span>              doge<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/doge.png"</span><span class="token punctuation">,</span>              facai<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/facai.png"</span><span class="token punctuation">,</span>              fadai<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/fadai.png"</span><span class="token punctuation">,</span>              fanu<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/fanu.png"</span><span class="token punctuation">,</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在主题配置文件中添加<code>artitalk</code>配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">artitalk:  enable: true  appId: # 刚刚创建应用的AppID  appKey: # 刚刚创建应用的AppKey  lang: zh # 语言设置，zh为汉语，en为英语，es为西班牙语。默认为汉语    pageSize: 10  #每页说说的显示数量     # shuoPla: #在编辑说说的输入框中的占位符    avatarPla: # https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;321hjd.github.io&#x2F;source&#x2F;medias&#x2F;avatar.jpg #自定义头像url的输入框的占位符    # motion: #加载动画的开关，1为开，0为关，默认为开    # bgImg: #说说输入框背景图片url    color1: linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 200, 190) 85%)  #说说背景颜色1&amp;按钮颜色1    color2: linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 200, 190) 85%)  #说说背景颜色2&amp;按钮颜色2    color3: black #说说字体颜色<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建说说页面并添加链接。在第三部分的4.1节已经创建完成。</p></li><li><p>现在编译再进入说说页面应该就可以了。</p></li></ul><h3 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://liuruibin.com/posts/64eb.html">Matery优化（二）</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li><li><a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></li><li><a href="https://lovelijunyi.gitee.io/posts/b8ec.html">Matery主题搭建与优化教程超详细解析</a></li><li><a href="https://github.com/LuckyZmj/LuckyBlog">Luckysec博客源码</a></li><li><a href="https://yafine-blog.cn/posts/eb3a.html">使用 PicGo+Github 搭建免费图床</a></li><li><a href="https://liyangzone.com/2019/07/30/%E4%BD%BF%E7%94%A8AES%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86Hexo%E7%9B%B8%E5%86%8C/">使用AES算法加密Hexo相册</a></li><li><a href="https://notes.zhangxiaocai.cn/posts/38b34c3c.html">Matery 添加WebStackPage导航网站</a></li><li><a href="https://lovelijunyi.gitee.io/posts/e52c.html">Valine评论系统详解</a></li><li><a href="https://www.antmoe.com/posts/2380732b/index.html">Valine 评论之 Valine-admin 配置攻略</a></li><li><a href="https://notes.zhangxiaocai.cn/posts/7404e01a.html">Hexo 博客 Matery 主题添加 ArtiTalk 说说模块</a></li><li><a href="https://artitalk.js.org/doc.html#%F0%9F%8C%88-leancloud-%E7%9A%84%E7%9B%B8%E5%85%B3%E5%87%86%E5%A4%87">Artitalk官方文档</a></li></ul><h2 id="四、性能优化"><a href="#四、性能优化" class="headerlink" title="四、性能优化"></a>四、性能优化</h2><h3 id="1-图片懒加载"><a href="#1-图片懒加载" class="headerlink" title="1. 图片懒加载"></a>1. 图片懒加载</h3><ul><li><p>安装图片懒加载插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在博客根目录下的配置文件末尾添加</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 懒加载配置lazyload:  enable: true  onlypost: false   # 是否只对文章的图片做懒加载  loadingImg: &#x2F;medias&#x2F;loading.gif # 即放一个表示加载中的图片（这个图片得自己去找一个放在themes&#x2F;hexo-theme-matery&#x2F;source&#x2F;medias&#x2F;目录下）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>一般情况下懒加载会和gallery插件会发生冲突，结果可能就是点开图片，左翻右翻都是loading image。matery主题的解决方案是：修改 <code>/themes/matery/source/js</code> 中的 <code>matery.js</code>文件，在第108行加上</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>可能还有个小问题，首页的logo点击会直接打开logo图，而不是跳到首页。解决方案：打开 <code>/themes/matery/layout/_partial/header.ejs</code>文件，</p><p>在<code>img</code>和<code>span</code>的两个头加个<code>div</code>：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand-logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waves-effect waves-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>logo <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>logo<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>logo </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-img<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOGO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>懒加载优化（即提前加载图片，其实也可以不做）。具体请参考：<a href="https://blog.sky03.cn/posts/42790.html">Hexo进阶之各种优化</a></p></li></ul><h3 id="2-跳转页面载入动画"><a href="#2-跳转页面载入动画" class="headerlink" title="2. 跳转页面载入动画"></a>2. 跳转页面载入动画</h3><ul><li><p>在博客根目录下新建文件夹<code>scripts</code>（之前加密相册时已经建好了其实），然后在该目录下新建<code>loading-pages.js</code>，填入代码即可</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* global hexo */</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'after_render:html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">htmlContent</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">const</span> injectHead <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;style type="text/css" lang="css">    #loading-container&#123;        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    &#125;    .loading-image&#123;        width: 120px;        height: 50px;        transform: translate(-50%);    &#125;    .loading-image div:nth-child(2) &#123;        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    &#125;    .loading-image div:nth-child(3) &#123;        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    &#125;    .loading-image div:nth-child(4) &#123;        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    &#125;    .loading-image div:nth-child(5) &#123;        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    &#125;   .loading-image div:first-of-type &#123;        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    &#125;    .loading-image div:nth-child(2) &#123;        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    &#125;    @-webkit-keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;    @keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;    @-webkit-keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;    @keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;    @-webkit-keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;    @keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6)&#123;        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    &#125;    .loading-text&#123;        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    &#125;    @media only screen and (max-width: 500px) &#123;         .loading-text&#123;            font-size: 1.5rem;         &#125;    &#125;    .fadeout &#123;        opacity: 0;        filter: alpha(opacity=0);    &#125;    /* logo出现动画 */    @-webkit-keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)&#125;100%&#123;opacity:1;-webkit-transform:none;transform:none&#125;&#125;    @keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);&#125;&#125; &lt;/style> &lt;script>(function () &#123;    const loaded = function()&#123;       setTimeout(function()&#123;            const loader = document.getElementById("loading-container");            loader.className="fadeout" ;//使用渐隐的方法淡出loading page            // document.getElementById("body-wrap").style.display="flex";            setTimeout(function()&#123;                loader.style.display="none";            &#125;,1000);         &#125;,1000);//强制显示loading page 1s      &#125;;    loaded();&#125;)() &lt;/script></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>     <span class="token keyword">const</span> injectBody <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> &lt;div id="loading-container">     &lt;p class="loading-text">玩命加载中 . . . &lt;/p>      &lt;div class="loading-image">         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>          &lt;div>&lt;/div>     &lt;/div> &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\/head></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;/head>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> lastIndex<span class="token punctuation">)</span> <span class="token operator">+</span> injectHead <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;body></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">let</span> index <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;body>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">+</span> injectBody <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> htmlContent<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-新建文章时自动打开本地md编辑器"><a href="#3-新建文章时自动打开本地md编辑器" class="headerlink" title="3. 新建文章时自动打开本地md编辑器"></a>3. 新建文章时自动打开本地md编辑器</h3><ul><li><p>在博客根目录下的<code>scripts/</code>下新建<code>auto_open.js</code>，添加代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token comment">// Hexo 2.x 用户复制这段</span><span class="token comment">//hexo.on('new', function(path)&#123;</span>  <span class="token comment">//spawn('start  "markdown编辑器绝对路径.exe" ' + path);</span><span class="token comment">//&#125;);</span><span class="token comment">// Hexo 3 用户复制这段</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start  "D:\Program Files\Typora\Typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：<code>Typora.exe</code>的路径根据实际情况修改。</li></ul></li></ul><h3 id="4-jsDelivr-GitHub实现免费CDN加速"><a href="#4-jsDelivr-GitHub实现免费CDN加速" class="headerlink" title="4. jsDelivr + GitHub实现免费CDN加速"></a>4. <code>jsDelivr + GitHub</code>实现免费<code>CDN</code>加速</h3><ul><li><p><code>CDN</code>简介及原理：<a href="https://zhuanlan.zhihu.com/p/346643522">如何使用jsDelivr+Github 实现免费CDN加速?</a></p></li><li><p><a href="https://www.jsdelivr.com/">jsDelivr</a>：免费、快速和可信赖的<code>CDN</code>加速服务</p></li><li><p>实现</p><ul><li><p>新建<code>GitHub</code>仓库（我的叫<code>CDN-for-Hexo</code>）</p></li><li><p>将仓库克隆到本地：<code>git clone git@github.com:&#123;username&#125;/&#123;repo&#125;.git</code></p></li><li><p>将需要加速的资源文件复制到该本地仓库并上传到<code>GitHub</code>仓库（<code>Hexo</code>的静态资源<code>css</code>、<code>js</code>、图片等）。我是将主题下的整个<code>source</code>文件夹都传上去了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 添加所有文件到暂存区</span><span class="token function">git</span> status<span class="token comment"># 查看状态</span><span class="token function">git</span> commit -m <span class="token string">"CDN加速，第一次提交"</span><span class="token comment"># 将文件提交到仓库</span><span class="token function">git</span> push<span class="token comment"># 推送至远程仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>点击右边的<code>release</code>发布版本。如<code>CDN-for-Hexo-1.0</code></p></li></ul></li><li><p>修改主题目录下的配置文件，通过<code>jsDelivr</code>引用资源。如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">libs:  css:    matery: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;CDN-for-Hexo@b4706a7&#x2F;source&#x2F;css&#x2F;matery.css    mycss: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;CDN-for-Hexo@b4706a7&#x2F;source&#x2F;css&#x2F;my.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>引用方式为：<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></li></ul><blockquote><p>经过测试，不写版本号似乎不能引用到最新资源。需要引用最新版的话，最好是<code>仓库名@版本号</code>如<code>CDN-for-Hexo@b4706a7</code>而非<code>CDN-for-Hexo@CDN-for-Hexo-1.0</code>。</p><p>注：<code>jsdelivr</code>可以自动帮你生成<code>.min</code>版的<code>js</code>和<code>css</code>，所以你在设置<code>js</code>及<code>css</code>路径中可以直接写<code>.min.xxx</code></p></blockquote></li><li><p>修改完成后再编译部署，会发现访问速度快了很多~</p></li></ul><h3 id="5-文章永久链接优化"><a href="#5-文章永久链接优化" class="headerlink" title="5. 文章永久链接优化"></a>5. 文章永久链接优化</h3><ul><li><p>为什么要生成唯一永久文章链接：确保在我们修改了<code>Front-matter</code> 内的博客标题<code>title</code>或创建日期<code>date</code>字段之后而不会改变链接地址。</p></li><li><p>安装插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置。修改博客根目录配置文件的<code>permalink</code>属性</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">permalink: posts&#x2F;:abbrlink.html  # 此处可以自己设置，也可以直接使用 :&#x2F;abbrlinkabbrlink:    alg: crc32   #算法： crc16(default) and crc32    rep: hex     #进制： dec(default) and hex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>生成完后，原<code>md</code>文件的Front-matter 内会增加<code>abbrlink</code> 字段，值为生成的ID 。至此我们的文章链接将变为：</p><p><code>https://&#123;username&#125;.github.io/posts/&#123;abbrlink_id&#125;.html</code></p></li><li><p><strong>引发的问题</strong>：插入图片的路径发生变化，前面新增了一个对应文章的<code>abbrlink_id</code>目录</p><ul><li><p>分析：生成图片链接时自己把<code>abbrlink</code>加上，是因为原来hexo的设计思想（因为<code>post_asset_folder</code>的存在）是将文档的图片放置在同名文件夹下，然后将<code>md</code>转换为<code>html</code>同样以该结构存储，即</p><pre class="line-numbers language-none"><code class="language-none">- 根目录（按原来的结构应该是&#x2F;public&#x2F;year&#x2F;month&#x2F;day&#x2F;）- MDfilename.html- MDfilename_folder  - xxx.jpg  - ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>解决方案：修改<code>/node_modules/hexo-asset-image/index.js</code>中的两行（即自己把<code>abbrlink</code>加入到<code>image</code>的生成路径中）</p><ul><li>在源码的12行附近<code>var link = data.permalink;</code>这一行的下面，<strong>添加</strong> 一行<code>var abbrlink = data.abbrlink</code>（即自己定义一个变量<code>abbrlink</code>获取生成的<code>abbrlink</code>）</li><li>在源码的51行附近，将原来的 <code>$(this).attr(&#39;src&#39; , config.root + link + src);</code>改为<code>$(this).attr(&#39;src&#39; , config.root + link + abbrlink + &#39;/&#39; + src);</code></li></ul></li></ul></li></ul><h3 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://blog.sky03.cn/posts/42790.html">Hexo进阶之各种优化</a></li><li><a href="https://lovelijunyi.gitee.io/posts/b8ec.html">Matery主题搭建与优化教程超详细解析</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)</a></li><li><a href="https://zhuanlan.zhihu.com/p/346643522">如何使用jsDelivr+Github 实现免费CDN加速?</a></li><li><a href="https://www.jianshu.com/p/c7de2ae59975">Hexo-abbrlink生成唯一永久文章链接</a></li><li><a href="https://github.com/rozbo/hexo-abbrlink/issues/19">hexo-abbrlink作者与其他人的讨论</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从GitHub上下载单个文件(夹)</title>
      <link href="/yyds/65b12f08.html"/>
      <url>/yyds/65b12f08.html</url>
      
        <content type="html"><![CDATA[<h3 id="方法一：SVN-下载单个文件夹"><a href="#方法一：SVN-下载单个文件夹" class="headerlink" title="方法一：SVN-下载单个文件夹"></a>方法一：SVN-下载单个文件夹</h3><blockquote><p> 个人最适应的方法，缺点是需要借助第三方工具-svn</p><p>环境：Windows 10</p></blockquote><p>​    若想要下载<code>&#123;username&#125;</code>的<code>&#123;repo&#125;</code>里的<code>&#123;dir&#125;</code>文件夹，</p><ol><li><p>主分支master（现在似乎默认是main了，区别不大）：</p><ul><li><p>其浏览器路径应为<code>https://github.com/&#123;username&#125;/&#123;repo&#125;/tree/master/&#123;dir&#125;</code></p></li><li><p>修改<code>/tree/master/</code>为<code>/trunk/</code></p></li><li><p>打开<code>cmd</code>，输入指令：<code>svn checkout https://github.com/&#123;username&#125;/&#123;repo&#125;/trunk/&#123;dir&#125;</code></p></li><li><p>该<code>&#123;dir&#125;</code>将被下载至当前目录下</p><p><img src="https://i.loli.net/2021/07/21/SMxiE8ROWvDwpFn.png" alt="示例" style="zoom:80%;"></p></li></ul></li><li><p>特定分支</p><ul><li>将<code>/trunk/</code>换成<code>/branches/&#123;branch_name&#125;</code>即可</li></ul></li></ol><h3 id="方法二：高版本-Git"><a href="#方法二：高版本-Git" class="headerlink" title="方法二：高版本 Git"></a>方法二：高版本 Git</h3><blockquote><p>这个方法较为繁琐，但无需像前者一样借助其它工具</p></blockquote><p>方法：Git 的<code>Sparse Checkout</code>模式，指定文件/文件夹</p><ol><li><p>创建空的本地仓库，并将远程 <code>Git Server URL</code> 加入到 <code>Git Config</code>里</p><pre class="line-numbers language-none"><code class="language-none">mkdir project_foldercd project_foldergit initgit remote add -f origin &lt;repo-url&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在 <code>Config</code> 中设置允许使用<code>Sparse Checkout</code>模式</p><pre class="line-numbers language-none"><code class="language-none">git config core.sparsecheckout true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在<code>.git/info/</code>目录下新建<code>sparse-checkout</code>文件（注意文件名不要错了），写入需要的文件（<strong>一行为一项</strong>）</p><p>如：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;source&#x2F;tools&#x2F;index.html&#x2F;source&#x2F;about<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>以正常方式从服务器pull下来即可</p><pre class="line-numbers language-none"><code class="language-none">git pull origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/yyds/d87f7e0c.html"/>
      <url>/yyds/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<hr><p>这是一篇测试博客编辑功能是否正常的文档</p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>代码块</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*按顺序为数组赋值原数组的正数即可*&#x2F;    void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        int j &#x3D; 0;        for(int i &#x3D; 0;i &lt; nums.size(); ++i)            if(nums[i] !&#x3D; 0)                nums[j++] &#x3D; nums[i];        while(j &lt; nums.size())            nums[j++] &#x3D; 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"fdfdf"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) &#123; %>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;% &#125; %><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>代码：<code>test</code></li></ul><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><p><img src="/yyds/d87f7e0c/test.jpg" alt="test"></p><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li><p>公式块：</p><script type="math/tex; mode=display">\int_{-\infty}^{\infty}\frac{2}{3}x^2dx</script></li><li><p>公式：<script type="math/tex">\int_{-\infty}^{\infty}\frac{2}{3}x^2dx</script></p></li><li><p>test：<script type="math/tex">L_p  = (\sum_{i=1}^m |x_i - y_i |^{p}  )^{ {\frac{1}{p} } }</script></p></li><li><p>灌灌灌灌灌：<script type="math/tex">L_p  = (\sum_{i=1}^m |x_i - y_i |^{p}  )^{ {\frac{1} {p} } }</script></p></li></ul><h2 id="Emoji表情支持"><a href="#Emoji表情支持" class="headerlink" title="Emoji表情支持"></a>Emoji表情支持</h2><p><span class="github-emoji" alias="smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span>、<span class="github-emoji" alias="ice_hockey" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3d2.png?v8">&#x1f3d2;</span>、<span class="github-emoji" alias="face_with_head_bandage" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f915.png?v8">&#x1f915;</span></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用VMware将Ubuntu安装在u盘上</title>
      <link href="/yyds/f79dbef5.html"/>
      <url>/yyds/f79dbef5.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><div class="table-container"><table><thead><tr><th>本机系统</th><th>Windows 10</th></tr></thead><tbody><tr><td>待装系统</td><td>ubuntu-21.04-desktop-amd64</td></tr><tr><td>虚拟机软件</td><td>VMware-workstation-full-16.1.0-17198959</td></tr><tr><td>工具</td><td>U盘（Sandisk 3.2Gen1，16G）（看网上教程应该8G左右都可行，注意最好使用3.0及以上的，否则安装过程将非常非常缓慢）</td></tr></tbody></table></div><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><ul><li>选择典型（自定义应该也可以，感觉区别不大）<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/1575d8f7690c7c8a.png" alt="img"></li></ul></li><li>选择稍后安装操作系统<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/78be4172ea7f691b.png" alt="img"></li></ul></li><li>客户机操作系统选择Linux，版本选Ubuntu64位<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/96385572547c6fb9.png" alt="img"></li></ul></li><li>自定义虚拟机名称及存储位置，下一步</li><li>指定磁盘容量，默认，下一步</li><li>点击自定义硬件<ul><li>选择新CD/DVD-&gt;选择使用ISO映像文件（准备好的ubuntu的iso文件）<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/f58995b28f224ddd.png" alt="img"></li></ul></li><li>选择USB控制器-&gt;兼容性选择USB3.1（我的理解是选最大的那个，都是向下兼容的），其它全选上<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/a20b7ff98e2d6a0d.png" alt="img"></li></ul></li><li>其它默认，关闭，完成</li></ul></li></ul><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><ul><li>开启虚拟机，默认选ubuntu（第一个）启动</li><li>插入U盘，根据提示将U盘接入到虚拟机或通过选项卡-&gt;可移动设备-&gt;Sandisk 3.2Gen1（这里是U盘名称）</li><li>选择合适的语言，点击试用Ubuntu</li><li>点击桌面上的安装程序进行安装</li><li>一路默认，为了节约时间，我选择了最小安装，其它选项不勾选<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/574f29b2a20032a1.png" alt="img"></li></ul></li><li>安装类型选其它选项并开始分区（最重点）<ul><li>U盘引导启动有两种方式，一种是以前的Legacy BIOS方式，一种是新的UEFI方式（这里我也没有了解得很清楚）<ul><li>先查看自己的电脑的BIOS设置支持的是哪种方式：WIN+R，输入msinfo32<ul><li><img src="https://i.bmp.ovh/imgs/2021/05/befd4c0e83a7db93.png" alt="img"></li></ul></li><li>如果是UEFI启动模式，磁盘分区时不需要分/boot区，而是使用EFI系统分区</li><li>如果是Legacy BIOS启动模式，则使用/boot分区</li></ul></li><li>我的电脑支持UEFI启动模式，因此我的分区如下：（关于分区可以多参考网上的教程，我弄得不是很清楚）<ul><li>512MB的EFI系统分区（主分区+空间起始位置）（看网上有的教程说200MB就足够）<ul><li><img src="https://pic.imgdb.cn/item/6099450cd1a9ae528f086fa3.jpg" alt="img"></li><li>如果电脑只支持Legacy BIOS启动模式，则不需要此分区，改为新的XFS格式分区（大小同理，不过挂载在/boot下）</li></ul></li><li>10G的XFS格式分区（主分区+空间起始位置，挂载在/下，似乎是相当于windows的C盘，关于文件格式也可以多在网上查资料了解，不一定非要用XFS）<ul><li><img src="https://pic.imgdb.cn/item/60994675d1a9ae528f1c14f8.jpg" alt="img"></li></ul></li><li>剩下的可以全用光（仍然是XFS格式分区，主分区+空间起始位置，挂载在/home下，是用户自己的目录）<ul><li><img src="https://pic.imgdb.cn/item/60994766d1a9ae528f2ad238.jpg" alt="img"></li><li>这里不用光有个好处，就是可以利用剩下的空间当普通U盘用（需要通过磁盘管理-&gt;点击可用空间-&gt;新建简单卷-&gt;跟着引导曹操作）</li></ul></li><li>注意很重要的一步！这里需要将安装启动引导器的设备选项改为刚刚的EFI分区（即这里的dev/sdb1），否则下一步会报错<ul><li><img src="https://pic.imgdb.cn/item/60994908d1a9ae528f45575e.jpg" alt="img"></li><li>注意：如果是Legacy BIOS启动模式，这里似乎不需要更改，默认即可（我没试过，但看网上其它教程没有提到需要修改）</li></ul></li><li>然后安装（注意：看网上教程说，安装时需要断网，否则会出现一些奇怪的问题或者影响安装速度）<ul><li>选择时区，设置计算机名称和密码</li><li>经过等待（我的是新买的3.2Gen1，等待时间大概十几分钟到半小时？），安装完成，关闭虚拟机。<ul><li>注意此时电脑弹出的U盘格式化提示，一定不能格式化，否则重复上述步骤</li></ul></li><li>准备BIOS设置使用U盘启动</li></ul></li></ul></li></ul></li></ul><h3 id="进入BIOS设置，使用U盘启动"><a href="#进入BIOS设置，使用U盘启动" class="headerlink" title="进入BIOS设置，使用U盘启动"></a>进入BIOS设置，使用U盘启动</h3><ul><li>如何进入BIOS可以百度</li><li>进入BIOS后，选择U盘启动，完成。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 系统安装 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针-快慢指针</title>
      <link href="/yyds/3f704f49.html"/>
      <url>/yyds/3f704f49.html</url>
      
        <content type="html"><![CDATA[<ul><li><p>快慢指针：快慢指两个指针每次移动的步长，比如慢指针每次移动一步，快指针每次移动两步。</p></li><li><p>例题：<a href="https://leetcode-cn.com/problems/move-zeroes/">LeetCode283：移动零</a></p><ul><li><p>题目要求：给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p></li><li><p>例：<strong>输入:</strong> <code>[0,1,0,3,12]</code> <strong>输出:</strong> <code>[1,3,12,0,0]</code></p></li><li><p>思路1：设两个指针，一个遍历数组，一个只在元素非零时用于给数组赋值。最后再将数组剩下的位置全部填0</p></li><li><p>代码：</p> <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*按顺序为数组赋值原数组的正数即可*&#x2F;    void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        int j &#x3D; 0;        for(int i &#x3D; 0;i &lt; nums.size(); ++i)            if(nums[i] !&#x3D; 0)                nums[j++] &#x3D; nums[i];        while(j &lt; nums.size())            nums[j++] &#x3D; 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>思路2：由于数组每个非零数，正确位置要么在当前位置，要么在此位置之前，所以可设快慢指针，每次遇到非零数时，直接交换两个指针指向的元素。相比思路1，避免了数组前导数全为0时的多余操作。</p></li><li><p>代码：(此源代码来自LeetCode官方)</p> <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*快慢指针    *当前数的位置最多不动或该往前移动    *&#x2F;void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        for (int lastNonZeroFoundAt &#x3D; 0, cur &#x3D; 0; cur &lt; nums.size(); cur++) &#123;            if (nums[cur] !&#x3D; 0) &#123;                swap(nums[lastNonZeroFoundAt++], nums[cur]);            &#125;        &#125;     &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摩尔投票法（寻找众数）</title>
      <link href="/yyds/5b6ac126.html"/>
      <url>/yyds/5b6ac126.html</url>
      
        <content type="html"><![CDATA[<ul><li>问题1：在一个数组中找到一个出现次数大于n/2的数（保证一定存在）<a href="https://leetcode-cn.com/problems/majority-element/">leetcode169题（多数元素）</a><ul><li>要求：实现时间复杂度为O(n)，空间复杂度为O(1)的解法</li><li>解法：摩尔投票法</li></ul></li><li><p>摩尔投票法：</p><ul><li><p>原理：当一个数在数组中出现次数大于n/2，那么每次删除两个不同的元素，剩下的元素一定是该数</p></li><li><p>实现思路：</p><ul><li>要求时间复杂度O(n)，空间复杂度O(1)，因此不可能真的在数组中遍历并执行删除操作。</li><li>其实现有一定技巧：假设存在一个虚拟数组，用于存放还未和不同元素一起删除的数，该数组只存在若干同一元素；遍历原数组，若有与虚拟数组元素不同的数，则会将两个数一起从虚拟数组中删去。</li><li>因此只需要两个变量，一个存储可能是满足条件的值（虚拟数组中的数），一个存储个数。</li><li>遍历原数组到当前元素时，若虚拟数组为空，则将当前数放入虚拟数组；若虚拟数组非空，则比较两数是否相同，若相同，则将当前数加入到虚拟数组；若不同，则虚拟数组的数减1，继续遍历下一元素（即相当于删除两数）。</li><li>因为保证一定存储，所以最后虚拟数组剩下的数就是满足条件的“多数”。</li></ul></li><li><p>leetcode代码：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*摩尔投票法(寻找众数)*&#x2F;    int majorityElement(vector&lt;int&gt;&amp; nums) &#123;        int candidate &#x3D; -1;        int cnt &#x3D; 0;        for (int num : nums) &#123;            if(cnt &#x3D;&#x3D; 0)            &#123;                candidate &#x3D; num;                cnt &#x3D; 1;            &#125;            else if(num &#x3D;&#x3D; candidate)                 ++cnt;            else                    --cnt;        &#125;        return candidate;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>问题2（进阶）：</p><p>在一个数组中找到所有出现次数大于n/3的数 <a href="https://leetcode-cn.com/problems/majority-element-ii/">leetcode229题（求众数II）</a></p><ul><li><p>要求：实现时间复杂度为O(n)，空间复杂度为O(1)的解法</p></li><li><p>问题分析：</p><ul><li>在一个数组中出现次数大于n/3的数最多有2个</li><li>题目未说明保证存在满足条件的数</li></ul></li><li><p>思路：</p><ul><li>仍然是用摩尔投票法，只是因为没有保证该数存在，因此需要增加一个验证环节。</li><li>最多可能有2个满足条件数，因此需要四个变量</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*摩尔投票法*&#x2F;    vector&lt;int&gt; majorityElement(vector&lt;int&gt;&amp; nums) &#123;        int cnt1 &#x3D; 0, cnt2 &#x3D; 0;        int can1 &#x3D; 0, can2 &#x3D; 0;        for(int num:nums)        &#123;            if(can1 &#x3D;&#x3D; num)                    ++cnt1;            else if(can2 &#x3D;&#x3D; num)                ++cnt2;            &#x2F;&#x2F;candidate和cnt的判断不能交换顺序，否则可能为两个候选值赋为同一个值            else if(cnt1 &#x3D;&#x3D; 0)            &#123;                can1 &#x3D; num;                cnt1 &#x3D; 1;            &#125;            else if(cnt2 &#x3D;&#x3D; 0)            &#123;                can2 &#x3D; num;                cnt2 &#x3D; 1;            &#125;            else            &#123;                --cnt1;                --cnt2;            &#125;        &#125;        &#x2F;&#x2F;验证是否满足条件        vector&lt;int&gt; res;        cnt1 &#x3D; 0, cnt2 &#x3D; 0;        for(int num:nums)        &#123;            if(can1 &#x3D;&#x3D; num)                ++cnt1;        &#x2F;&#x2F;注意一定要用else if，保证两数的判断是有先后的，才不会出现两候选数相同的情况            else if(can2 &#x3D;&#x3D; num)                 ++cnt2;        &#125;        if(cnt1 &gt; nums.size()&#x2F;3)            res.emplace_back(can1);        if(cnt2 &gt; nums.size()&#x2F;3)            res.emplace_back(can2);        return res;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摩尔投票 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 const char* 和 const int 的一个小问题</title>
      <link href="/yyds/91c00396.html"/>
      <url>/yyds/91c00396.html</url>
      
        <content type="html"><![CDATA[<p>最近发现使用const int 定义变量时若不设初始值，编译器会报错。然而使用const char<em> 时却不会，并且使用const char</em> 明明是const常量，却仍然可以修改其值。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int main()&#123;　 const int b;    &#x2F;&#x2F;报错    const char* a;    a &#x3D; &quot;hjd&quot;;    a &#x3D; &quot;sdf&quot;;      &#x2F;&#x2F;不会报错&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现原来是概念有些混淆，const char* 是常量指针，可以修改地址，不可修改指针指向的值，所以并未违背常量不可修改值的规定。这里由“hjd”变为“sdf”实际上是修改了指针a指向的地址。</p>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL删除三张表的联合信息</title>
      <link href="/yyds/de05866e.html"/>
      <url>/yyds/de05866e.html</url>
      
        <content type="html"><![CDATA[<p>如要删除三张表的联合信息，使用MYSQL的左连接方法：LEFT JOIN ON</p><p>例如，删除三张表中张三的所有数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">delete student,sc,stu     from student left join sc on student.sno &#x3D; sc.sno                 left join stu on sc.sno &#x3D; stu.sno                where student.sname &#x3D; &#39;张三&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MYSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019: &quot;__declspec(dllimport)  使用irrKlang的库时报错</title>
      <link href="/yyds/cf469c8c.html"/>
      <url>/yyds/cf469c8c.html</url>
      
        <content type="html"><![CDATA[<ul><li>先说原因，之前一直使用的是32位的glfw库，今天下载irrKlang的时候下了个64位的，查了好久才发现原来这也可以导致LNK2019错误</li><li>具体报错就不放了，解决方案就是重新下了个32的irrKlang然后替换相应的文件</li><li>之前还遇到过两种LNK2019的报错：<a href="https://321hjd.github.io/yyds/bc78a76b.html">https://321hjd.github.io/yyds/bc78a76b.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error：非常量引用只能绑定到左值</title>
      <link href="/yyds/868c3c39.html"/>
      <url>/yyds/868c3c39.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天遇到一个关于C++引用的错误，说实话以前确实一直没注意到过引用还有这个规则</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;Game.cpp1&gt;d:\18482\visual studio\source\repos\opengl\opengl\game.cpp(55): error C2664: “void SpriteRenderer::DrawSprite(Texture2D &amp;,glm::vec2,glm::vec2,GLfloat,glm::vec3)”: 无法将参数 1 从“Texture2D”转换为“Texture2D &amp;”1&gt;d:\18482\visual studio\source\repos\opengl\opengl\game.cpp(55): note: 非常量引用只能绑定到左值1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先解释左值和右值的区别：</p><ul><li>从字面意思看，左右值就是在“=”两端的变量或表达式（以前我一直是这样理解的/手动狗头），但其实不是这样的。</li><li><strong>左值（Location Value）</strong>：并不是left_value，指的是<strong>可以寻址</strong>。指的是如果一个表达式可以引用到某一个对象，并且这个对象是一块内存空间且可以被检查和存储，那么这个表达式就可以作为一个左值。</li><li><strong>右值（Read Value）</strong>：也就是<strong>可读。</strong>指的是引用了一个存储在某个内存地址里的“数据”。</li></ul><p>例子：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(int &amp;a)&#123;    cout &lt;&lt; a;&#125;void main()&#123;    double i &#x3D; 4;    func(i);&#x2F;&#x2F;这里进行了强制类型转换，会产生一个临时变量&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>上面的写法是不合法的，会报错“非常量的引用只能绑定到左值”，按照正常理解 i 其实是一个左值，但是由于定义的 i 和func函数需要的参数并不是相同类型，这里实际上经过了一次强制类型转换，并且生成了一个临时变量<strong>（而临时变量都是常量，不能作为左值，只能由const引用，不能改变值）</strong>，所以这里非const的引用会报错</p></li><li><p>这里解决方式有两种</p><ul><li><p>让实参和形参类型相同，不必进行强制类型转换</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(int &amp;a)&#123; 　cout &lt;&lt; a; &#125; void main() &#123; 　　int i &#x3D; 4; &#x2F;&#x2F;修改i的类型　　func(i);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用右值引用</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(const int &amp;a)&#x2F;&#x2F;右值引用&#123; 　cout &lt;&lt; a; &#125; void main() &#123; 　　double i &#x3D; 4; 　　func(i);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p>另外，右值引用可以延长临时变量的生命周期，比如这个例子：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int func(int a)&#123;     return  a +&#x3D; 10;　　　　　　&#x2F;&#x2F;函数返回值也是一个临时变量&#125;void main() &#123;　　int i &#x3D; 10;　　const int &amp;b &#x3D; func(i);　　&#x2F;&#x2F;变量a是对函数返回值（临时变量）的引用，因此函数返回值不会在此时立即销毁，而是一直延续到整个程序结束　　cout&lt;&lt;b;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019: 无法解析的外部符号 _stbi_load 使用stb_image.h库的错误</title>
      <link href="/yyds/31791ebb.html"/>
      <url>/yyds/31791ebb.html</url>
      
        <content type="html"><![CDATA[<p>此错误在使用stb_image.h图片加载库时遇到</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;ResourceManager.cpp1&gt;ResourceManager.obj : error LNK2019: 无法解析的外部符号 _stbi_load，该符号在函数 &quot;private: static class Texture2D __cdecl ResourceManager::loadTextureFromFile(char const *,unsigned char)&quot; (?loadTextureFromFile@ResourceManager@@CA?AVTexture2D@@PBDE@Z) 中被引用1&gt;ResourceManager.obj : error LNK2019: 无法解析的外部符号 _stbi_image_free，该符号在函数 &quot;private: static class Texture2D __cdecl ResourceManager::loadTextureFromFile(char const *,unsigned char)&quot; (?loadTextureFromFile@ResourceManager@@CA?AVTexture2D@@PBDE@Z) 中被引用1&gt;D:\18482\visual studio\source\repos\OpenGL\Debug\OpenGL.exe : fatal error LNK1120: 2 个无法解析的外部命令1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解决：在include”stb_image.h”前加上#define STB_IMAGE_IMPLEMENTATION，通过定义STB_IMAGE_IMPLEMENTATION，预处理器会修改头文件，让其只包含相关的函数定义源码，相当于把这个头文件变为一个 .cpp 文件（原stb_image.h库的教程给出，具体原因未知）</p>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019 无法解析的外部符号 __imp___invalid_parameter 解决方案</title>
      <link href="/yyds/bc78a76b.html"/>
      <url>/yyds/bc78a76b.html</url>
      
        <content type="html"><![CDATA[<p>此报错是在用OpenGL画图时遇到的（OpenGL是项目名称）：</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;glad.c1&gt;源.cpp1&gt;源.obj : error LNK2019: 无法解析的外部符号 __imp___invalid_parameter，该符号在函数 &quot;void * __cdecl std::_Allocate_manually_vector_aligned&lt;struct std::_Default_allocate_traits&gt;(unsigned int)&quot; (??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z) 中被引用1&gt;源.obj : error LNK2019: 无法解析的外部符号 __imp___CrtDbgReport，该符号在函数 &quot;void * __cdecl std::_Allocate_manually_vector_aligned&lt;struct std::_Default_allocate_traits&gt;(unsigned int)&quot; (??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z) 中被引用1&gt;msvcprtd.lib(locale0_implib.obj) : error LNK2019: 无法解析的外部符号 __imp___free_dbg，该符号在函数 &quot;public: static void __cdecl std::_Fac_node::operator delete(void *)&quot; (??3_Fac_node@std@@SAXPAX@Z) 中被引用1&gt;msvcprtd.lib(locale0_implib.obj) : error LNK2019: 无法解析的外部符号 __imp___malloc_dbg，该符号在函数 &quot;public: static void * __cdecl std::_Fac_node::operator new(unsigned int)&quot; (??2_Fac_node@std@@SAPAXI@Z) 中被引用1&gt;D:\18482\visual studio\source\repos\OpenGL\Debug\OpenGL.exe : fatal error LNK1120: 4 个无法解析的外部命令1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在网上找了找，大概有两种可能：</p><ul><li>缺少依赖库，这种情况直接查找符号对应的库，然后将其添加至依赖库（因为这里是第二种情况，尝试失败）</li><li>运用了错误的运行库</li></ul><pre class="line-numbers language-none"><code class="language-none">在一程序中使用不同类型的运行时库或使用调试和非调试版本的运行时库，则将收到此链接错误。例如，编译一个文件以使用一种运行时库，而编译另一个文件以使用另一种运行时库（例如单线程运行时库对多线程运行时库），试图链接它们，则将得到此警告。应将所有源文件编译为使用同一运行时库。 其实就是调正编译器选项参数：&#x2F;MD、&#x2F;MT 和 &#x2F;LD此方案来自：https:&#x2F;&#x2F;blog.csdn.net&#x2F;jean7155&#x2F;article&#x2F;details&#x2F;6924806<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>解决：项目属性-&gt;C/C++-&gt;代码生成-&gt;运行库：选择正确的运行库，这个需要查一下不同库的意思，如果不想查就挨个试一遍。。。</li><li>我这里原来使用的是：多线程调试 DLL (/MDd)，更改为：多线程 DLL (/MD)，解决</li></ul>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL安装及配置</title>
      <link href="/yyds/9f37452d.html"/>
      <url>/yyds/9f37452d.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h1><ul><li>Windows 10 64位家庭版</li><li>vs版本：Visual Studio 2017</li></ul><h1 id="二、配置OpenGL所需"><a href="#二、配置OpenGL所需" class="headerlink" title="二、配置OpenGL所需"></a>二、配置OpenGL所需</h1><ul><li>GLFW</li><li>GLAD</li></ul><h1 id="三、步骤"><a href="#三、步骤" class="headerlink" title="三、步骤"></a>三、步骤</h1><h2 id="1-配置GLFW"><a href="#1-配置GLFW" class="headerlink" title="　　1.配置GLFW"></a>　　1.配置GLFW</h2><ul><li>进入官网下载GLFW并解压：<a href="https://www.glfw.org/download.html">GLFW下载</a></li><li>这里选择32位的，因为64位的可能有些问题</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/cf3f2b89bc4d4b76.png" alt="img"></li><li>进入VS2017创建空项目，在项目文件夹下创建includes和libs两个文件夹（如创建项目OpenGL，则为OpenGL/OpenGL/includes）</li><li>将解压文件中lib-vc2017文件夹下的.lib文件拷贝进刚刚创建的libs下，同时将include下的.h文件拷贝进刚刚创建的includes下</li><li>在项目名处右键-&gt;属性-&gt;VC++目录-&gt;引用目录-&gt;编辑：粘贴项目文件夹下的.h文件所在目录</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/3f9b561f13542bd6.png" alt="img"></li><li>同理，库目录-&gt;编辑：粘贴项目文件夹下的.lib文件所在目录</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/2b0a13d41f367eb2.png" alt="img"></li><li>接着将为项目添加依赖项：仍然是属性-&gt;链接器-&gt;输入-&gt;附加依赖项-&gt;编辑，将opengl32.lib，glfw3.lib，msvcrt.lib添加进去</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/34dbf4338810d7de.png" alt="img"></li></ul><h2 id="2-GLAD"><a href="#2-GLAD" class="headerlink" title="　　2.GLAD"></a>　　2.GLAD</h2><ul><li>进入GLAD官网：<a href="https://glad.dav1d.de/">GLAD下载</a></li><li>Language选C\C++，Profile选core，version根据需要选择（3.3版本及以上），然后GRNERATE，之后选择zip文件下载并解压</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/a5647816217d1437.png" alt="img"></li><li>将include下的.h文件全部拷贝进项目文件夹下的includes下，将src下的glad.c拷贝进项目文件夹下</li><li>然后进入vs，添加源文件-&gt;现有项，将glad.c添加进项目</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/16650f8004bd5b7f.png" alt="img"></li><li>至此库文件配置完成，接下来测试是否能正常使用OpenGL</li></ul><h2 id="3-测试OpenGL"><a href="#3-测试OpenGL" class="headerlink" title="　　3.测试OpenGL"></a>　　3.测试OpenGL</h2><ul><li><p>创建源文件，首先需要引用glad.h和glfw3.h文件</p></li><li><p>因为使用的是自己添加的文件，这里引用需要使用“ “而非&lt;&gt;，使用” “时，它会自动出现你所添加的目录</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&quot;includes&#x2F;glad.h&quot;#include&quot;includes&#x2F;glfw3.h&quot;#include &lt;iostream&gt;void framebuffer_size_callback(GLFWwindow* window, int width, int height);void processInput(GLFWwindow *window); &#x2F;&#x2F; settings const unsigned int SCR_WIDTH &#x3D; 800;const unsigned int SCR_HEIGHT &#x3D; 600;int main() &#123;    &#x2F;&#x2F; glfw: initialize and configure    &#x2F;&#x2F; ------------------------------    glfwInit();        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);    #ifdef __APPLE__ glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);    &#x2F;&#x2F; uncomment this statement to fix compilation on OS X#endif&#x2F;&#x2F; glfw window creation&#x2F;&#x2F; --------------------GLFWwindow* window &#x3D; glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, &quot;LearnOpenGL&quot;, NULL, NULL);    if (window &#x3D;&#x3D; NULL)    &#123;std::cout &lt;&lt; &quot;Failed to create GLFW window&quot; &lt;&lt; std::endl;         glfwTerminate();         return -1;    &#125;    glfwMakeContextCurrent(window);    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);    &#x2F;&#x2F; glad: load all OpenGL function pointers    &#x2F;&#x2F; ---------------------------------------    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))    &#123;        std::cout &lt;&lt; &quot;Failed to initialize GLAD&quot; &lt;&lt; std::endl; return -1;    &#125;    &#x2F;&#x2F; render loop    &#x2F;&#x2F; -----------    while (!glfwWindowShouldClose(window))    &#123;        &#x2F;&#x2F; input &#x2F;&#x2F; -----        processInput(window);        &#x2F;&#x2F; glfw: swap buffers and poll IO events (keys pressed&#x2F;released, mouse moved etc.)        &#x2F;&#x2F; -------------------------------------------------------------------------------        glfwSwapBuffers(window);        glfwPollEvents();    &#125;    &#x2F;&#x2F; glfw: terminate, clearing all previously allocated GLFW resources.     &#x2F;&#x2F; ------------------------------------------------------------------     glfwTerminate();     return 0; &#125; &#x2F;&#x2F; process all input: query GLFW whether relevant keys are pressed&#x2F;released this frame and react accordingly &#x2F;&#x2F; --------------------------------------------------------------------------------------------------------- void processInput(GLFWwindow *window) &#123;    if(glfwGetKey(window, GLFW_KEY_ESCAPE) &#x3D;&#x3D; GLFW_PRESS)     glfwSetWindowShouldClose(window, true); &#125;&#x2F;&#x2F; glfw: whenever the window size changed (by OS or user resize) this callback function executes &#x2F;&#x2F; --------------------------------------------------------------------------------------------- void framebuffer_size_callback(GLFWwindow* window, int width, int height) &#123;     &#x2F;&#x2F; make sure the viewport matches the new window dimensions; note that width and     &#x2F;&#x2F; height will be significantly larger than specified on retina displays.     glViewport(0, 0, width, height); &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>出现图示窗口即可正常使用OpenGL</p></li><li><p><img src="https://ftp.bmp.ovh/imgs/2020/03/db51f81eec2503b4.png" alt="img"></p></li><li><p>若出现报错：默认库MSVCRTD与……冲突，属性-&gt;链接器-&gt;输入-&gt;忽略特定默认库-&gt;编辑，将MSVCRTD.lib添加进去即可</p></li></ul><h1 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h1><p>最后推荐一个学习OpenGL的网站，教程很舒服，本博客的测试源码也出自此：</p><p><a href="https://learnopengl-cn.github.io/">https://learnopengl-cn.github.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
