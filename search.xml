<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>信赖域法</title>
      <link href="/yyds/3b5150c4.html"/>
      <url>/yyds/3b5150c4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最速下降法、牛顿法、共轭梯度法均为线搜索法，其一般策略是给定点 $\boldsymbol{x}^{(k)}$ 后，定义搜索方向 $\boldsymbol{d}^{(k)}$ ，并沿着该方向进行一维搜索。而信赖域法的搜索范围是一个以 $\boldsymbol{x}^{(k)}$ 为中心的球域（信赖域），在此域内优化目标函数的二次逼近式，直到满足精度要求。信赖域法稳定性强，收敛性好，既有牛顿法的快速局部收敛性，又有理想的全局收敛性质，且不要求目标函数的 Hessian 矩阵正定。</p></blockquote><h2 id="一、信赖域法"><a href="#一、信赖域法" class="headerlink" title="一、信赖域法"></a>一、信赖域法</h2><p><strong>无约束问题</strong><br>$$<br>\min\quad f(\boldsymbol{x}),\quad \boldsymbol{x}\in\mathbb{R}^n<br>$$<br><strong>二次逼近式</strong></p><p>&emsp;&emsp;将 $f(\boldsymbol{x})$ 在 $\boldsymbol{x}^{(k)}$ 处进行 Taylor 展开并取二次近似<br>$$<br>f(\boldsymbol{x}) \approx f\left(\boldsymbol{x}^{(k)}\right)+\nabla f\left(\boldsymbol{x}^{(k)}\right)^{\mathrm{T}}\left(\boldsymbol{x}-\boldsymbol{x}^{(k)}\right)+\frac{1}{2}\left(\boldsymbol{x}-\boldsymbol{x}^{(k)}\right)^{\mathrm{T}} {\nabla}^{2} f\left(\boldsymbol{x}^{(k)}\right)\left(\boldsymbol{x}-\boldsymbol{x}^{(k)}\right)<br>$$<br>记 $\boldsymbol d=\boldsymbol{x}-\boldsymbol{x}^{(k)}$ ，则得到一个二次模型 $\varphi_{k}(\boldsymbol{d})$ ，并且为了在 $\boldsymbol{x}^{(k)}$ 附近用  $\varphi_{k}(\boldsymbol{d})$ 近似 $f\left(\boldsymbol{x}^{(k)}+\boldsymbol{d}\right)$ ，需要限定 $|\boldsymbol{d}| \leqslant r_{k}$ ，$r_{k}$ 是常数，称为信赖域半径。因此原目标优化问题可以归结为求解一系列子问题：<br>$$<br>\begin{aligned}<br>&amp;\min \quad \varphi_{k}(\boldsymbol{d}) \stackrel{\text { def }}{=} f\left(\boldsymbol{x}^{(k)}\right)+\nabla f\left(\boldsymbol{x}^{(k)}\right)^{\mathrm{T}} \boldsymbol{d}+\frac{1}{2} \boldsymbol{d}^{\mathrm{T}} \nabla^{2} f\left(\boldsymbol{x}^{(k)}\right) \boldsymbol{d} \<br>&amp;\text { s.t. }|\boldsymbol{d}| \leqslant  r_{k}<br>\end{aligned}<br>$$<br>其中，范数未作规定，这里讨论取欧式范数，即 $|\cdot|=|\cdot|_{2}$ ，这样约束条件可写为 $(\boldsymbol d^\mathrm{T}\boldsymbol d)^{\frac{1}{2}}\le{r}_k$ 。</p><p><strong>搜索方向</strong></p><p>&emsp;&emsp;该约束子问题可通过<strong>对偶法</strong>求解（<a href="https://zhuanlan.zhihu.com/p/36621652">理解KKT条件和对偶问题</a>）。若 $\boldsymbol{d}^{(k)}$ 是该问题的最优解，则存在乘子 $\hat w\ge 0$ ，使得<br>$$<br>\begin{aligned}<br>&amp;\nabla^{2} f\left(\boldsymbol{x}^{(k)}\right) \boldsymbol{d}^{(k)}+\nabla f\left(\boldsymbol{x}^{(k)}\right)+\frac{\hat{w}}{\left(\boldsymbol d^{(k)\mathrm{T}}\boldsymbol d^{(k)}\right)^{\frac{1}{2}}} \boldsymbol{d}^{(k)}=0 \<br>&amp;\hat{w}\left(|\boldsymbol{d}^{(k)} |-r_{k}\right)=0 .<br>\end{aligned}<br>$$<br>记作<br>$$<br>w=\frac{\hat{w}}{\left(\boldsymbol{d}^{(k) \mathrm T} \boldsymbol{d}^{(k)}\right)^{\frac{1}{2}}}<br>$$<br>得到 $\boldsymbol{d}^{(k)}$ 是问题最优解的必要条件（<strong>KKT条件</strong>）<br>$$<br>\left{\begin{array}{l}<br>\nabla^{2} f\left(\boldsymbol{x}^{(k)}\right) \boldsymbol d^{(k)}+w \boldsymbol d^{(k)}=-\nabla f\left(\boldsymbol{x}^{(k)}\right), \<br>w\left(\left|\boldsymbol{d}^{(k)}\right|-r_{k}\right)=0, \<br>w \geqslant 0, \<br>\left|\boldsymbol{d}^{(k)}\right| \leqslant r_{k} .<br>\end{array}\right.<br>$$<br>假设 $\nabla^{2} f\left(\boldsymbol x^{(k)}\right)+w \boldsymbol{I}$ 可逆，则由上式可得到<br>$$<br>\left|\boldsymbol{d}^{(k)}\right|=\left|\left(\nabla^{2} f\left(\boldsymbol{x}^{(k)}\right)+w \boldsymbol{I}\right)^{-1} \nabla f\left(\boldsymbol{x}^{(k)}\right)\right|<br>$$<br>可知二次模型的解 $\boldsymbol{d}^{(k)}$ 与信赖域半径 $r_k$ 有关。</p><p>当信赖域半径由小到大逐渐增大时，搜索方向在最速下降方向和牛顿方向间连续变化。</p><ul><li>若 $r_k$ 充分大，则 $w$ 值可能很小，从而搜索方向接近牛顿方向，即</li></ul><p>$$<br>\boldsymbol d^{(k)} \approx-\nabla^{2} f\left(\boldsymbol x^{(k)}\right)^{-1} \nabla f\left(\boldsymbol x^{(k)}\right)<br>$$</p><ul><li>若 $r_k\rightarrow0$，则 $\boldsymbol{d}^{(k)}\rightarrow 0,w\rightarrow\infty$ ，此时搜索方向接近最速下降方向<br>$$<br>\boldsymbol{d}^{(k)} \approx-\frac{1}{w} \nabla f\left(\boldsymbol{x}^{(k)}\right)<br>$$</li></ul><p><strong>逼近判决</strong></p><p>&emsp;&emsp;求出最优解 $\boldsymbol{d}^{(k)}$ 后，点 $\boldsymbol{x}^{(k)}+\boldsymbol{d}^{(k)}$ 是否能作为原问题的近似解还需要根据用 $\varphi_{k}(\boldsymbol{d})$ 逼近 $f(\boldsymbol{x})$ 是否成功来确定。用函数实际下降量与预测下降量之比来进行衡量<br>$$<br>\rho_k=\frac{f\left(\boldsymbol{x}^{(k)}\right)-f\left(\boldsymbol{x}^{(k)}+\boldsymbol{d}^{(k)}\right)}{f\left(\boldsymbol{x}^{(k)}\right)-\varphi_{k}\left(\boldsymbol{d}^{(k)}\right)}<br>$$<br>若 $\rho_k$ 足够大，则认为逼近成功，取 $\boldsymbol{x}^{(k+1)}=\boldsymbol{x}^{(k)}+\boldsymbol{d}^{(k)}$ ；否则后继点仍取 $\boldsymbol{x}^{(k)}$ 。</p><p><strong>算法步骤</strong></p><ol><li><p>给定可行点 $\boldsymbol{x}^{(1)}$ ，信赖域半径 $r_1$ ，参数 $0&lt;\mu&lt;\eta&lt;1$ （一般取 $\mu=\frac{1}{4},\eta=\frac{3}{4}$）以及精度要求 $\varepsilon$，置 $k=1$ 。</p></li><li><p>计算 $f\left(\boldsymbol{x}^{(k)}\right), \nabla f\left(\boldsymbol{x}^{(k)}\right)$ ，若 $\left|\nabla f\left(\boldsymbol{x}^{(k)}\right)\right| \leqslant \varepsilon$ ，则停止计算，得解 $\boldsymbol{x}^{(k)}$ ；否则，计算 $\nabla^{2} f\left(\boldsymbol{x}^{(k)}\right)$ 。</p></li><li><p>求解子问题<br>$$<br>\begin{aligned}<br>&amp;\min \quad \varphi_{k}(\boldsymbol{d}) \stackrel{\text { def }}{=} f\left(\boldsymbol{x}^{(k)}\right)+\nabla f\left(\boldsymbol{x}^{(k)}\right)^{\mathrm{T}} \boldsymbol{d}+\frac{1}{2} \boldsymbol{d}^{\mathrm{T}} \nabla^{2} f\left(\boldsymbol{x}^{(k)}\right) \boldsymbol{d} \<br>&amp;\text { s.t. }|\boldsymbol{d}| \leqslant  r_{k}<br>\end{aligned}<br>$$<br>得到问题的最优解 $\boldsymbol{d}^{(k)}$ ，并计算<br>$$<br>\rho_k=\frac{f\left(\boldsymbol{x}^{(k)}\right)-f\left(\boldsymbol{x}^{(k)}+\boldsymbol{d}^{(k)}\right)}{f\left(\boldsymbol{x}^{(k)}\right)-\varphi_{k}\left(\boldsymbol{d}^{(k)}\right)}<br>$$</p></li><li><p>若 $\rho_k\le\mu$ ，则令 $\boldsymbol{x}^{(k+1)}=\boldsymbol{x}^{(k)}$ ；若 $\rho_k&gt;\mu$ ，则令 $\boldsymbol{x}^{(k+1)}=\boldsymbol{x}^{(k)}+\boldsymbol{d}^{(k)}$ 。</p></li><li><p>修改信赖域半径 $r_k$ 。若 $\rho_k\le\mu$ ，令 $r_{k+1}=\frac{1}{2}r_k$；若 $\mu&lt;\rho_k&lt;\eta$ ，令 $r_{k+1}=r_k$；若 $\rho_k\ge\eta$ ，令 $r_{k+1}=2r_k$ 。</p></li><li><p>置 $k=k+1$ ，转步骤2。</p></li></ol><p><strong>算法特点</strong></p><ol><li>不要求目标函数的 Hessian 矩阵正定。</li><li>既有牛顿法的快速局部收敛性，也有理想的全局收敛性。</li><li>算法利用二次模型来修正步长，使得目标函数的下降比线搜索方法更有效。</li><li>搜索步长受 Taylor 展开式有效的信赖域的限制，此方法又称为有限步长法。</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>《最优化理论与算法》陈宝林著。</li><li><a href="https://zhuanlan.zhihu.com/p/36621652">理解KKT条件和对偶问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 最优化方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基于导数的优化方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拟牛顿法</title>
      <link href="/yyds/9c0ec5cf.html"/>
      <url>/yyds/9c0ec5cf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>拟牛顿法的基本思想是用不包含二阶导数的矩阵近似牛顿法中的 Hessian 矩阵的逆矩阵，从而避免计算二阶导。拟牛顿法具有二次终止性，且对于一般情形具有 n 步二级收敛速率。缺点是所需存储量较大。是求解无约束最优化问题最有效的一类方法。</p></blockquote><h2 id="一、拟牛顿条件"><a href="#一、拟牛顿条件" class="headerlink" title="一、拟牛顿条件"></a>一、拟牛顿条件</h2><p>&emsp;&emsp;牛顿法的迭代公式为：<br>$$<br>\boldsymbol{x}^{(k+1)}=\boldsymbol{x}^{(k)}+\lambda_k\boldsymbol{d}^{(k)}<br>$$<br>其中， $\lambda_k$ 是沿着牛顿方向搜索的步长， $\boldsymbol{d}^{(k)}$ 是在点 $\boldsymbol{x}^{(k)}$ 处的牛顿方向：<br>$$<br>\boldsymbol{d}^{(k)}=-\nabla^2f(\boldsymbol{x}^{(k)})^{-1}\nabla f(\boldsymbol{x}^{(k)})<br>$$<br>&emsp;&emsp;为构造 $\nabla^2f(\boldsymbol{x}^{(k)})^{-1}$ 的近似矩阵 $\boldsymbol{H}<em>k$ ，先分析 $\nabla^2f(\boldsymbol{x}^{(k)})^{-1}$ 与一阶导数的关系。假设在第 $k$ 次迭代后得到点 $\boldsymbol{x}^{(k+1)}$ ，在该点处将目标函数进行二阶 Taylor 近似：<br>$$<br>\begin{aligned}<br>f(\boldsymbol{x}) \approx &amp; f\left({\boldsymbol{x}}^{(k+1)}\right)+\nabla f\left({\boldsymbol{x}}^{(k+1)}\right)^{\mathrm{T}}\left({\boldsymbol{x}}-{\boldsymbol{x}}^{(k+1)}\right) \<br>&amp;+\frac{1}{2}\left({\boldsymbol{x}}-{\boldsymbol{x}}^{(k+1)}\right)^{\mathrm{T}} \nabla^{2} f\left({\boldsymbol{x}}^{(k+1)}\right)\left({\boldsymbol{x}}-{\boldsymbol{x}}^{(k+1)}\right)<br>\end{aligned}<br>$$<br>因此在 $\boldsymbol{x}^{(k+1)}$ 附近有（移项然后按求导定义变换）：<br>$$<br>\nabla f(\boldsymbol{x}) \approx \nabla f\left(\boldsymbol{x}^{(k+1)}\right)+\nabla^{2} f\left(\boldsymbol{x}^{(k+1)}\right)\left(\boldsymbol{x}-\boldsymbol{x}^{(k+1)}\right)<br>$$<br>令 $\boldsymbol{x}=\boldsymbol{x}^{(k)}$ ，则<br>$$<br>\nabla f\left({\boldsymbol{x}}^{(k)}\right) \approx \nabla f\left({\boldsymbol{x}}^{(k+1)}\right)+\nabla^{2} f\left({\boldsymbol{x}}^{(k+1)}\right)\left({\boldsymbol{x}}^{(k)}-{\boldsymbol{x}}^{(k+1)}\right)<br>$$<br>记：<br>$$<br>\begin{aligned}<br>&amp;\boldsymbol{p}^{(k)}={\boldsymbol{x}}^{(k+1)}-{\boldsymbol{x}}^{(k)} \<br>&amp;\boldsymbol{q}^{(k)}=\nabla f\left({\boldsymbol{x}}^{(k+1)}\right)-\nabla f\left({\boldsymbol{x}}^{(k)}\right)<br>\end{aligned}<br>$$<br>则有：<br>$$<br>\boldsymbol{q}^{(k)} \approx \nabla^{2} f\left(\boldsymbol{x}^{(k+1)}\right) \boldsymbol{p}^{(k)}<br>$$<br>假设 Hessian 矩阵 $\nabla^{2} f\left(\boldsymbol{x}^{(k+1)}\right) $ 可逆，则有（<strong>Hessian矩阵的逆与一阶导的关系式</strong>）：<br>$$<br>\boldsymbol{p}^{(k)} \approx \nabla^{2} f\left({\boldsymbol{x}}^{(k+1)}\right)^{-1} \boldsymbol{q}^{(k)}<br>$$<br>因此当计算出 $\boldsymbol{p}^{(k)}$ 和 $\boldsymbol{q}^{(k)}$ 后，就可以根据上式估计出点 $\boldsymbol{x}^{(k+1)}$ 处的 Hessian 矩阵的逆，因此可用不包含二阶导数的矩阵 $\boldsymbol{H}</em>{k+1}$ 替代 $\nabla^{2} f\left({\boldsymbol{x}}^{(k+1)}\right)^{-1}$ ，需要满足：<br>$$<br>\boldsymbol{p}^{(k)}=\bold{H}_{k+1}\boldsymbol{q}^{(k)}<br>$$<br>称之为<strong>拟牛顿条件</strong>。</p><h2 id="二、秩-1-校正"><a href="#二、秩-1-校正" class="headerlink" title="二、秩 1 校正"></a>二、秩 1 校正</h2><p><strong>原理</strong></p><p>&emsp;&emsp;当 $\nabla^{2} f\left({\boldsymbol{x}}^{(k)}\right)^{-1}$ 是 $n$ 阶<strong>对称正定</strong>矩阵时，满足拟牛顿条件的矩阵 $\boldsymbol{H}<em>{k}$ 也应该是 $n$ 阶对称正定矩阵。这种近似矩阵的一般构造策略是：初始的 $\boldsymbol{H}</em>{k}$ （$k=1$）取任意一个 $n$ 阶对称正定矩阵（一般取单位矩阵 $I$ ），然后通过修正  $\boldsymbol{H}<em>{k}$ 给出  $\boldsymbol{H}</em>{k+1}$ ，令<br>$$<br>\boldsymbol{H}<em>{k+1}=\bold{H}</em>{k}+\Delta\bold{H}<em>{k}<br>$$<br>其中，$\Delta\bold{H}</em>{k}$ 称为<strong>校正矩阵</strong>。</p><p>&emsp;&emsp;确定 $\Delta\bold{H}<em>{k}$ 的方法之一是令<br>$$<br>\Delta\bold{H}</em>{k}=\alpha_{k} \boldsymbol{z}^{(k)}\left(\boldsymbol{z}^{(k)}\right)^{\mathrm{T}}<br>$$<br>其中，$\alpha_k$ 是一个常数，$z^{(k)}$ 是 $n$ 维列向量。这样得到的 $\Delta\bold{H}<em>{k}$ 是一个秩为1的对称矩阵，$\boldsymbol{z}^{(k)}$ 的选择应使得拟牛顿条件得到满足，因此<br>$$<br>\boldsymbol{p}^{(k)}=\bold{H}</em>{k} \boldsymbol{q}^{(k)}+\alpha_{k} \boldsymbol{z}^{(k)} \boldsymbol{z}^{(k) \mathrm{T}} \boldsymbol{q}^{(k)}<br>$$<br>等式两端同乘 $\boldsymbol{q}^{(k)\mathrm{T}}$ ，整理可得到<br>$$<br>\boldsymbol{q}^{(k) \mathrm{T}}\left(\boldsymbol{p}^{(k)}-\boldsymbol{H}<em>{k} \boldsymbol{q}^{(k)}\right)=\alpha</em>{k}\left(\boldsymbol{z}^{(k) \mathrm{T}} \boldsymbol{q}^{(k)}\right)^{2}<br>$$<br>另外<br>$$<br>\boldsymbol{z}^{(k)}=\frac{\boldsymbol{p}^{(k)}-\boldsymbol{H}<em>{k} \boldsymbol{q}^{(k)}}{\alpha</em>{k} \boldsymbol{z}^{(k) \mathrm{T}} \boldsymbol{q}^{(k)}}<br>$$<br>从而可得到 <strong>秩1校正公式</strong>：<br>$$<br>\boldsymbol{H}<em>{k+1}=\bold{H}</em>{k}+\frac{\left(\boldsymbol{p}^{(k)}-\boldsymbol{H}<em>{k} \boldsymbol{q}^{(k)}\right)\left(\boldsymbol{p}^{(k)}-\boldsymbol{H}</em>{k} \boldsymbol{q}^{(k)}\right)^{\mathrm{T}}}{\boldsymbol{q}^{(k) T}\left(\boldsymbol{p}^{(k)}-\boldsymbol{H}_{k} \boldsymbol{q}^{(k)}\right)}<br>$$<br><strong>用法</strong></p><p>在利用该公式进行极小化目标函数 $f(x)$ 时，第 $k$ 次迭代中令搜索方向为<br>$$<br>\boldsymbol{d}^{(k)}=-\boldsymbol{H}<em>{k} \nabla f\left(\boldsymbol{x}^{(k)}\right)<br>$$<br>然后沿着该搜索方向搜索，计算步长 $\lambda_k$ ，从而确定后继点 $x^{(k+1)}$ 。进而计算后继点  $x^{(k+1)}$ 处的梯度 $\nabla f(\boldsymbol{x}^{(k+1)})$ 以及 $\boldsymbol{p}^{(k)}$ 和 $\boldsymbol{q}^{(k)}$ ，再利用 秩1校正公式 计算 $\boldsymbol{H}</em>{k+1}$ ，接着继续计算搜索方向 $\boldsymbol{d}^{(k+1)}$。以此类推直至满足算法的终止条件（最大迭代次数或精度要求）。</p><p><strong>优缺点</strong></p><ul><li><p>优点</p><ol><li>不需要计算 Hessian 矩阵并求逆；</li><li>具有二次终止性，收敛性好。</li></ol></li><li><p>缺点</p><ol><li><p>需要满足一定的条件；</p><blockquote><p>仅当 $\boldsymbol{q}^{(k) \mathrm{T}}\left(\boldsymbol{p}^{(k)}-\boldsymbol{H}<em>{k} \boldsymbol{q}^{(k)}\right)&gt;0$ ，所求 $\boldsymbol{H}</em>{k+1}$ 才具有正定性。</p></blockquote></li><li><p>并且上一点是无法保证的，即使满足条件，也可能由于舍入误差的影响，导致 $\Delta\bold{H}_k$ 无界，数值计算困难。</p></li></ol></li></ul><h2 id="三、DFP算法（变尺度法）"><a href="#三、DFP算法（变尺度法）" class="headerlink" title="三、DFP算法（变尺度法）"></a>三、DFP算法（变尺度法）</h2><p><strong>校正矩阵</strong><br>$$<br>\Delta \boldsymbol{H}<em>{k}=\frac{\boldsymbol{p}^{(k)} \boldsymbol{p}^{(k) T}}{\boldsymbol{p}^{(k) T} \boldsymbol{q}^{(k)}}-\frac{\boldsymbol{H}</em>{k} \boldsymbol{q}^{(k)} \boldsymbol{q}^{(k) \mathrm{T}} \boldsymbol{H}<em>{k}}{\boldsymbol{q}^{(k) T} \boldsymbol{H}</em>{k} \boldsymbol{q}^{(k)}}<br>$$<br><strong>DFP公式</strong></p><p>这样定义的校正矩阵能够使得 $\boldsymbol{H}<em>{k+1}$ 满足拟牛顿条件，记为 <strong>DFP 公式</strong>，表示为<br>$$<br>\boldsymbol{H}</em>{k+1}=\bold{H}<em>{k}+\frac{\boldsymbol{p}^{(k)} \boldsymbol{p}^{(k) T}}{\boldsymbol{p}^{(k) T} \boldsymbol{q}^{(k)}}-\frac{\boldsymbol{H}</em>{k} \boldsymbol{q}^{(k)} \boldsymbol{q}^{(k) \mathrm{T}} \boldsymbol{H}<em>{k}}{\boldsymbol{q}^{(k) T} \boldsymbol{H}</em>{k} \boldsymbol{q}^{(k)}}<br>$$<br>其计算步骤与秩1校正公式近似：</p><ol><li><p>选取初始点 $x^{(1)}$ ，给定终止精度要求 $\varepsilon&gt;0$ 。</p></li><li><p>置 $\boldsymbol{H}<em>{1}=\bold{I}</em>{n}$ （单位矩阵），计算在点 $x^{(1)}$ 处的梯度<br>$$<br>\boldsymbol{g}_1=\nabla f(\boldsymbol{x}^{(1)})<br>$$<br>置 $k=1$ 。</p></li><li><p>搜索方向 $\boldsymbol d^{(k)}=-\boldsymbol H_{k} \boldsymbol g_{k}$ 。</p></li><li><p>从  $\boldsymbol x^{(k)}$ 出发，沿着 $\boldsymbol d^{(k)}$ 方向搜索，求出步长 $\lambda_k$ ，使得 $\lambda_k=\arg\min _\limits{\lambda \geq 0} f\left(\boldsymbol x^{(k)}+\lambda \boldsymbol d^{(k)}\right)$ 。然后迭代搜索点 $\boldsymbol x^{(k+1)}=\boldsymbol x^{(k)}+\lambda_k\boldsymbol d^{(k)}$ 。</p></li><li><p>检验是否达到终止条件（$\left|\nabla f\left(\boldsymbol{x}^{(k+1)}\right)\right| \leqslant \varepsilon$），若达到则终止迭代；否则进入第6步。</p></li><li><p>若 $k=n$ ，则令 $\boldsymbol x^{(1)}=\boldsymbol x^{(k+1)}$ ，返回步骤2；否则进入步骤7。 </p></li><li><p>令 $\boldsymbol g_{(k+1)}=\nabla f(\boldsymbol{x}^{(k+1)}),\boldsymbol p^{(k)}=\boldsymbol x^{(k+1)}-\boldsymbol x^{(k)}, \boldsymbol q^{(k)}=\boldsymbol g_{k+1}-\boldsymbol g_{k}$ 。利用 DFP 公式计算 $\boldsymbol{H}_{k+1}$ ，置 $k=k+1$ ，返回步骤3。</p></li></ol><p><strong>优缺点</strong></p><ul><li>用 DFP 方法构造出来的 $\boldsymbol{H}_{k}$ 均为对称正定矩阵。</li><li>具有二次终止性，且对于一般情形具有 n 步二级收敛速率。</li></ul><h2 id="四、BFGS公式及Broyden族"><a href="#四、BFGS公式及Broyden族" class="headerlink" title="四、BFGS公式及Broyden族"></a>四、BFGS公式及Broyden族</h2><blockquote><p>另一种形式的拟牛顿条件（DFP公式的对偶公式）。</p><p>参考《最优化理论与算法》P314页。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>《最优化理论与算法》陈宝林著。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 最优化方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基于导数的优化方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惩罚函数法</title>
      <link href="/yyds/a20e437d.html"/>
      <url>/yyds/a20e437d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>基本思想：通过构造<strong>惩罚函数</strong>将约束问题转化为无约束问题，进而用无约束最优化方法求解。主要分为<strong>内点法</strong>和<strong>外点法</strong>。</p><p>注意：罚函数法<strong>对目标函数的凹凸性没有要求</strong>，且结合启发式算法（如遗传算法、蚁群算法、禁忌搜索等）几乎可以求解任何问题。因为启发式算法无需目标函数的梯度等信息。</p></blockquote><h2 id="一、惩罚函数"><a href="#一、惩罚函数" class="headerlink" title="一、惩罚函数"></a>一、惩罚函数</h2><p><strong>约束优化问题</strong></p><script type="math/tex; mode=display">\begin{array}{ll}\min & f(\boldsymbol{x}) \\\text { s. t. } & g_{i}(\boldsymbol{x}) \geqslant 0, \quad i=1, \cdots, p \\& h_{j}(\boldsymbol{x})=0, \quad j=1, \cdots, q\end{array}</script><p>其中，$f(\boldsymbol{x}),g_i(\boldsymbol{x})(i=1,2,\cdots,p)$ 和 $h_j(\boldsymbol{x})(j=1,2,\cdots,q)$ 是 $\mathbb{R}^n$ 上的连续函数。</p><p>&emsp;&emsp;由于约束条件是非线性的，不能用消元法将其转换为无约束问题，在求解时需同时考虑目标函数值下降和满足约束条件。可以通过由目标函数和约束条件组成惩罚函数，将原问题转化为极小化惩罚函数的无约束问题。</p><p><strong>惩罚函数</strong></p><p>&emsp;&emsp;对于一般情形（多个等式/不等式约束条件），<strong>惩罚函数</strong>的一般形式为：</p><script type="math/tex; mode=display">\phi(\boldsymbol{x},\boldsymbol{r},\boldsymbol{m})=f(\boldsymbol{x})+\boldsymbol{r} \sum_{i=1}^{p} G\left[g_{i}(x)\right]+\boldsymbol{m} \sum_{j=1}^{q} H\left[h_{j}(x)\right]</script><p>其中，$\boldsymbol{r},\boldsymbol{m}$ 称为<strong>罚因子</strong>，${r}G\left[g_{i}(x)\right],{m}<br>H\left[h_{j}(x)\right]$ 称为<strong>惩罚项</strong>。且其典型构造方法为：</p><script type="math/tex; mode=display">\left\{\begin{array}{l}G\left[g_{i}(x)\right]= \begin{cases}\frac{1}{g_{i}(x)}\;\text{or}\;-\ln\left(g_{i}(x)\right)&\text{(内点形式)} \\\left\{\min \left[0, g_{i}(x)\right]\right\}^{2}&(\text{外点形式})\end{cases} \\H\left[h_{j}(x)\right]=\left[h_{j}(x)\right]^{2}\end{array}\right.</script><p>若要使用内点形式，且统一使用一个罚因子序列，则可以使 $\boldsymbol{m}^{(k)}=\frac{1}{\sqrt{\boldsymbol{r}^{(k)}}}$ （对于外点法，罚因子是递增序列，对于内点法，罚因子是递减序列）。</p><p><strong>基本原理</strong></p><ul><li><p>当 $\boldsymbol{x}$ 为可行点时，惩罚项等于0，即 $\phi(\boldsymbol{x},\boldsymbol{r},\boldsymbol{m})=f(\boldsymbol{x})$ ；</p></li><li><p>当 $\boldsymbol{x}$ 为不可行点，惩罚项是一个很大的正数，其存在是对点脱离可行域的惩罚，作用是在极小化过程中迫使迭代点靠近可行域。</p><blockquote><p>因为惩罚函数一定满足 $\phi(\boldsymbol{x},\boldsymbol{r},\boldsymbol{m})\ge f(\boldsymbol{x})$ ，随着迭代的进行，惩罚函数应该逐渐逼近原函数，即惩罚项逐渐趋于0，只有让迭代点靠近可行域，才能达到这个目的。</p></blockquote></li></ul><h2 id="二、内点法"><a href="#二、内点法" class="headerlink" title="二、内点法"></a>二、内点法</h2><blockquote><p>内点法总是从内点出发，并保持在<strong>可行域内</strong>进行搜索，仅适用于只包含<strong>不等式约束</strong>的优化问题。</p></blockquote><p><strong>优化问题</strong></p><script type="math/tex; mode=display">\begin{array}{ll}\min & f(\boldsymbol{x}) \\\text { s. t. } & g_{i}(\boldsymbol{x}) \geqslant 0, \quad i=1, \cdots, p\end{array}</script><p>其中，$f(\boldsymbol{x}),g_i(\boldsymbol{x})(i=1,2,\cdots,p)$ 是 $\mathbb{R}^n$ 上的连续函数。可行域可记为</p><script type="math/tex; mode=display">S=\{\boldsymbol{x}|g_i(\boldsymbol{x})\ge 0,\;i=1,2,\cdots,p\}</script><p><strong>惩罚函数</strong></p><script type="math/tex; mode=display">\phi(\boldsymbol{x},\boldsymbol{r})=f(\boldsymbol{x})+\boldsymbol{r}\sum_{i=1}^pG(\boldsymbol{x})</script><p>其中，当点 $\boldsymbol{x}$ 靠近可行域边界时， $G(\boldsymbol{x})\rightarrow\infty$ 。$G(\boldsymbol{x})$ 的两种最重要的形式为：</p><script type="math/tex; mode=display">G(\boldsymbol{x})=\frac{1}{g_i(\boldsymbol{x})}\;\text{or}\;-\ln(g_i(\boldsymbol{x}))</script><p>$r$ 是很小的正数。这样，当点 $\boldsymbol{x}$ 靠近可行域边界时，$\phi(\boldsymbol{x},\boldsymbol{r})\rightarrow\infty$ ；反之，由于 $r$ 的存在，惩罚函数的取值近似等于原函数。这样可以将迭代点限制在可行域内。因此，可通过求解无约束的极小化惩罚函数问题作为原问题的近似解：</p><script type="math/tex; mode=display">\begin{array}{ll}\min & \phi(\boldsymbol{x},\boldsymbol{r}) \\\text { s. t. } &\boldsymbol{x}\in \text{int}\;S\end{array}</script><p><strong>罚因子的变化趋势</strong></p><p>&emsp;&emsp;罚因子是一个逐渐变小的值，可表示为：</p><script type="math/tex; mode=display">r^{(k)}=Cr^{(k-1)}</script><p>$C$ 是罚因子递减系数，通常取 $0&lt;C&lt;1$ ，即 $\lim_\limits{k\rightarrow\infty}r^{(k)}=0$ 。因此随着迭代进行，惩罚函数会逐渐变小，进而逼近原函数。</p><p><strong>参数选择</strong></p><ul><li><p>初始点 $x^{(0)}$</p><blockquote><ol><li>自定法。根据经验决定。</li><li>搜索法。任选初始点，通过对初始点约束函数值的检验，按其对每个约束的不满足程度加以调节，将 $x^{(k)}$ 逐步引入到可行域内，成为可行初始点。</li></ol></blockquote></li><li><p>初始罚因子 $r^{(0)}$ </p><blockquote><ol><li>若  $r^{(0)}$ 太大，则一开始惩罚函数将远大于原目标函数值，迭代点也将远离原问题最优点，需要经过较长时间搜索才能逐渐逼近；</li><li>若  $r^{(0)}$ 太小，则一开始惩罚项的作用很小，可行域内惩罚函数与原目标函数接近，在可行域边界附近惩罚函数值才突然提高，这样回导致惩罚函数边界附近出现深沟谷地，罚函数形态变得恶劣，从而限制了某些无约束优化方法的使用，导致计算失败。</li></ol></blockquote></li><li><p>罚因子递减系数 $C$ （一般取 $C=[0.1,0.5]$）</p><blockquote><ol><li>一般认为其选择对算法的成败影响不大；</li><li>若 $C$ 较小，则罚因子下降快，可减少无约束问题的优化次数，但因前后两次无约束最优点的距离较远，可能会使后一次无约束优化本身的迭代次数增多，且迭代最优点间隔大，对约束最优点的逼近不利；</li><li>若 $C$ 较大，则无约束优化次数增多。</li></ol></blockquote></li></ul><p><strong>终止条件</strong></p><ol><li><p>相邻两次惩罚函数无约束最优点间距离足够小。一般取收敛精度 $\varepsilon_1=[10^{-4},10^{-5}]$，满足</p><script type="math/tex; mode=display">|x^*_k-x^*_{k-1}|\le\varepsilon_1</script></li><li><p>相邻两次惩罚函数值相对变化量足够小。一般取 $\varepsilon_2=[10^{-3},10^{-4}]$ ，满足</p><script type="math/tex; mode=display">\left|\frac{\phi_{k}^{*}-\phi_{k-1}^{*}}{\phi_{k}^{*}}\right| \leq \varepsilon_{2}</script></li></ol><p><strong>算法步骤</strong></p><ol><li>构造内点惩罚函数 $\phi(x,r^{(k)})=f(x)+r^{(k)}\sum_\limits{i=1}^p\frac{1}{g_i(x)}$ 。</li><li>选择可行初始点 $x^{(0)}$ ，初始罚因子 $r^{(0)}$ ，罚因子递减系数 $C$ ，收敛精度 $\varepsilon_1,\varepsilon_2$，置 $k=0$ 。</li><li>求解无约束优化问题 $\min\phi(x,r^{(k)})$ ，得到最优点 $x_k^*$。</li><li>当 $k=0$ 时转步骤5，否则转步骤6。</li><li>置 $k=k+1,r^{(k)}=Cr^{(k-1)},x_{k+1}^{(0)}=x_k^*$ 。</li><li>由终止准则，若满足则结束算法，输出最优解；否则转步骤5。</li></ol><h2 id="三、外点法"><a href="#三、外点法" class="headerlink" title="三、外点法"></a>三、外点法</h2><blockquote><p>外点法<strong>不保证</strong>搜索点保持在<strong>可行域内</strong>（搜索范围包括可行域和不可行域），适用于包含<strong>不等式约束</strong>或<strong>等式约束</strong>的优化问题。</p></blockquote><p><strong>优化问题</strong></p><blockquote><p>仅以不等式约束为例（等式约束类似，二者混合形式的可见第一节惩罚函数统一形式部分）</p></blockquote><script type="math/tex; mode=display">\begin{array}{ll}\min & f(\boldsymbol{x}) \\\text { s. t. } & g_{i}(\boldsymbol{x}) \geqslant 0, \quad i=1, \cdots, p\end{array}</script><p><strong>惩罚函数</strong></p><script type="math/tex; mode=display">\phi(\boldsymbol{x},\boldsymbol{r}^{(k)})=f(\boldsymbol{x})+\boldsymbol{r}^{(k)} \sum_{i=1}^{p}\left\{\min \left[0, g_{i}(x)\right]\right\}^{2}</script><p>其中，$\boldsymbol{r}^{(k)}$ 为趋于无穷大的严格递增正数列，$r^{(k)}=Cr^{(k-1)}$ 且 $C&gt;1$ ，$\lim_\limits{k\rightarrow\infty}r^{(k)}=\infty$ 。迭代点在可行域内时，惩罚项为0，惩罚函数等于原函数；迭代点在可行域外时，惩罚项大于0，大于原函数。因此，由于罚因子严格递增，随着迭代进行，可以迫使惩罚项趋于0，从而逼近原函数。 </p><p><strong>几何解释</strong></p><p><img src="https://fastly.jsdelivr.net/gh/321hjd/ImageBed@main/sundry/1655517184338%E5%A4%96%E7%82%B9%E6%B3%95%E5%87%A0%E4%BD%95%E8%A7%A3%E9%87%8A.jpg" alt="外点法几何解释"></p><p><strong>参数选择</strong></p><ul><li><p>初始点 $x^{(0)}$ </p><blockquote><p>可行域及非可行域内均可。</p></blockquote></li><li><p>初始罚因子 $r^{(0)}$ </p><blockquote><p> $r^{(0)}$ 的选择对算法的成败和计算效率有显著影响。</p><ol><li>选取过小，则无约束求解的次数增多，收敛速度慢；</li><li>选取过大，则非可行域内惩罚函数比原函数大得多，在起作用约束边界处产生尖点，函数形态变坏，从而限制了某些无约束优化方法的使用，导致计算失败。（比如利用梯度下降法，由于其搜索过程是锯齿形的，边界处的尖点可能会导致搜索点反复横跳？并且由于前后迭代值差距不大而达到精度终止算法，实际却没有取到最优点——个人想法，有待实验）</li></ol></blockquote></li><li><p>罚因子递增系数 $C$ （一般取 $C=[5,10]$）</p></li></ul><p><strong>终止条件</strong></p><blockquote><p>同内点法。</p></blockquote><p><strong>算法步骤</strong></p><ol><li>在 n 维空间任取初始点 $x^{(0)}$ 。</li><li>选取初始罚因子 $r^{(0)}$ ，递增系数 $C$ ，并置 $k=0$ 。</li><li>求解无约束优化问题 $\min\phi(x,r^{(k)})$ ，得到最优点 $x_k^*$ 。</li><li>当 $k=0$ 时转步骤5，否则转步骤6。</li><li>置 $k=k+1,r^{(k+1)}=Cr^{(k)},x_{k+1}^{(0)}=x_k^*$ 。</li><li>由终止准则，若满足则结束算法，输出最优解；否则转步骤5。</li></ol><p><strong>约束容差带</strong></p><p><img src="https://fastly.jsdelivr.net/gh/321hjd/ImageBed@main/sundry/16555181797901655518169998.jpg" alt="约束容差带"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>《最优化理论与算法》陈宝林著。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 最优化方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 惩罚函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最速下降法、牛顿法、共轭梯度法原理及对比</title>
      <link href="/yyds/e7f02e65.html"/>
      <url>/yyds/e7f02e65.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>三者都是基于导数的迭代优化方法，用于求解无约束优化问题。</p><p>代码：<a href="https://github.com/321hjd/ImageBed/tree/main/code/NumericalOptimization/derivative-basedOptimization">https://github.com/321hjd/ImageBed/tree/main/code/NumericalOptimization/derivative-basedOptimization</a></p></blockquote><h2 id="一、最速下降法"><a href="#一、最速下降法" class="headerlink" title="一、最速下降法"></a>一、最速下降法</h2><h3 id="1-1-原理"><a href="#1-1-原理" class="headerlink" title="1.1 原理"></a>1.1 原理</h3><p><strong>基本思想</strong></p><ol><li><p>最速下降法是梯度下降法和一维搜索的结合</p></li><li><p>梯度下降法采用<strong>一阶泰勒展开式</strong>对函数近似，然后将变量沿着负梯度方向（下降最快的方向）移动一定的步长，目标函数就会一直减小，直至接近极小值</p><script type="math/tex; mode=display">\begin{align}&f(x) \approx f\left(x_{0}\right)+\nabla f(x)\left(x-x_{0}\right)\\&d^{(k)}=-\nabla f(x)\\&x^{(k)+1}=x^{(k)}+\lambda d^{(k)}\end{align}</script></li><li><p>步长的确定。让变量在负梯度方向走一段能让函数值最小的距离。可通过求解下式得到（一般通过令其对 $\lambda$ 求导为0直接求解或通过一维搜索算法如试探法、函数逼近法迭代求解）。</p><script type="math/tex; mode=display">\lambda_k=\arg\min _\limits{\lambda \geq 0} f\left(x^{(k)}+\lambda d^{(k)}\right)</script></li><li><p>一阶收敛条件。梯度的范数满足<strong>趋近于0</strong>的精度要求</p></li></ol><p><strong>算法步骤</strong></p><ol><li><p>步骤1：选取初始点 $x^0$ ，给定终止精度要求 $\varepsilon&gt;0$ ，令迭代编号 $k=0$ </p></li><li><p>步骤2：计算梯度 $\nabla f(x^k)$ ，若满足 $||\nabla f(x^k)||&lt;\varepsilon$ ，则停止算法，输出极值点 $x^k$，否则进入步骤3</p></li><li><p>步骤3：取负梯度 $d^{(k)}=-\nabla f(x^k)$ 作为下降方向</p></li><li><p>步骤4：一维搜索求最佳步长 $\lambda_k$ ，使得其满足沿该方向移动步长 $\lambda_k$ 后，函数值最小</p><script type="math/tex; mode=display">\lambda_k=\arg\min _\limits{\lambda \geq 0} f\left(x^{(k)}+\lambda d^{(k)}\right)</script></li><li><p>步骤5：变量迭代 $x^{(k+1)}=x^{(k)}+\lambda_k d^{(k)}$ ，回到步骤2继续迭代</p></li></ol><p><strong>算法特点</strong></p><ol><li><p>最速下降法的搜索过程是<strong>锯齿形</strong>的，每一步所得方向（负梯度）都与上一步<strong>正交</strong>，在远离极值点时收敛速度快，但接近极值点时收敛非常慢（可以和其它在极值点附近收敛速度快的算法结合）</p><blockquote><p>正交的原因：</p><p>一维搜索时无论是利用求导直接求解还是一维搜索方法，最终目的都是令其梯度趋近于零。即</p><script type="math/tex; mode=display">\frac{\partial f(x^{(k)}-\lambda\nabla f(x^{(k)}))}{\partial \lambda}=-\nabla f(x^{(k)}-\lambda\nabla f(x^{(k)}))\nabla f(x^{(k)})=-\nabla f(x^{(k+1)})\nabla f(x^{(k)})=0</script><p>内积为0，因此相邻步的方向是正交的。</p></blockquote></li><li><p>最速下降法所得解是局部最优解，而非全局最优解，<strong>仅当目标函数为凸函数</strong>时，为全局最优。可形象地解释为：<strong>在点x1处向梯度方向到达x2，x2再向梯度方向到达x3，但这不一定是x1到x3最快的路径。</strong> </p></li></ol><h3 id="1-2-实例"><a href="#1-2-实例" class="headerlink" title="1.2 实例"></a>1.2 实例</h3><p>目标函数：$f(x_1,x_2)=x_1^2+x_1x_2+3x_2^2$ </p><p>初始点：$(1,1)$ </p><p>终止精度：$\mathrm{eps}=10^{-5}$ </p><p>等高线及迭代点搜索过程图</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/NumericalOptimization/1652438509456steepestDescent.jpg" alt="steepestDescent" style="zoom:50%;"></p><p>经过9次迭代，算法终止。可以看到在接近极小值点时，最速下降法收敛速度非常慢。</p><h2 id="二、牛顿法"><a href="#二、牛顿法" class="headerlink" title="二、牛顿法"></a>二、牛顿法</h2><h3 id="2-1-原理"><a href="#2-1-原理" class="headerlink" title="2.1 原理"></a>2.1 原理</h3><p><strong>算法思想</strong></p><ol><li><p>二阶函数近似。利用<strong>二阶泰勒展开式</strong>对目标函数进行近似，因此会用到一阶导数（梯度）和二阶导数（海森矩阵）</p></li><li><p>近似极小值点。将近似得到二阶函数的极小值点作为原函数极小值点的近似，并不断重复这一近似的过程，直至得到满足精度要求的极小值点</p></li><li><p>终止条件仍然是满足梯度趋近于0</p><script type="math/tex; mode=display">\begin{align}&f(x) \approx f\left(x^{(k)}\right)+\nabla f(x^{(k)})\left(x-x^{(k)}\right)+\frac{1}{2}\nabla^2 f(x^{(k)})\left(x-x^{(k)}\right)^2\\&f'(x)=\nabla f(x^{(k)})+\nabla^2 f(x^{(k)})\left(x-x^{(k)}\right)=0\\&x^{(k+1)}=x^{(k)}-\frac{\nabla f(x^{(k)})}{\nabla^2 f(x^{(k)})}\end{align}</script></li></ol><p><strong>算法步骤</strong></p><ol><li>步骤1：选取初始点 $x^0$ ，给定终止精度要求 $\varepsilon&gt;0$ ，令迭代编号 $k=0$ </li><li>步骤2：计算梯度 $\nabla f(x^k)$ ，若满足 $||\nabla f(x^k)||&lt;\varepsilon$ ，则停止算法，输出极值点 $x^k$，否则进入步骤3</li><li>步骤3：计算海森矩阵 $\nabla^2 f(x^k)$ </li><li>步骤4：变量迭代 $x^{(k+1)}=x^{(k)}-\frac{\nabla f(x^{(k)})}{\nabla^2 f(x^{(k)})}$ ，并回到步骤2继续迭代</li></ol><p><strong>算法特点</strong></p><ol><li><p>相比最速下降法，省去了一维搜索的步骤，但需要计算海森矩阵及其逆</p></li><li><p>收敛速度快，具有局部二阶收敛性。形象解释：最速下降法只考虑当前位置下降最快的方向，而不考虑下降后的坡度如何；而牛顿法同时考虑当前下降方向（一阶导）和下降之后坡度的变化（二阶导）</p></li><li><p>对于二次函数（正定二次型），牛顿法具有一步收敛性</p><blockquote><p>假设目标函数为二次型 $f(x)=\frac{1}{2}x^TQx-x^Tb$ </p><p>梯度为：$\nabla f(x^{(0)})=Qx^{(0)}-b$ </p><p>海森矩阵为： $\nabla^2 f(x^{(0)})=Q$</p><p>经过牛顿法一次迭代后，近似极值点为：$x^{(1)}=\frac{b}{Q}$ </p><p>重新计算梯度： $\nabla f(x^{(1)})=Qx^{(1)}-b=0$ ，算法终止 </p></blockquote></li></ol><h3 id="2-2-实例"><a href="#2-2-实例" class="headerlink" title="2.2 实例"></a>2.2 实例</h3><p>目标函数：$f(x_1,x_2)=x_1^2+x_1x_2+3x_2^2$ </p><p>初始点：$(1,1)$ </p><p>终止精度：$\mathrm{eps}=10^{-5}$ </p><p>等高线及迭代点搜索过程图</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/NumericalOptimization/1652438602550Newton.jpg" alt="Newton" style="zoom:50%;"></p><p>由于牛顿法对于二次函数的一步收敛性，可见仅经过1次迭代，算法终止。</p><h2 id="三、共轭梯度法"><a href="#三、共轭梯度法" class="headerlink" title="三、共轭梯度法"></a>三、共轭梯度法</h2><h3 id="3-1-原理"><a href="#3-1-原理" class="headerlink" title="3.1 原理"></a>3.1 原理</h3><p><strong>术语</strong></p><ul><li><p>残差</p><blockquote><p>假设目标函数为二次型 $f(x)=\frac{1}{2}x^TQx-x^Tb$ ，其中 $b,x\in\mathbb{R}^n,Q\in\mathbb{R}^{n\times n}$ 且矩阵 $Q$ 是对称正定的。$n$ 代表解空间是 $n$ 维的，即 $n$ 元二次函数。</p><p>其最小值可以通过令一阶导为零得到：$\nabla f(x^<em>)=Qx^</em>-b=0$ </p><p>假设通过迭代法求解，迭代法通常无法令该一阶导等于零，因此可将 $\nabla f(x^{(k)})-\nabla f(x^*)$  称作系统残差（也是梯度），具体表示为：</p><script type="math/tex; mode=display">r^{(k)}=Qx^{(k)}-b</script></blockquote></li><li><p>共轭向量</p><blockquote><p>当一组向量 $\{p_0,p_1,\cdots,p_{n-1}\}$ 满足如下条件时，称其关于对称正定矩阵 $Q$ 共轭。</p><script type="math/tex; mode=display">p_i^TQp_j=0\quad\forall i\ne j</script><p>这样一组向量是线性独立的，可以张成整个空间 $\mathbb{R}^n$ ，因而可以用来表示其它向量。</p></blockquote></li></ul><p><strong>算法思想</strong></p><ol><li><p>与最速下降法类似，需要找到下降方向（二者的区别也就在于确定的下降方向不同），然后通过一维搜索找到变量 $x_k$ 迭代的最优步长 $\lambda_k$ </p><blockquote><p>对于寻找最优步长 $\lambda_k$ ，需要将</p><script type="math/tex; mode=display">x_{k+1}=x_{k}+\lambda p_k</script><p>代入目标函数 $f(x)$ 并对 $\lambda$ 求导。因此可以得到：</p><script type="math/tex; mode=display">\lambda_k=-\frac{r_k^Tp_k}{p_k^TQp_k}</script></blockquote></li><li><p>利用共轭梯度法确定下降方向 $p_k$。将最优解点和初始点的差用一组线性无关的共轭向量（向量个数与解空间维度相同）的线性组合近似。然后逐个寻找共轭向量及其系数（步长），构建每一个方向（维度）上的最优解，即<strong>沿着解空间的维度逐步构建最优解</strong>。具体可解释如下：</p><blockquote><p>将最优解和初始值的差表示为共轭向量的线性组合：</p><script type="math/tex; mode=display">x^{*}-x_{0}=\beta_{0} p_{0}+\beta_1 p_1+\ldots+\beta_{n-1} p_{n-1}</script><p>其中 $\beta_k$ 就是沿着每个共轭向量$p_k$（方向）走的步长。对于第 $k$ 步，$x_k$ 将 $x^*$ 投影到由 $k$ 个线性独立的共轭向量张成的解空间中。</p><p>共轭向量 $p_{k+1}$ 的寻找依赖于<strong>负残差</strong>和上一个<strong>共轭向量</strong>。负残差其实就是负梯度，因此称为共轭梯度法。每次迭代找到的新方向（共轭向量）是负残差和上一个搜索方向的线性组合：</p><script type="math/tex; mode=display">p_{k}=-r_{k}+\beta_kp_{k-1}</script><p>其中，步长 $\beta_k$ 可以根据共轭条件（$p_{k-1}^TQp_{k}=0$）得到：</p><script type="math/tex; mode=display">\beta_{k}=\frac{r_{k}^T Q p_{k-1}}{p_{k-1}^{T} Q p_{k-1}}</script></blockquote></li><li><p>$\lambda_k$ 和 $\beta_k$ 计算的简化</p><blockquote><script type="math/tex; mode=display">\lambda_k=-\frac{r_k^Tp_k}{p_k^TQp_k}=\frac{r_k^Tr_k}{p_k^TQp_k}\\\beta_{k}=\frac{r_{k}^T Q p_{k-1}}{p_{k-1}^{T} Q p_{k-1}}=\frac{r_{k}^{T}r_{k} }{r_{k-1}^{T} r_{k-1}}</script><ol><li><p>对于 $\lambda_k=\frac{r_k^Tr_k}{p_k^TQp_k}$ </p><blockquote><p>由于 $p_{k}=-r_{k}+\beta_kp_{k-1}$ ，且 $r_k^Tp_{k-1}=0,r_{k+1}r_k=0$ </p><p>同时 $r_{k}=Qx_k-b$ </p><p>所以 $r_{k+1}-r_k=Q(x_{k+1}-x_k)=Q\lambda_kp_k$ </p><p>进一步 $\lambda_k=\frac{r_{k+1}-r_k}{Qp_k}$ </p><p>分子分母左乘 $p_k^T$ 代入即可证明。</p></blockquote></li><li><p>对于 $\beta_k=\frac{r_{k}^{T}r_{k} }{r_{k-1}^{T} r_{k-1}}$ </p><blockquote><p>由1中证明，$Qp_k=\frac{r_{k+1}-r_k}{\lambda_k},r_{k+1}r_k=0$ </p><p>代入可得到分子 $r_{k}^{T}r_{k}$ </p><p>由 $p_{k-1}^Tr_{k}=0$ ，所以 $p_{k-1}^Tr_{k-1}=r_{k-1}^Tr_{k-1}$ </p><p>进一步可得到分母 $r_{k-1}^{T}r_{k-1}$ </p></blockquote></li></ol></blockquote></li></ol><p><strong>算法步骤</strong></p><ol><li><p>步骤1：计算初始残差（梯度）$r_0=Qx_0-b$ ，初始下降方向（负梯度） $p_0=-r_0$  </p></li><li><p>步骤2：按下列公式迭代 $k=0,1,\cdots,n$ 直到收敛（n维搜索n步）（收敛条件仍然是残差（梯度）满足精度要求）</p><script type="math/tex; mode=display">\lambda_k=\frac{r_k^Tr_k}{p_k^TQp_k}\\x_{k+1}=x_{k}+\lambda p_k\\r_{k+1}=r_k+\lambda_kQp_k\\\beta_k=\frac{r_{k}^{T}r_{k} }{r_{k-1}^{T} r_{k-1}}\\p_{k+1}=-r_{k+1}+\beta_kp_k</script></li></ol><p><strong>算法特点</strong></p><ol><li>仅需计算一阶导数，但收敛速度比最速下降法快；不需要像牛顿法一样存储和计算海森矩阵并求逆</li><li>具有“步收敛性”，即在每个方向都走到极致，不会走曾经走过的方向，<strong>n维空间只需要走n步即可找到极值点</strong>。</li></ol><h3 id="3-2-实例"><a href="#3-2-实例" class="headerlink" title="3.2 实例"></a>3.2 实例</h3><p>目标函数：$f(x_1,x_2)=x_1^2+x_1x_2+3x_2^2$ </p><p>初始点：$(1,1)$ </p><p>终止精度：$\mathrm{eps}=10^{-5}$ </p><p>等高线及迭代点搜索过程图</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/NumericalOptimization/1652438620549conjugateGradient.jpg" alt="conjugateGradient" style="zoom:50%;"></p><p>因为是二元函数，可见仅经过2次迭代，算法终止。</p><p><strong>三种方法的搜索过程对比</strong></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/NumericalOptimization/1652438637549%E5%9B%BE%E5%BD%A2%E5%AF%B9%E6%AF%94.jpg" alt="对比" style="zoom:50%;"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li>《数学建模算法与应用第二版》</li><li><a href="https://zhuanlan.zhihu.com/p/392994929">比较数学建模中的优化方法 | 最速下降法 牛顿法 共轭梯度法 启发式算法</a></li><li><a href="https://zhuanlan.zhihu.com/p/32709034">最速下降法</a></li><li><a href="https://blog.csdn.net/weixin_41996745/article/details/115432490">证明最速下降法搜索方向正交</a></li><li><a href="https://blog.csdn.net/m0_46498899/article/details/110887748">最速下降法matlab实现</a></li><li><a href="https://cloud.tencent.com/developer/article/1390228">优化算法——牛顿法</a></li><li><a href="https://zhuanlan.zhihu.com/p/293951317">牛顿法及其收敛性分析</a></li><li><a href="https://zhuanlan.zhihu.com/p/178461470">共轭梯度法简介</a></li><li><a href="https://cloud.tencent.com/developer/article/1858463">数值优化（4）——非线性共轭梯度法，信赖域法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 最优化方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基于导数的优化方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信工程专业实习总结</title>
      <link href="/yyds/1df36502.html"/>
      <url>/yyds/1df36502.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>些许感慨，四年本科生涯就只剩下3个多月了。今天结束专业实习的答辩出门骑车闲逛，看到友实门口公交站还有初中生在赶作业<span class="github-emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span>，会心一笑，又有些怅然，原来真的已经过去这么多年了<span class="github-emoji" alias="frowning" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f626.png?v8">&#x1f626;</span>。第一次到那个公交站去学校，已经是快十年前的事情了……</p><p>就不继续感慨了，说说专业实习吧。这次的专业实习是中兴协力给上的课，主要介绍内容就是5G承载技术中的OTN，以及后面的LTE&amp;5G调测，然后最重要的也是要记录的部分也就是复杂项目实施，我们小组（额我们叫<strong>唐高组</strong>，之前还有吴彦组、关东组、对照组等一系列奇葩名字作为备选，最终唐高组以辈分胜出<span class="github-emoji" alias="older_man" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f474.png?v8">&#x1f474;</span>）</p><p>我们的选题是北京景山公园的TD-LTE工程设计，就是假装我们要去给这公园建基站进行信号覆盖，后面直接放出小组讨论之后形成的一些文档吧。</p></blockquote><h2 id="一、项目分工"><a href="#一、项目分工" class="headerlink" title="一、项目分工"></a>一、项目分工</h2><div class="table-container"><table><thead><tr><th><strong>项目职位</strong></th><th><strong>项目人员</strong></th><th><strong>具体分工</strong></th></tr></thead><tbody><tr><td>项目经理</td><td>何xx</td><td>1.    主持推进项目进度  2.    项目流程规划  3.    项目规划汇总定稿</td></tr><tr><td>售前技术支持</td><td>黄x</td><td>1.    整理需求分析及完善细节  2.    项目实施方案制定</td></tr><tr><td>项目实施工程师</td><td>王x、刘xx</td><td>1.    实地勘测及项目实施  2.    具体配置参数设计调整</td></tr><tr><td>售后技术支持</td><td>冯xx</td><td>1.    售后问题反馈接收  2.    方案调测优化</td></tr><tr><td>质量总监</td><td>胡xx</td><td>1.    监管项目流程质量  2.    方案调测优化</td></tr></tbody></table></div><p>&emsp;&emsp;需要说明的是，由于模拟项目的局限性，某些职位的工作比较难在项目中体现出来，因此实际上分工表仅代表每个人负责的主体部分，每个人在项目的其它流程中都有参与和讨论。</p><h2 id="二、背景调研"><a href="#二、背景调研" class="headerlink" title="二、背景调研"></a>二、背景调研</h2><p>&emsp;&emsp;随着互联网和通信技术的发展，人们对无处不在的网络接入拥有了更高的需求。尤其随着移动支付和“生活分享”需求的增加，信号覆盖质量直接影响了游客的游览体验。此外，景区作为对环境、景观要求最为严格的场所，其对于传统“傻大黑粗”的基站有着天然的排斥心理，因此如何进行合理的基站规划，以及如何让基站建设和谐地与景区融为一体，对于带动景区的发展、满足游客的体验，拥有非常重要的意义。</p><p>（1）  技术背景——TD-LTE技术特性</p><ul><li><p><strong>技术特点：</strong></p><p>&emsp;&emsp;TD-LTE的三大技术特点分别是TDD、OFDMA和MIMO，这几项技术令其具备20MHz带宽、下行110Mbps、上行50Mbps峰值速率，以及小区边缘用户性能改善、小区容量提高、低系统延迟等特点。这意味着用户外出游玩的大多数需求基本都能够得到满足。</p></li><li><p><strong>架构特点：</strong></p><p>&emsp;&emsp;此外，TD-LTE的分布式组网架构也为其在2G、3G基础上部署以及场景适应性上提供了强有力的支持。如根据“BBU+RRU”光纤拉远式部署方案，我们可以将BBU直接放置在原有2G、3G基站机房中，通过RRU拉远将RRU和天线一同放在几百米甚至几千米外的天线塔或路灯、房顶上。同样地，我们也可以在合适位置自建机房，用于放置BBU，接入核心网和操作维护中心，将RRU和天线通过光纤连接至远端需要信号覆盖的位置。 </p></li></ul><p>（2）  场景背景</p><p>我们选择的景区是景山公园，它位于北京城中轴线，与北海、故宫邻接。景山公园的场景特点体现在3方面：</p><ul><li>内部景点。内部景点以绿植和古建筑为主，包含部分休息区。</li><li>客流量。较大客流量对信号覆盖有着比较高的要求</li><li>周边环境。由于在北京城中心，周边大多为低矮建筑群。</li></ul><h2 id="三、需求分析"><a href="#三、需求分析" class="headerlink" title="三、需求分析"></a>三、需求分析</h2><div class="table-container"><table><thead><tr><th><strong>需求点</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>1.基站容量需求</td><td>需要满足景区同一时间的峰值接入量</td></tr><tr><td>2.覆盖范围需求</td><td>保证所有小区基本覆盖，根据基站的实时吞吐量进行功率调整</td></tr><tr><td>3.入网类型需求</td><td>保证不同入网类型的用户的上网体验</td></tr><tr><td>4.建站成本需求</td><td>在确保基站功能齐全下，降低成本</td></tr><tr><td>5.可扩展性需求</td><td>考虑机房的维护等问题</td></tr><tr><td>6.环境和谐需求</td><td>在不破坏景区环境的前提下实现基站功能</td></tr></tbody></table></div><ol><li><p>基站容量需求。LTE基站最高容量约1200人，带宽最高20MHz</p><p>&emsp;&emsp;根据网络上的公开信息，以及参考文献《景山公园春季使用者游憩行为研究》，景区每天的人流量峰值为5200人左右，集中在11点。并且万春亭、有林广场、寿皇殿等三大区域人流最为密集。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647611169650peopleflow.jpg" alt="休息日与工作日游人量日变化"></p><p>&emsp;&emsp;此外，由于中国三大运营商共存，我们粗略认为游客中三种网络类型均匀分布，同时由于不可能所有人同时接入网络并产生业务，可以认为一个运营商基站保证1200人的峰值接入是合理的。另外，景区游客产生的业务大多为电话、文字消息以及图片等低流量业务，仅有少部分存在直播或者视频等高流量业务，因此接入速率需求应该能够得到保证。</p><ol><li><p>覆盖范围需求</p><ul><li>一般TD-LTE小区覆盖半径为1-3km，但由于覆盖信号质量以及人流量的原因，城区建站每隔几百米会将用户切换至信号质量更好的小区——可以小区半径为500米考虑。</li><li>园区面积约23万平方米，山高43m，东西方向长度约440m，南北方向长度约540米。</li><li>可以采用多RRU技术（级联/星型拓扑） ，一个BBU上挂多个（3-4个）RRU来密集布站（RRU是射频拉远模块），从而对复杂的园区环境进行覆盖。</li></ul></li><li><p>入网类型需求——不同用户入网类型不同，分为移动、联通、电信。</p></li><li><p>建站成本需求——由于建站成本高昂，此前也已经部署了大量2G、3G基站，因此在能力范围之内应尽可能减少建站成本。</p></li><li><p>可扩展性需求——基站建设需要考虑到未来的设备维护及技术更新</p></li><li><p>环境和谐需求</p><p>&emsp;&emsp;景山公园主要景点为古建筑以及绿植，并且位于北京城中轴线，其间的万春亭可俯瞰故宫及景区。因此需要考虑基站与景区景点的和谐性，不能对其产生破坏。此外，景区周边大多也都是低矮建筑，并且交通繁忙，在建站过程中也应考虑与周围建筑的和谐性，并且不阻碍交通。同时，要考虑到普通民众对通信辐射的不了解以及恐慌、抵触等情绪，可采用伪装基站。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647610550659guiseBS.jpg" alt="伪装基站"></p></li></ol><h2 id="四、项目规划"><a href="#四、项目规划" class="headerlink" title="四、项目规划"></a>四、项目规划</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>规划点</strong></th><th style="text-align:center"><strong>需求点解决</strong></th><th style="text-align:center"><strong>基本规划</strong></th></tr></thead><tbody><tr><td style="text-align:center">建站类型规划</td><td style="text-align:center">3、4、6</td><td style="text-align:center">1.入网类型：移动、联通、电信各一个  2.基站类型：宏基站</td></tr><tr><td style="text-align:center">建站容量规划</td><td style="text-align:center">1、2</td><td style="text-align:center">1.基站承载能力：1200人的同时接入  2.基站接入速率：最大接入速率110Mbps  3.基站覆盖范围：规划小区覆盖半径300-500米</td></tr><tr><td style="text-align:center">建站方式规划</td><td style="text-align:center">3、5、6</td><td style="text-align:center">BBU集中、RRU拉远方式建设</td></tr><tr><td style="text-align:center">建站选址规划</td><td style="text-align:center">2、4、6</td><td style="text-align:center">1.机房选址（放置BBU，接入核心网）  2.天线选址（区域信号覆盖）</td></tr></tbody></table></div><ol><li><p>建站类型规划</p><p>&emsp;&emsp;为解决需求点2、3，也就是覆盖范围和入网类型需求，我们规划建设移动、联通、电信基站各一个，粗略假设游客的入网类型比例基本均等；建站类型为分布式基站，以满足景区覆盖区域复杂的需求。</p></li><li><p>建站容量规划</p><p>&emsp;&emsp;建站容量规划用于解决需求点1、2，即容量和范围需求。在这里我们从三个角度进行考虑。前面经过需求分析得到结论，一天内一个时段中全园区客流量峰值在5000左右，由于5000人分别被三大运营商网络所服务，并且同时具有网络流量需求的概率极低，因此认为三个基站各自1200人的同时接入峰值是合理的，能够满足园区游客使用。</p><p>&emsp;&emsp;此外，考虑基站小区覆盖范围，一般城区TD-LTE覆盖小区半径设置为500m。在景区中，我们将整个景区划分为3部分区域，分别设置3个小区进行服务。其中2号小区人流量最大，3号其次，1号最小。我们为其分别设置不同的服务半径、服务带宽以及发射功率，足够满足覆盖需求。</p></li><li><p>建站方式规划</p><p>&emsp;&emsp;考虑到需求点3、4、5、6，即入网类型、建站成本、可扩展性以及环境和谐性需求，我们采取分布式部署方案，在景区外合适位置选址建设机房，放置BBU用于接入核心网，并通过10G光口的连接一根光纤级联1号和2号小区的RRU，再单连一根光纤接入3号小区的RRU将三个天线和RRU部署在合适位置，其网络拓扑如图所示。这样做的优势在于：</p><ul><li><p>机房部署在景区外，不对景区造成破坏；同时建设设计冗余空间，以供设备升级或其它基站建设所需。</p></li><li><p>通过RRU拉远方式部署天线使得选址更加灵活，符合景区的复杂环境需求。</p></li><li><p>机房固定地址和通过RRU级联以节约光纤，都可以降低建站成本，也避免了在景区周边多处施工建站，影响交通和美观。</p><p>下图为规划网络拓扑：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/16476088066511647608806537.png" alt="规划网络拓扑"></p></li></ul></li><li><p>建站选址规划</p><ul><li><p>机房位置</p><p>&emsp;&emsp;将机房放置在西门与国家电网充电站之间的空地上。因为有国家电网充电站，可以认为有较好的电路设施，并且可拓展给机房供电。</p><p>&emsp;&emsp;此外，机房为5米(长)4米(宽)3米(高)的标准机房，放置基站的BBU并接入核心网。同时机房不仅提供景区内的信号覆盖，也为周边有信号覆盖需求的地区留出冗余空间，同样用于放置BBU，并通过RRU拉远进行周边区域的覆盖。</p></li><li><p>天线位置</p><p>设计分布式天线，一共3个天线通过RRU拉远放置在景区附近的高楼楼顶，并配置3个小区。具体位置如下：</p><ul><li>1号天线：景山公园南门景区南门神武门广场附近，朝向西北60°，覆盖西北约60°扇区，包含景山前街西部、游客中心西部、景区内休息区、富览亭、辑芳亭及西门等区域。</li><li>2号天线：景山公园南门景区南门神武门广场附近，朝向东北30°，覆盖东北约120°扇区，包含景山前街东部、游客中心东部、景区内休息区、万春亭、寿皇亭等区域。</li><li>3号天线：景山公园北门北京市地安门招待所楼顶，朝向西南约75°角，覆盖景区北部寿皇殿、有林广场及东门等区域。</li></ul><p>机房和天线位置以及各自覆盖扇区图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/16476089576561647608957304.png" alt="机房、天线位置及扇区分布图"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/16476089916511647608990932.png" alt="景区北门-北京市地安门招待所"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/16476090166501647609016310.png" alt="景区南门口"></p></li></ul></li></ol><h2 id="五、项目实施"><a href="#五、项目实施" class="headerlink" title="五、项目实施"></a>五、项目实施</h2><ol><li><p>天线选址依据</p><p>&emsp;&emsp;选址主要考虑景山公园的地形因素和客流量方面。景山公园中心是一座小山，且是客流量主要分布的旅游场景。在山顶建设天线可能会对景区的自然风景造成影响。因此选择在南北方向上放置天线单元，降低山体遮挡带来的影响。山体北侧地势平坦，沿途遮蔽较少，且客流量较小，可以划分为一个小区，直接进行大面积的覆盖。山体南侧主要以树林为主，客流量大，可以划分为两扇区，适当的缩小覆盖范围，提高带宽和增益。</p><p>&emsp;&emsp;考虑节约成本的情况下，在北侧的天线单元可以利用已有的房屋屋顶进行修建，南侧可以通过RRU级联的方式连接，减少光纤长度上的消耗。</p></li><li><p>小区配置依据</p><p>&emsp;&emsp;基站覆盖区域主要划分为三个异频小区。小区载频中心频点分别为2506MHz；2513.5MHz；2521MHz。由于景山公园南门邻近故宫北门，为客流量集中地，带宽需求较园内北侧更大，故给2扇区分配10M带宽，1扇区与3扇区人流量较小，分配5M带宽。三个小区之间互为邻接小区，可以进行小区切换。</p></li><li><p>天线配置依据</p><p>&emsp;&emsp;南门外天线可以借助路灯进行安装，高度约为十米，分为两个扇区。1扇区考虑到覆盖面积内客流量较小，采用大面积覆盖，大量接入低速率的方式。覆盖半径约为500m，下倾角约为4°。2扇区覆盖区域客流量较大，为游客主要活动区，且存在树木遮挡问题，因此选择低覆盖，高增益的方式。2扇区覆盖半径约为300m，下倾角约为6°。3扇区位于北门外，天线可以借助已有的建筑物进行建设，考虑到北部客流量较少，树木遮挡较少，信号可以覆盖更大的面积。北门侧覆盖半径为300m，天线高度约为25m，下倾角约为8°-10°。</p></li><li><p>具体配置数据</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647611159650dataconfig.jpg" alt="中国移动基站配置数据"></p></li></ol><h2 id="六、调测优化"><a href="#六、调测优化" class="headerlink" title="六、调测优化"></a>六、调测优化</h2><ol><li><p>原方案</p><p>原方案：考虑到基站应适当高，以及基站应距离人群集中区域较近，故准备将天线设置在小山西侧山坡上，分三个扇区，并伪装成树木的形状。</p><p>原方案存在的问题：</p><ul><li>东侧山坡因受山顶遮挡，信号弱；</li><li>基站距离北侧建筑群太远，可能导致北侧信号弱；</li><li>后来通过查阅资料了解到，天线若架设在树林中，应高于树冠一定高度以避免不必要的衰落。但若将天线设置过高，而周围又没有其他更高建筑，在破坏景区观赏性的同时也有遭受雷击的风险。</li><li>天线尺寸过大，方形的形状不利于隐蔽或伪装。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647609569650yuanfangan.jpg" alt="原方案"></p></li><li><p>现行方案</p><p>将天线分散布置在公园南侧路灯上以及北侧地安门招待所楼顶，仍分为三个扇区。</p><p>如此考虑的原因如下：</p><ul><li><p>可以尽可能避免山坡、植被的遮挡，使整个公园都有信号覆盖；</p></li><li><p>天线可以兼顾北侧建筑群、中部有林广场以及南部观景台，避免部分区域用户与天线的距离过远；</p></li><li><p>天线尽量远离景区，对景区观赏性影响较小。同时仍然可以对天线进行一定程度的伪装，如靠近居民区的天线可以伪装成热水器，以避免与居民区的居民产生不必要的纠纷；</p></li><li><p>天线架设高度适中，既考虑到了对公园的信号覆盖，又有利于后期维护。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/16476089576561647608957304.png" alt="现行方案"></p></li><li><p>可能存在的故障及处理方案</p><ul><li><p>驻波比故障</p><p>&emsp;&emsp;可能由天馈线缆连接故障或RRU故障导致。可检查RRU、天线等是否连接正确，检查各馈线接头是否进水，或采用交叉检查法确定是RRU还是天馈线系统故障。</p></li><li><p>上行信号不好</p><ul><li>检查CDU有无塔放警告，如果有按塔放警告的一般方法处理。</li><li>检查CDU低噪有无告警，如果有则按低噪声放大器告警的一般方法处理。</li><li>检查CDU天线输入端口到机柜顶的连接电缆是否正常，如不正常则将其更换。</li></ul></li></ul></li></ol><h2 id="七、项目总结"><a href="#七、项目总结" class="headerlink" title="七、项目总结"></a>七、项目总结</h2><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647609821657projectsummarize.jpg" alt></p><p>&emsp;&emsp;在这次复杂项目中，我们每个人都在其中完成了足够分量的工作。虽然由于现实条件的限制，在具体实施过程中我们完成的工作与初始分配的职位不完全匹配，但基本也是按照职责分配的任务。除此以外，我们每个人实际也都参与了几乎每个流程的讨论，只有在团队合作中才能如此快地从0到1完成整个项目的流程。</p><p>&emsp;&emsp;另外，这次复杂项目也让我们对工程设计有了更多的了解，比如基站建设原则、天线架设原则等等，同时实际施工工程中也会遇到很多现实问题，比如居民不满意、影响街容街景、如何降低建设成本等，这些都是工程中需要考虑的。</p><p>&emsp;&emsp;最后非常感谢能有这次机会进行专业实习，我们确实是从中学习到了不少学校中没接触过的知识，这也将对我们之后的认识和学习有所帮助。</p><h2 id="八、方案问题及优化"><a href="#八、方案问题及优化" class="headerlink" title="八、方案问题及优化"></a>八、方案问题及优化</h2><ol><li><p>南门天线高度仅10m，北门25m，而山高43m，且山顶的万春亭人流大、需求多，现有方案是否有可能无法对其进行信号覆盖？</p><p>答：原有方案之所以不在山顶设置基站，是为了防止破坏景区景观，景山位于北京中轴线，山顶万春亭是游客最爱俯瞰全城的位置，建设宏基站伪装困难，且易破坏景区和谐性。因此可在万春亭周围增设<strong>补盲基站——微基站</strong>，且安装<strong>全向天线</strong>，对山顶四周进行覆盖，足以解决问题。</p></li><li><p>小区编号应遵循天线方位角顺序，原有编号是1-315°，2-45°，3-180°。应该改为1-45°，2-180°，3-315°，才符合建设规范。</p></li><li><p>南门口基站天线架设在景区内部墙壁是否更为合理？</p><p>答：之所以将天线架设在南门口的路灯或天线塔上，是因为景区门口存在大量业务需求，即门口闸机扫码入园，以及近年因疫情原因，入园必须检查健康码，扫码产生的流量让我们觉得有必要在此对其进行较强的信号覆盖。因此天线设置在门口应该是合理的。至于路灯站对环境产生的不美观影响，可通过不影响电磁波传播的材料对其进行围绕遮挡，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed@main/ProfessionalPractice/1647606537650BaseStation.jpg" alt="美化路灯基站"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基站 </tag>
            
            <tag> 专业实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZF预编码相关矩阵知识</title>
      <link href="/yyds/aabaae8c.html"/>
      <url>/yyds/aabaae8c.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、矩阵转置、厄米特转置、求逆"><a href="#一、矩阵转置、厄米特转置、求逆" class="headerlink" title="一、矩阵转置、厄米特转置、求逆"></a>一、矩阵转置、厄米特转置、求逆</h4><ol><li>矩阵转置：$A^T$</li><li>厄米特转置（共轭转置）：$(A^T)^<em>=(A^</em>)^T$</li><li>矩阵的逆：$A^{-1}$（前提：A是方阵）</li><li>一些基本运算：<ul><li>$(A^{-1})^{-1}=A;(A^T)^T=A;(A^H)^H=A;(A^<em>)^</em>=A$</li><li>$(A^T)^{-1}=(A^{-1})^T;(A^H)^{-1}=(A^{-1})^H$</li><li>$(AB)^{-1}=B^{-1}A^{-1};(AB)^T=B^TA^T;(AB)^H=B^HA^H$</li></ul></li></ol><h4 id="二、矩阵的广义逆-伪逆-Pseudo-inverse-Matrix"><a href="#二、矩阵的广义逆-伪逆-Pseudo-inverse-Matrix" class="headerlink" title="二、矩阵的广义逆/伪逆(Pseudo-inverse Matrix)"></a>二、矩阵的广义逆/伪逆(Pseudo-inverse Matrix)</h4><ol><li><p>矩阵的逆：对于矩阵A，若存在一个矩阵B，使得$AB=BA=I$，其中I为与A、B同维度的单位阵，则称A为可逆矩阵，B为A的逆矩阵，记作$B=A^{-1}$。</p></li><li><p>矩阵的广义逆：奇异矩阵（行列式为0的方阵）和非方阵没有逆矩阵，但有广义逆矩阵。</p><p>满足$A^LA=I$，但不满足$AA^L=I$的矩阵$A^L$为A的左逆矩阵</p><p>满足$AA^R=I$，但不满足$A^RA=I$的矩阵$A^R$为A的右逆矩阵</p><ul><li><p>仅当$m\ge n$时，列满秩，矩阵$A_{m,n}$有左逆矩阵，$A^L=(A^TA)^{-1}A^T$</p></li><li><p>仅当$n\ge m$时，行满秩，矩阵$A_{m,n}$有右逆矩阵，$A^R=A^T(AA^T)^{-1}$</p></li><li><p>当$n=m$时，矩阵$A_{m,n}$的秩为$r\le m=n$</p><p>对A进行<strong>奇异值分解</strong>：$A=UDV^T$</p><p>A的广义逆矩阵为：$A^{\dagger}=VD^{\dagger}U^T$</p><p>其中$D=\left(\begin{array}{ll}\Sigma &amp; 0 \\ 0 &amp; 0\end{array}\right)$，$D^{\dagger}=\left(\begin{array}{ll}\Sigma^{-1} &amp; 0 \\ 0 &amp; 0\end{array}\right)$。</p><p><strong>广义逆是唯一的</strong>，满足：$ABA=A,BAB=B,(AB)^T=AB,(BA)^T=BA$（B为A的广义逆）</p></li></ul></li><li><p>广义逆矩阵的意义</p><p>&emsp;&emsp;对于n元线性方程组$AX=B$，其解有3种情况：有唯一解、有无穷解、无解。其中$A_{m,n}$是非满秩矩阵（即不可逆）,$B_{m,1}$</p><ul><li><p>有唯一解。$r(A)=r(AB)=n$</p></li><li><p>有无穷解。$r(A)=r(AB)&lt;n$，此时A行满秩，线性方程个数小于变量个数，故有无穷解。通过构造右逆矩阵，可得到一个最接近原点的唯一解$X^0$。$X^0=BA^R$是方程$AX=B$所有解中最接近原点的。</p></li><li><p>无解。$r(A)&lt;r(AB)$，此时B不在A的列空间中，只能在A的列空间中找到一个与B的欧氏距离最小的$B’$，满足$B’=AX^0$，$X^0$是使得范数$||AX-B||$最小化的近似解。构造$X^0=A^LB$，$A^L$为左逆矩阵。</p><p><strong>广义逆是几何约束条件下的最优解</strong></p></li></ul></li></ol><h4 id="三、ZF预编码"><a href="#三、ZF预编码" class="headerlink" title="三、ZF预编码"></a>三、ZF预编码</h4><blockquote><p>预编码技术是在下行链路的发送端利用信道状态信息（CSI）对发送信号进行预处理，将不同用户及天线之间的干扰最小化，并将信号能量集中到目标用户附近，使接收端获得较好的信噪比（SNR），提高系统信道容量。（其中采用基于统计信道信息的预编码，统计信道状态相较于即时信道状态变化慢，可采用简单的长期反馈方式或信道互易性得到）</p></blockquote><p>&emsp;&emsp;信道矩阵$H_{M,K}$（K个用户，M根天线，每行为一个用户信道信息）；ZF预编码矩阵$W_{M,K}$（每列为一个用户的预编码向量）。（此处为左逆矩阵）</p><script type="math/tex; mode=display">\mathbf{W}=\mathbf{H}^{\dagger}=\mathbf{H}\left(\mathbf{H}^\mathbf{H}\mathbf{H}\right)^{-\mathbf{1}}=\left[w_{1}, w_{2}, \ldots, w_{k}\right]</script><p>&emsp;&emsp;ZF预编码致力于消除不同用户间的干扰，不考虑噪声的影响。ZF预编码矩阵与信道矩阵相乘以后，得到一个近似的对角矩阵（除对角线元素为1以外的其它元素趋于0）</p><p>例：</p><p><img src="https://i.loli.net/2021/12/01/WwGhtxIsRqDnrY9.png" alt="ZF预编码"></p><h4 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h4><ul><li><a href="https://www.cnblogs.com/begtostudy/archive/2010/09/03/1817033.html">矩阵论基础 3.4线性方程组的解</a></li><li><a href="https://www.jianshu.com/p/609fa0cce409">伪逆矩阵（广义逆矩阵）</a></li><li>郑和. 大规模 MIMO 预编码技术研究与实现[D]. 电子科技大学, 2015.</li><li><a href="https://www.eefocus.com/rf-microwave/441640">详解大规模MIMO系统中的预编码技术</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 预编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12-应用实例-照片OCR</title>
      <link href="/yyds/a9eeda10.html"/>
      <url>/yyds/a9eeda10.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>介绍一个复杂的机器学习系统如何组成</p></blockquote><h3 id="一、照片光学字符识别（Photo-Optical-Character-Recognition，photo-OCR）"><a href="#一、照片光学字符识别（Photo-Optical-Character-Recognition，photo-OCR）" class="headerlink" title="一、照片光学字符识别（Photo Optical Character Recognition，photo OCR）"></a>一、照片光学字符识别（Photo Optical Character Recognition，photo OCR）</h3><p>如查找图片时，输入照片上存在的词语就可以将该照片搜索出来。</p><p>OCR步骤：<strong>文本检测、字符分割、字符分类（识别）</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/PhotoOCR/OCR-pipline.jpg" alt></p><p>其中第3步可以利用之前学习的<strong>神经网络</strong>进行识别（exercise4中有对图像中的0-9数字进行识别）。</p><p><strong>滑动窗口分类器(sliding windows classifier)</strong></p><blockquote><p>用一个固定大小的框（窗口）以一定的步长遍历图像的所有区域并进行分类。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/PhotoOCR/sliding-windows-classifier.jpg" alt="perdestrian detection"></p><p><strong>将滑动窗口应用到文本检测</strong></p><blockquote><p>将分类器认为可能有文本的地方用白色表示，没有的用黑色表示。然后逐渐扩大白色区域的范围（经过<strong>放大算子</strong>）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/PhotoOCR/text-detection.jpg" alt="text detection"></p><p><strong>将1维滑动窗口应用到字符分割</strong></p><blockquote><p>将不同的图片文本样本分类为正样本（有间隔）和负样本（完整字母，无间隔）进行训练，可能用到网络或者其它算法，最后得到一个分类器。然后将分类器应用于上一步得到的文本框，会有如下效果：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/PhotoOCR/character-segmentation.jpg" alt="character segmentation"></p><h3 id="二、获取数据集和人工数据合成-artificial-data-synthesis"><a href="#二、获取数据集和人工数据合成-artificial-data-synthesis" class="headerlink" title="二、获取数据集和人工数据合成(artificial data synthesis)"></a>二、获取数据集和人工数据合成(artificial data synthesis)</h3><blockquote><p>可以通过在一份原始数据中引入合理的失真合成多份不同场景下的数据。如给图像或音频加入噪声。</p></blockquote><p> <strong>决定是否要获取更多数据</strong></p><ul><li>画学习曲线——<strong>高方差</strong>情况下增大数据集规模有利于提高模型性能</li><li>计算增大10倍数据集所需工作量，以及找到降低增大数据集所需工作量的方法</li></ul><h3 id="三、上限分析"><a href="#三、上限分析" class="headerlink" title="三、上限分析"></a>三、上限分析</h3><blockquote><p>在决定下一步做什么时，对工作流进行上限分析可以指导哪一部分最值得研究，即决定如何对每一部分分配资源。</p></blockquote><p> 例：人脸识别机器学习系统开发</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/PhotoOCR/face-recognition.jpg" alt></p><p>将问题划分为多个子模块，分别对每个模块进行上限分析，然后测试观察哪一个模块的提升给系统整体性能提升能带来更大的价值。如在预处理阶段（背景移除），人工把所有目标标记出来并移除背景，再运行后续的模块，可以看到准确率提升了0.1%；而人工将脸部特征识别标记出来，即标记出鼻子、眼睛、嘴巴等，再运行后续模块，准确率提升了5.9%；其它模块类似。由此可见，将大部分资源放在背景移除模块远不如将资源集中在面部特征识别或逻辑回归算法调整部分。这就是上限分析的作用，将有限的精力和资源放在更有利于提升系统整体性能的子模块。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11-学习大数据集</title>
      <link href="/yyds/6c178a59.html"/>
      <url>/yyds/6c178a59.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>应用于大数据集较为合适的两种算法：随机梯度下降 和 mini-batch 梯度下降。</p></blockquote><h3 id="一、随机梯度下降（stochastic-gradient-descent）"><a href="#一、随机梯度下降（stochastic-gradient-descent）" class="headerlink" title="一、随机梯度下降（stochastic gradient descent）"></a>一、随机梯度下降（stochastic gradient descent）</h3><blockquote><p>由于<strong>之前</strong>实现梯度下降时，每次迭代都需要考虑<strong>所有样本</strong>，因此也称为<strong>批量梯度下降(batch gradient descent)</strong>。如 $\theta_j := \theta_j-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x_j^{(i)}$ ，其中第二项包含所有样本。对于大数据集，这种方法并不适用。</p></blockquote><p>随机梯度下降与批量梯度下降的区别在于，其迭代时不需要对整个样本进行求和，而是仅利用一个训练样本就可以进行参数的迭代优化。</p><p>算法过程：</p><ol><li><p>随机对训练数据集排序</p></li><li><p>Repeat {</p><p>for $i: =1,…,m$ {</p><p>$\theta_j:=\theta_j-\alpha(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_j$  </p><p>（for every $j=0,…,n$）</p><p>​    }</p><p>}</p><blockquote><p>这里算法的优势在于，由于数据集很大（m很大），并且for循环内每一次迭代都在对参数 $\theta$ 进行优化，在一次完整的for循环内可能就已经得到了较好的参数，因此性能优于原本的批量梯度下降算法。正常来说repeat 1~10次是合理的，这取决于样本大小。</p></blockquote></li></ol><h3 id="二、Mini-batch-梯度下降"><a href="#二、Mini-batch-梯度下降" class="headerlink" title="二、Mini-batch 梯度下降"></a>二、Mini-batch 梯度下降</h3><blockquote><p>思想：随机梯度下降算法的思想是每次迭代使用 1 个样本，Mini-batch 梯度下降的思想是每次迭代利用 b 个样本。</p></blockquote><p>算法过程：</p><ol><li><p>假设 $b=10,m=1000$ </p></li><li><p>Repeat {</p><p>for $i=1,11,21,31,\ldots,991$ {</p><p>$\theta_j:=\theta_j-\alpha\frac{1}{10}\sum_\limits{k=i}^{i+9}(h_\theta(x^{(k)})-y^{(k)})x^{(k)}_j$ </p><p>（for every $j=0,…,n$）</p><p>​    }</p><p>}</p><blockquote><p>合适的向量化计算可以并行地实现算法，当且仅当此时 Mini-batch 算法优于随机梯度下降算法。</p></blockquote></li></ol><h3 id="三、算法收敛性检验"><a href="#三、算法收敛性检验" class="headerlink" title="三、算法收敛性检验"></a>三、算法收敛性检验</h3><p><strong>批量梯度下降</strong></p><blockquote><p>画出代价函数 $J_{train}(\theta)=\frac{1}{2m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$ 关于迭代次数的函数图像。</p></blockquote><p><strong>随机梯度下降</strong></p><blockquote><p>在每次更新 $\theta$ 前计算代价函数 $cost(x^{(i)},y^{(i)})=\frac{1}{2}(h_\theta(x^{(i)})-y^{(i)})^2$ 。然后每 1000（或者其它）次画一次平均 $cost$ 值，随着算法运行，同样将获得一个随迭代次数变化的代价函数值图像。</p><p><strong>注意</strong>：</p><ol><li>梯度下降并不是一个代价函数一直下降的过程，而是振荡下降，因此适当调低学习速率 $\alpha$ ，可能获得一个更优的结果，但相应收敛速度变慢。</li><li>若学习曲线下降缓慢（收敛慢）或者振荡幅度大，则应该提高选择计算代价函数平均值的样本数量。</li><li>若得到的学习曲线是增大的（发散），应该设置较小的学习速率 $\alpha$ 。</li><li>一般情况下梯度下降的学习速率是不变的，但是为了提高算法的效果，也可以设置一个随迭代增加而逐渐减小的学习速率：$\alpha=\frac{const}{iterationNumber+const}$ 。</li></ol></blockquote><h3 id="四、在线学习机制"><a href="#四、在线学习机制" class="headerlink" title="四、在线学习机制"></a>四、在线学习机制</h3><blockquote><p>对于具有<strong>连续数据流</strong>的场景（如在线运行的网站，拥有不断涌入注册的用户）可以利用在线学习机制，利用新增加用户的偏好改进算法的性能。即训练数据集不固定。<strong>是随机梯度下降算法的变式。</strong> </p></blockquote><p>例：产品搜索——点击率预测学习问题（CTR预测，click through rate）</p><p>有一个在线卖手机的商店，用户可以搜索相应的手机。假设店里有100部手机，每次搜索会返回10个结果。可以构建一个特征向量 $x$ ，代表用户搜索词与手机描述相匹配的程度等等，我们需要估计出用户点击每个手机链接的概率 $p(y=1|x;\theta)$ ，并用 $y=1$ 表示用户点击该链接，否则为 $y=0$ 。最后我们需要为用户显示10个最匹配的手机链接（用户最可能会点击的链接）。</p><p>对于这类问题，在线学习机制就是不断地为新用户展示为其推荐的10个最可能点击的链接，得到10个样本，并对这10个样本运行10步梯度下降算法来更新参数，然后丢弃这些样本，然后继续对进入的新用户流进行展示和学习。不断循环……类似的还有新闻抓取网站、招聘网站以及协同过滤推荐等等。</p><h3 id="五、减少映射（MapReduce）与数据并行（data-parallelism）"><a href="#五、减少映射（MapReduce）与数据并行（data-parallelism）" class="headerlink" title="五、减少映射（MapReduce）与数据并行（data parallelism）"></a>五、减少映射（MapReduce）与数据并行（data parallelism）</h3><blockquote><p>适用于数据过多以至于无法在单机上运行的大规模机器学习场景。只要算法能够表示为对训练集的求和，就可以使用MapReduce。</p></blockquote><p><strong>Map-reduce</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/LargeDataSet/MapReduce-2.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/LargeDataSet/MapReduce-1.jpg" alt></p><p>基于上图所示过程，代价函数及其偏导计算，都可以分解至多个机器进行并行运算，然后整合。（对于多核计算机，即便是同一计算机，也可以利用MapReduce进行并行计算）</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-推荐系统（Recommendeder-System）</title>
      <link href="/yyds/985df1c1.html"/>
      <url>/yyds/985df1c1.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-基于内容的推荐系统（Content-based-recommender-systems）"><a href="#1-基于内容的推荐系统（Content-based-recommender-systems）" class="headerlink" title="1. 基于内容的推荐系统（Content-based recommender systems）"></a>1. 基于内容的推荐系统（Content-based recommender systems）</h3><p>如将每部电影的内容划分为爱情元素（romance）  $x_1$ +动作元素（action）$x_2$ ，并且有一定的<strong>数值</strong>描述该电影成分。根据用户对电影的评价分数及相应电影的内容分布情况训练某个用户对于电影评价的相关参数，并<strong>用其预测该用户对其它电影的评价分数（个性化）</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/movie-content-based.jpg" alt="基于内容的电影推荐系统"></p><p>训练过程：简单地，同样可用使用类似于线性回归的方式，通过最小化平方误差和来寻找最合适的参数 $\theta$ 。为了防止过拟合还可以加入正则化。得到类似下面的一个公式：</p><p>Given $x^{(i)}$ ，to learn  $\theta$ </p><ul><li><p>针对单个用户的参数估计：$\theta^{(j)}\in\mathbb{R}^{n+1}$ ，n是电影特征数量，1是偏置项。 </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/1.jpg" alt></p><p>其中 $r(i,j)=1$ 指的是用户评价过的电影（未评价的值为0）。注意与线性回归不同，这里计算的是 平方误差和 而非 均方误差和，其实就是去掉 了 $\frac{1}{2m}$ 项，只是为了后面的公式更为简化，对参数训练没有影响。</p></li><li><p>针对所有用户的参数估计：$\theta^{(1)},\ldots,\theta^{(n_u)}$ </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/2.png" alt></p></li></ul><p>然后可用利用<strong>梯度下降</strong>求解。 </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/3.jpg" alt></p><h3 id="2-协同过滤算法（Collaborative-filtering-algorithm）"><a href="#2-协同过滤算法（Collaborative-filtering-algorithm）" class="headerlink" title="2. 协同过滤算法（Collaborative filtering algorithm）"></a>2. 协同过滤算法（Collaborative filtering algorithm）</h3><blockquote><p>基于内容的推荐系统存在一定缺陷，因为对于大多数电影或者需要销售的商品来说，很难用完整并且量化的特征量去概括或者描述，于是有了协同过滤算法推荐系统，该系统能自动学习所要使用的特征，并同时利用特征和用户的喜好参数以及评分进行协同过滤。</p></blockquote><p><strong>特征学习算法</strong> </p><blockquote><p>该算法的前提：<strong>用户已经告诉系统他们的偏好。</strong> 即模型参数 $\theta$ 和一部分电影评分已知。</p><p>作用：利用用户提供的信息（$\theta$ 已知），对电影特征进行学习。</p></blockquote><p>示例：电影推荐系统</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/movie-Collaborative-filtering-based.jpg" alt="movie-Collaborative-filtering-based"></p><ul><li><p>学习单个特征。Given $\theta^{(1)},\ldots,\theta^{(n_u)}$ ，to learn $x^{(i)}$ ：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/4.jpg" alt></p></li><li><p>学习多个特征。Given $\theta^{(1)},\ldots,\theta^{(n_u)}$ ，to learn $x^{(1)},\ldots,x^{(n_m)}$ ：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/5.jpg" alt></p></li></ul><p><strong>协同过滤算法</strong> </p><blockquote><p>已知通过给定的电影特征 $x$ 以及电影评分可以估计用户偏好参数 $\theta$ 。同样通过给定的用户偏好参数 $\theta$ 可以估计电影特征 $x$ 。因此可以通过<strong>随机地猜取</strong>一部分 $\theta$ 值，然后用来估计一些 $x$ 值，然后再用来估计 $\theta$ ，如此循环：$\theta\rightarrow x\rightarrow \theta\rightarrow x \rightarrow \ldots$ ，最终收敛得到一组合理的 $\theta$ 和 $x$ 值。这就是最基本的协同过滤算法。 </p></blockquote><p>改进算法：同时计算 $x$ 和 $\theta$ </p><ul><li><p>代价函数：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/6.jpg" alt></p></li><li><p>优化目标：$\min_\limits{\substack{x^{(1)},\ldots,x^{(n_m)}\\\theta^{(1)},\ldots,\theta^{(n_u)}}}J\left(x^{(1)}, \ldots, x^{\left(n_{m}\right)}, \theta^{(1)}, \ldots, \theta^{\left(n_{u}\right)}\right)$ </p></li><li><p>协同过滤算法</p><ol><li><p>随机初始化 $x^{(1)}, \ldots, x^{\left(n_{m}\right)}, \theta^{(1)}, \ldots, \theta^{\left(n_{u}\right)}$ 为较小值。（类似神经网络的初始化）</p></li><li><p>使用梯度下降或高级优化算法最小化代价函数 $J$ 。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/7.jpg" alt></p><p>其中由于同时进行 $x,\theta$ 的计算，第二项实际是代价函数分别对 $x,\theta$ 的偏微分。此外，这里没有像之前的算法一样的偏置项 $x_0=1$ ，也不存在需要做特殊处理的 $\theta_0$ 。</p></li><li><p>对拥有偏好参数 $\theta$ 的用户以及具有特征参数 $x$ 的电影进行评分预测。</p></li></ol></li></ul><h3 id="3-算法实现细节"><a href="#3-算法实现细节" class="headerlink" title="3. 算法实现细节"></a>3. 算法实现细节</h3><p><strong>矢量化：低秩矩阵分解</strong></p><blockquote><p>利用低秩矩阵的性质矩阵化计算预测评分。</p></blockquote><p>将电影和评分数据写成矩阵形式，然后相应地用矩阵 $\theta^Tx$ 进行预测。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/matrix-compute.jpg" alt="数据转换"><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/rating-predict.jpg" alt="评分预测"></p><p>如何找到与电影 $j$ 类似的电影 $i$ ？（即推荐什么电影）</p><blockquote><p>计算每部电影的相似度：$||x^{(i)}-x^{(j)}||$ ，值最小的则是最相似的。</p></blockquote><p><strong>均值归一化（Mean Normalization）</strong></p><blockquote><p>可能会有一些用户从来没进行过任何电影评分，此时若直接按照算法计算，<strong>最终结果都是0</strong>，即不会有任何电影被推荐给该用户。我们可以对每行或每列进行均值归一化，这样可以将无评分用户的影响降低，得到一个合理的推荐结果。</p><p>无评分用户导致预测结果为0的原因：对于优化目标函数，只有正则化项会对该用户对应的参数 $\theta^{(i)}$ 产生影响（第一项只跟有评分的相关），而该 $\theta^{(i)}$ 为0满足令目标函数最小化的要求。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9-异常检测（Anomaly-Detection）</title>
      <link href="/yyds/8a5cc590.html"/>
      <url>/yyds/8a5cc590.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>例：飞机引擎检测、欺诈检测（用户的网站行为检测）</p></blockquote><h3 id="一、高斯分布"><a href="#一、高斯分布" class="headerlink" title="一、高斯分布"></a>一、高斯分布</h3><ul><li>$X\sim N(\mu,\sigma^2)$ </li><li>$p(x;\mu,\sigma^2)=\frac{1}{\sqrt{2\pi}\sigma}\exp(-\frac{(x-\mu)^2}{2\sigma^2})$ </li></ul><p>参数估计：估计参数 $\mu$ 和 $\sigma$ 。</p><h3 id="二、异常检测算法"><a href="#二、异常检测算法" class="headerlink" title="二、异常检测算法"></a>二、异常检测算法</h3><ol><li><p>特征提取。提取出一些对异常敏感的特征量 $x_i$ ，得到<strong>无标签训练集</strong> $\{x^{(1)},\ldots,x^{(m)}\}$ </p></li><li><p>参数拟合（估计）。$\mu_1,\ldots,\mu_n,\sigma_1^2,\ldots,\sigma_n^2$ </p><script type="math/tex; mode=display">\begin{align}&\mu_j=\frac{1}{m}\sum_{i=1}^mx_j^{(i)}\\&\sigma_j^2=\frac{1}{m}\sum_{i=1}^m(x_j^{(i)}-\mu_j)^2\end{align}</script><p>注意：对于大训练集，估计方差时用 $m或(m-1)$ 影响不大。</p></li><li><p>获取一些新的实测数据 $x$ （<strong>测试集</strong>），计算其概率值 $p(x)$ </p><script type="math/tex; mode=display">p(x)=\prod_{j=1}^np(x_j;\mu_j,\sigma_j^2)=\prod_{j=1}^n\frac{1}{\sqrt{2\pi}\sigma_j}\exp(-\frac{(x_j-\mu_j)^2}{2\sigma_j^2})</script><p>若 $p(x)&lt;\varepsilon$ （一个很小的值），则该值为异常值。</p><p>$p(x)=p(x_1;\mu_1,\sigma_1^2)\times p(x_2;\mu_2,\sigma_2^2)\times\ldots\times p(x_n;\mu_n,\sigma_n^2)$</p></li></ol><p>示例：$\sigma$ 越大，分布越平缓，说明数据分布越分散</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/anomaly-detectioin-example.jpg" alt="anomaly detectioin example"></p><h3 id="三、开发和评估异常检测系统"><a href="#三、开发和评估异常检测系统" class="headerlink" title="三、开发和评估异常检测系统"></a>三、开发和评估异常检测系统</h3><p>飞机引擎示例：</p><blockquote><ul><li>10000  good engines（normal）</li><li>20        flawed engines（anomalous）</li><li>训练集 $Training~set$ ：6000 good（y=0）</li><li>验证集 $CV$ ：2000 good（y=0）；10 anomalous（y=1）</li><li>测试集 $test$ ：2000 good（y=0）；10 anomalous（y=1）</li></ul><p>评估方法：</p><ul><li>真/假阳性、真/假阴性</li><li>精确度/召回率</li><li>$F_1$ score</li></ul></blockquote><h3 id="四、异常检测-VS-监督学习"><a href="#四、异常检测-VS-监督学习" class="headerlink" title="四、异常检测 VS 监督学习"></a>四、异常检测 VS 监督学习</h3><div class="table-container"><table><thead><tr><th style="text-align:left">异常检测</th><th style="text-align:left">监督学习</th></tr></thead><tbody><tr><td style="text-align:left">正常样本数非常少（0~50）</td><td style="text-align:left">拥有大量正常样本和异常样本</td></tr><tr><td style="text-align:left">大量异常样本</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">很多<strong>不同类型</strong>的异常样本</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">未来的异常样本很大可能与之前出现过的不一样</td><td style="text-align:left">未来出现的异常样本很大可能与已经出现的异常样本类似</td></tr><tr><td style="text-align:left">欺诈检测、工厂产品检测、数据中心监控计算机</td><td style="text-align:left">天气预测、邮件分类、癌症分类</td></tr></tbody></table></div><h3 id="五、异常检测算法的特征选择"><a href="#五、异常检测算法的特征选择" class="headerlink" title="五、异常检测算法的特征选择"></a>五、异常检测算法的特征选择</h3><ul><li>对于数据分布不像高斯分布的，可以尝试进行变换，令其更接近高斯分布。如<strong>对数变换</strong>（如 $\log(x)$）、<strong>指数变换</strong>（如 $x^{0.5}$）等。</li><li>选择值不会很大也不会很小的特征量。 </li><li>可以对一些特征变量进行组合得到新的特征量（寻找变量间的关系）。</li></ul><h3 id="六、多变量高斯分布"><a href="#六、多变量高斯分布" class="headerlink" title="六、多变量高斯分布"></a>六、多变量高斯分布</h3><blockquote><p>单变量高斯分布的缺陷：数据中的某些异常点，单独观测其某一特征可能是在合理范围内的。如下图中的异常点（绿点）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/example.jpg" alt="单变量高斯分布的缺陷"></p><p>形象地来说，单变量高斯分布异常检测器认为紫色环内的样本点出现概率是一样的，而实际上蓝色椭圆中的点才是真正的正常点。</p></blockquote><p>针对特征变量 $x\in\mathbb{R}^n$ ，不单独对每个变量进行高斯分布建模，而是把它们建模为一个多变量高斯分布模型。</p><ul><li>参数：均值 $\mu\in\mathbb{R}^n$ ，协方差矩阵 $\Sigma\in\mathbb{R}^{n\times n}$ 。</li><li>概率值：$p(x;\mu,\sigma^2)=\frac{1}{(2\pi)^{\frac{n}{2}}|\Sigma|^{\frac{1}{2}}}\exp(-\frac{1}{2}(x-\mu)^T\Sigma^{-1}(x-\mu))$ <ul><li>$\mu=\frac{1}{m}\sum_\limits{i=1}^mx^{(i)}$ </li><li>$\Sigma=\frac{1}{m}\sum_\limits{i=1}^m(x^{(i)}-\mu)(x^{(i)}-\mu)^T$ </li></ul></li></ul><p>对于多变量高斯分布，通过调整参数元素的分布，可以得到侧重不同方面的数据分布图像。如下图</p><ol><li><p>协方差矩阵对角线元素调整</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-1.jpg" alt><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-2.jpg" alt><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-3.jpg" alt></p></li></ol><ol><li><p>协方差矩阵次对角线元素调整</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-4.jpg" alt><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-5.jpg" alt></p></li><li><p>均值调整</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/multivariate-Gaussian-example-6.jpg" alt></p></li></ol><h3 id="七、单变量高斯分布-VS-多变量高斯分布"><a href="#七、单变量高斯分布-VS-多变量高斯分布" class="headerlink" title="七、单变量高斯分布 VS 多变量高斯分布"></a>七、单变量高斯分布 VS 多变量高斯分布</h3><div class="table-container"><table><thead><tr><th>单变量</th><th>多变量</th></tr></thead><tbody><tr><td>$p(x_1;\mu_1,\sigma_1^2)\times p(x_2;\mu_2,\sigma_2^2)\times\ldots\times p(x_n;\mu_n,\sigma_n^2)$</td><td>$p(x;\mu,\sigma^2)=\frac{1}{(2\pi)^{\frac{n}{2}}</td><td>\Sigma</td><td>^{\frac{1}{2}}}\exp(-\frac{1}{2}(x-\mu)^T\Sigma^{-1}(x-\mu))$</td></tr><tr><td>当需要手动设计新特征变量时，如 $x_3=\frac{x_1}{x_2}$ （其实就是<strong>寻找变量间的关系</strong>）</td><td>自动捕捉特征变量间的关系</td></tr><tr><td>计算复杂度低</td><td>计算复杂度高</td></tr><tr><td>可用样本数 m 较小时</td><td><strong>必须满足条件</strong>：$m&gt;n$ （远大于会更好）否则 $\Sigma$ 将不可逆（矩阵奇异，含有冗余特征）</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8-无监督学习（Unsupervised Learning）</title>
      <link href="/yyds/2ae4f87d.html"/>
      <url>/yyds/2ae4f87d.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、无监督学习"><a href="#一、无监督学习" class="headerlink" title="一、无监督学习"></a>一、无监督学习</h3><p>定义：训练数据不带有任何标签。算法的目的是找到数据本身具有的结构特征。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/Unsupervised-learning.png" alt="Unsupervised-learning"></p><p>经典的算法：<strong>聚类（cluster）</strong>、<strong>降维（dimensionality reduction）</strong></p><h3 id="二、K-means-聚类"><a href="#二、K-means-聚类" class="headerlink" title="二、K-means 聚类"></a>二、K-means 聚类</h3><h4 id="2-1-算法步骤："><a href="#2-1-算法步骤：" class="headerlink" title="2.1 算法步骤："></a>2.1 算法步骤：</h4><blockquote><p>Input:</p><ul><li>K（簇的数量）</li><li>无标签训练集$\{x^{(1)},x^{(2)},\ldots,x^{(m)}\},x^{(i)}\in\mathbb{R}^n$ （注意，没有 $x_0=1$ ）</li></ul></blockquote><ol><li><p><strong>随机初始化</strong> $K$ 个簇，分别以 $\mu_1,\mu_2,\ldots,\mu_K\in\mathbb{R}^n$ 为簇中心。</p></li><li><p>重复以下步骤直到达到一定的精度或到达最大迭代次数：</p><ol><li><strong>簇分配</strong>。分别计算每个样本点 $x^{(i)}$ 到每个簇中心的距离，并选择距离其最近的簇中心，记录距离为 $c^{(i)}$ ，即 $\min_\limits{K}||x^{(i)}-\mu_k||^2$ 。并将该点归为距离最近的簇内。</li><li><strong>移动聚类中心</strong>。针对上一步得到的 $K$ 个簇，计算每个簇内每个点（假设有n个）位置的平均值，作为新的簇中心的位置，$\mu_k’=\frac{1}{n}\sum_{i=1}^nx^{(i)},~x^{(i)}\in\mathbb{R}^n$ （注意得到的 $\mu_k’$ 是一个 n 维向量，即一个点的位置）。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/clustering-process.jpg" alt="聚类过程"></p><p>随着算法的运行，簇中心从随机初始化点逐渐移动到真正的簇中心。</p></li></ol><p>算法应用：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/application-of-k-means.jpg" alt="application of k-means"></p><p>一般来说是左图这类数据结构差异明显的，但也可用于右图这样分布结构比较紧密的数据。</p><h4 id="2-2-K-means-算法的优化目标"><a href="#2-2-K-means-算法的优化目标" class="headerlink" title="2.2  K-means 算法的优化目标"></a>2.2  K-means 算法的优化目标</h4><p>Optimization Objective：(失真函数)</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/formulation-1.jpg" alt></p><h4 id="2-3-随机初始化"><a href="#2-3-随机初始化" class="headerlink" title="2.3 随机初始化"></a>2.3 随机初始化</h4><blockquote><p>目的：找到最优的簇，避免局部最优解。</p></blockquote><p>局部最优的例子：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/local-optima.jpg" alt="local optima"></p><p>如何避免局部最优？</p><blockquote><p>随机初始化簇中心，并以最小化代价函数 $J(·)$ 为目标进行迭代。随机初始化方法如直接选取 $K$ 个样本点作为簇中心。</p></blockquote><h4 id="2-4-簇数量-K-的选择"><a href="#2-4-簇数量-K-的选择" class="headerlink" title="2.4 簇数量 $K$ 的选择"></a>2.4 簇数量 $K$ 的选择</h4><ol><li><p><strong>“肘部法则”</strong></p><blockquote><p>分别设置不同的 $K$ 值，然后运行同样的 K-means 算法，得到各自的代价函数 $J(·)$ 。画出代价函数关于 $K$ 的变化趋势图并根据该图进行选择。如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/elbow-method.jpg" alt="elbow method"></p></blockquote></li><li><p>根据<strong>实际需要/目的</strong>决定 $K$ 值。如对 T-shirt 的大小范围进行聚类（S、M、L，K=3 或 XS、S、M、L、XL，K=5），需要根据市场需求、销量等进行选择。</p><h3 id="三、降维"><a href="#三、降维" class="headerlink" title="三、降维"></a>三、降维</h3></li></ol><blockquote><p>降维（Dimension Reduction）的目的：数据压缩，数据可视化。</p></blockquote><h4 id="3-1-数据压缩"><a href="#3-1-数据压缩" class="headerlink" title="3.1 数据压缩"></a>3.1 数据压缩</h4><p>数据的某些特征可能是高度相关的，可以通过减少特征冗余达到数据压缩的目的。</p><p>例：$3D\rightarrow 2D,~x^{(i)}\in\mathbb{R}^3\rightarrow z^{(i)}\in\mathbb{R}^2$ 。一些在3D空间中的点云，大多数分布在一个2D的平面内，可以将这些点投影到这个2D平面，从而仅使用两个变量来描述数据特征。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/UnsupervisedLearning/data-compression.jpg" alt="data compression"></p><h4 id="3-2-数据可视化"><a href="#3-2-数据可视化" class="headerlink" title="3.2 数据可视化"></a>3.2 数据可视化</h4><p>当数据维度很高时，无法进行数据可视化以直观地观察数据之间的关系及变化。可以通过降维将数据维度降低至2或3维，从而画出图像。</p><h4 id="3-3-主成分分析（Principal-Component-Analysis，PCA）"><a href="#3-3-主成分分析（Principal-Component-Analysis，PCA）" class="headerlink" title="3.3 主成分分析（Principal Component Analysis，PCA）"></a>3.3 主成分分析（Principal Component Analysis，PCA）</h4><blockquote><p>寻找一个低维空间，然后将数据投影在上面，数据点到该空间的距离称为投影误差，PCA 的目的是找到一个令平方投影误差最小的低维空间。</p></blockquote><p>PCA 与线性回归的区别：</p><blockquote><ol><li>在进行线性回归时，计算误差计算的是点到直线在<strong>垂直方向的距离</strong>。而 PCA 计算的是点到投影点的<strong>正交距离（最短距离）</strong>。</li><li>线性回归服务于特殊的变量 $y$ ，从而进行预测。而 PCA 的目的是降低数据维度，没有这个特殊变量。</li></ol></blockquote><p>PCA 的步骤：</p><ol><li><p>训练集：$(x^{(1)},x^{(2)},\ldots,x^{(m)})$</p></li><li><p>数据预处理</p><ul><li>均值标准化（零均值化）。对每个 $x_j^{(i)}$ 执行 $x_j-\mu_j$</li><li>特征缩放。若不同特征数值范围差异很大，需要进行特征缩放。$x_j^{(i)}=\frac{x_j^{(i)}-\mu_j}{s_j}$ ($s_j$ 为标准偏差或 $x_{j_{max}}-x_{j_{min}}$)</li></ul></li><li><p>计算协方差矩阵（covariance matrix）</p><script type="math/tex; mode=display">\Sigma=\frac{1}{m}\sum_{i=1}^m(x^{(i)})(x^{(i)})^T</script></li><li><p>做 SVD 分解，计算协方差矩阵 $\Sigma$ 的特征向量（eigenvectors）$U\in\mathbb{R}^{n\times n}$</p><script type="math/tex; mode=display">[U,S,V] = \mathrm{svd}(\Sigma);</script></li><li><p>仅取矩阵 $U$ 的前 $k$ 个向量组成的矩阵 $U_{reduce}\in\mathbb{R}^{n\times k}$ 。降维后得到新的特征向量（$x\in\mathbb{R}^n\rightarrow z\in\mathbb{R}^k$）</p><script type="math/tex; mode=display">z=U_{reduce}^Tx,\quad z\in\mathbb{R}^k</script></li></ol><p>选择合适的主成分的数量 $k$ ，以<strong>最小化平均平方投影误差</strong></p><ol><li><p>平均平方投影误差：$\frac{1}{m}\sum_\limits{i=1}^m||x^{(i)}-x_{approx}^{(i)}||^2$</p><blockquote><p>压缩重现：$z=U_{reduce}^Tx \rightarrow x_{approx}=(U_{approx}^T)^{-1}z \approx x$</p></blockquote></li><li><p>总方差：$\frac{1}{m}\sum_\limits{i=1}^{m}||x^{(i)}||^2$</p></li><li><p>一般来说，选择尽可能小的 $k$ 值，但要求保证</p><script type="math/tex; mode=display">\frac{\frac{1}{m}\sum_\limits{i=1}^m||x^{(i)}-x_{approx}^{(i)}||^2}{\frac{1}{m}\sum_\limits{i=1}^{m}||x^{(i)}||^2}\le 0.01/0.05/0.10/\ldots</script><p>保留 99%（95%, 90%,…） 的方差（<strong>方差保留比例</strong>），代表了投影数据逼近原始数据的程度。</p><p>对于这个计算，实际上相当于计算 $1-\frac{\sum_\limits{i=1}^kS_{ii}}{\sum_\limits{i=1}^nS_{ii}}\le 0.01$ ，其中 $S_{ii}$ 为前面进行 $SVD$ 分解时得到的对角矩阵 $S(\in\mathbb{R}^{n\times n})$ 对角线上的值。</p></li></ol><h4 id="3-4-PCA-应用建议"><a href="#3-4-PCA-应用建议" class="headerlink" title="3.4 PCA 应用建议"></a>3.4 PCA 应用建议</h4><blockquote><p>注意在使用 PCA 之前，首先需要考虑不使用 PCA ，应该如何利用原始数据解决问题。</p></blockquote><p>当应用 PCA 在模型中时，<strong>只能在训练集上应用 PCA</strong> ，并通过得到的新训练集计算出所需模型参数 $\theta$ 。此时我们已经得到了原始数据 $x$ 到主成分 $z$ 的映射关系，<strong>将此映射关系应用至交叉验证集和测试集</strong>进行模型选择和泛化性能评估。</p><p>PCA 的错误应用：应用 PCA 以防止过拟合。可能效果不错，但不如正则化，而且 PCA 并不会利用标签，并且舍弃了一些有价值的信息。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7-支持向量机（SVM）</title>
      <link href="/yyds/e16db3fa.html"/>
      <url>/yyds/e16db3fa.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>SVM 也被称作大间距分类器。对<strong>非线性分类</strong>有较好的处理。SVM处理的问题都是凸优化问题，因此找到的几乎都是全局最优值。而神经网络存在局部最优的问题。</p></blockquote><h3 id="一、优化目标"><a href="#一、优化目标" class="headerlink" title="一、优化目标"></a>一、优化目标</h3><p>Support vector machine Hypothesis（SVM的数学定义）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/formulation-0.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/SVM-hypothesis.png" alt="SVM hypothesis"></p><h3 id="二、SVM的直观解释"><a href="#二、SVM的直观解释" class="headerlink" title="二、SVM的直观解释"></a>二、SVM的直观解释</h3><p>假设中的 $C$ 作用等效于之前逻辑回归中的 $\frac{1}{\lambda}$ 。若 $C$ 很大，则假设会对异常点非常敏感（拟合很好甚至过拟合），表现为图中黑色的分界线会变为紫色的分界线；若 $C$ 很小，则可能会忽略异常点，得到黑线。（$C$ 的作用类似正则化因子）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/decision-boundary.png" alt="decision boundary"></p><h3 id="三、SVM的数学原理"><a href="#三、SVM的数学原理" class="headerlink" title="三、SVM的数学原理"></a>三、SVM的数学原理</h3><ol><li><p>向量内积（Vector Inner Product）</p><p>$u^Tv=p·||u||=u_1v_1+u_2v_2=v^Tu$</p><p>其中 $p$ 为向量 $v$ 在向量 $u$ 上的投影长度，范数 $||u||$ 为向量 $u$ 的长度，$p,||u||\in\mathbb{R}$，$u=[u_1,u_2],v=[v_1,v_2]$。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/vector-inner-product.png" alt="Vector Inner Product"></p></li><li><p>SVM 决策边界</p><p>SVM假设为（即 $C$ 很大，可以不考虑第一项）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/formulation-1.jpg" alt></p><p>根据向量内积，可将假设转换为</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/formulation-2.jpg" alt></p><p>其中 $p^{(i)}$ 是 $x^{(i)}$ 在向量 $\theta$ 上的投影。假设 $\theta_0=0$，即向量 $\theta$ 过原点（该值是否为0对分类效果影响不大）。则分类情况会出现下面几种情况：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/interpretation-for-SVM-large-margin.png" alt="interpretation for SVM&#39;large margin.png"></p><p>由图可见，通过选择右边的决策边界（绿线），可以让两类样本的间隔更远（即投影值 $p^{(i)}$），从而使得代价函数值更小。（当 $p^{(i)}&gt;0$ 且较大时，$||\theta||$ 很小就能满足约束条件 $p^{(i)}\cdot|\theta|\ge 1$）。即<strong>分类器试图最大化训练样本到决策边界的距离</strong>——投影值 $p$。</p></li></ol><h3 id="四、核函数（Kernel-Function）"><a href="#四、核函数（Kernel-Function）" class="headerlink" title="四、核函数（Kernel Function）"></a>四、核函数（Kernel Function）</h3><p>利用<strong>相似度函数（核函数）</strong>和<strong>标记点</strong>来定义<strong>新的特征变量 </strong>$f$：</p><blockquote><p>$f_i=\text{similarity}(x,l^{(i)})=\exp(-\frac{||x-l^{(i)}||^2}{2\sigma^2})$</p><p>若 $x\approx l^{(i)}$：则 $f_i\approx 1$</p><p>若 $x$ 离 $l^{(i)}$ 很远：则 $f_i\approx 0$</p></blockquote><p>利用新的特征变量预测y值：</p><blockquote><p>$\theta_0+\theta_1f_1+\theta_2f_2+\theta_3f_3\ge 3,\quad y=1$</p><p>$\theta_0+\theta_1f_1+\theta_2f_2+\theta_3f_3&lt; 3,\quad y=0$</p></blockquote><p><strong>采用核函数的 SVM 运算过程：</strong> </p><ol><li><p>给定样本集 ：$(x^{(1)},y^{(1)},x^{(2)},y^{(2)},\ldots,x^{(m)},y^{(m)})$</p></li><li><p>选取标记点：</p><blockquote><p>可以直接选择样本点作为标记点。即 $l^{(1)}=x^{(1)},l^{(2)}=x^{(2)},\ldots,l^{(m)}=x^{(m)}$</p></blockquote></li><li><p>计算新的特征变量（映射）</p><blockquote><p>$f_i=\text{similarity}(x,l^{(i)})$</p><p>$f=[f_0,f_1,\ldots,f_m],\quad f_0=1$</p><p>映射关系为：</p><p>$x^{(i)}\rightarrow (f_0^{(i)},f_1^{(i)},f_2^{(i)},\ldots,f_m^{(i)})$，即将样本点 $x^{(i)}$ （可能包含多个特征）映射为特征向量 $f_i$ 进行后续计算。</p></blockquote></li><li><p>最终的假设就变为</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/SVM/formulation-3.jpg" alt></p></li></ol><p>SVM参数：</p><ul><li>$C(=\frac{1}{\lambda})$<ul><li>Large。低偏差，高方差（small λ）</li><li>Small。高偏差，低方差（large λ）</li></ul></li><li>$\sigma^2$<ul><li>Large。特征向量 $f_i$ 非常平滑（变化平缓）。高偏差，低方差</li><li>Small。特征向量 $f_i$ 非常陡峭（变化剧烈）。低偏差，高方差</li></ul></li></ul><p>使用SVM：</p><ol><li><p>选择参数 $C$</p></li><li><p>选择核函数</p><blockquote><p>核函数需要满足<strong>默塞尔定理</strong>。</p></blockquote><ul><li>线性核函数——即没有核函数</li><li>高斯核函数——$f=\exp(-\frac{||x-l^{(i)}||^2}{2\sigma^2})$，其中 $x^{(i)}=l^{(i)}$</li><li>高斯径向基核函数（Radial Basis Function，RBF）</li><li>多项式核函数（效果比较差）</li><li>字符串核函数</li><li>……</li></ul></li><li><p>多分类</p><p>假设有 n 个特征值（$x\in\mathbb{R}^{n+1}$），训练样本为 m。</p><ul><li>若 n 很大，比 m 大（如n=10000，m=10，…1000），则使用逻辑回归或者使用带线性核函数的SVM</li><li>若 n 很小，m 大小适中（n=1，……，1000，m=10，……10000），则使用带高斯核函数的SVM</li><li>若 n 很小，m 很大（如n=1，……，1000，m=10000+），尝试找到更多的特征，然后使用逻辑回归或带线性核函数的SVM</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-算法选择和算法改进</title>
      <link href="/yyds/f2c027ab.html"/>
      <url>/yyds/f2c027ab.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、评估假设（欠拟合-过拟合）"><a href="#一、评估假设（欠拟合-过拟合）" class="headerlink" title="一、评估假设（欠拟合/过拟合）"></a>一、评估假设（欠拟合/过拟合）</h3><ol><li><p>划分数据集</p><ul><li>随机划分选取数据（若数据本身已经是随机分布的，则取前70%和后30%即可）</li><li>训练集 : 测试集 = 7 : 3</li></ul></li><li><p>对线性/逻辑回归评估</p><ul><li><p>从训练集学习到参数 $\theta$ </p></li><li><p>计算测试集误差 $J_{test}(\theta)$ </p><ul><li><p>对于线性回归：</p><p>$J_{\text {test }}(\theta)=\frac{1}{2 m_{\text {test }}} \sum_{i=1}^{m_{\text {test }}}\left(h_{\theta}\left(x_{\text {test. }}^{(i)}\right)-y_{\text {test }}^{(i)}\right)^{2}$</p></li><li><p>对于逻辑回归：</p><p>​    $J_{\text {test }}(\theta)=-\frac{1}{m_{\text {test }}} \sum_{i=1}^{m_{\text {test }}} y_{\text {test }}^{(i)} \log h_{\theta}\left(x_{\text {test }}^{(i)}\right)+\left(1-y_{\text {test }}^{(i)}\right) \log h_{\theta}\left(x_{\text {test }}^{(i)}\right)$</p><ul><li><p>或计算错误分类误差（0/1）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/TestError.jpg" alt></p></li></ul></li></ul></li></ul></li></ol><h3 id="二、模型选择和训练、验证、测试集划分"><a href="#二、模型选择和训练、验证、测试集划分" class="headerlink" title="二、模型选择和训练、验证、测试集划分"></a>二、模型选择和训练、验证、测试集划分</h3><ol><li><p>模型选择</p><ul><li>由于可能存在的过拟合问题，训练集误差不能用于判断新样本的拟合好坏</li><li>因此需要将数据集划分为training set、validation set、test set，并用 validation set 进行<strong>训练误差</strong>计算及模型选择，用 test set 进行模型的<strong>泛化性能评估</strong> </li></ul></li><li><p>训练集、验证集、测试集划分</p><ul><li><p>经典比例：6 : 2 : 2</p></li><li><p>用（交叉）验证集而非测试集选择模型</p></li><li><p>Train error</p><p>$J_{\operatorname{train}}(\theta)=\frac{1}{2 m} \sum_{i=1}^{m}\left(h_{\theta}\left(x^{(i)}\right)-y^{(i)}\right)^{2}$</p></li><li><p>Cross Validation error（其实也是计算的训练误差）</p><p>$J_{c v}(\theta)=\frac{1}{2 m_{c v}} \sum_{i=1}^{m_{c v}}\left(h_{\theta}\left(x_{c v}^{(i)}\right)-y_{c v}^{(i)}\right)^{2}$</p></li><li><p>Test error（测试误差）</p><p>$J_{\text {test }}(\theta)=\frac{1}{2 m_{\text {test }}} \sum_{i=1}^{m_{\text {test }}}\left(h_{\theta}\left(x_{\text {test }}^{(i)}\right)-y_{\text {test }}^{(i)}\right)^{2}$</p></li></ul></li></ol><h3 id="三、诊断偏差（Bias）与方差（Variance）"><a href="#三、诊断偏差（Bias）与方差（Variance）" class="headerlink" title="三、诊断偏差（Bias）与方差（Variance）"></a>三、诊断偏差（Bias）与方差（Variance）</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/bias-and-variance-problem-judge.jpg" alt="bias and variance problem judge"></p><ul><li>Bias（underfit）<ul><li>$J_{train}(\theta)$很大</li><li>$J_{cv}(\theta)\approx J_{train}(\theta)$</li></ul></li><li>Variance（overfit）<ul><li>$J_{train}(\theta)$很小</li><li>$J_{cv}(\theta)\gg J_{train}(\theta)$</li></ul></li></ul><h3 id="四、正则化和偏差-方差"><a href="#四、正则化和偏差-方差" class="headerlink" title="四、正则化和偏差/方差"></a>四、正则化和偏差/方差</h3><ol><li><p>执行正则化下各个误差的定义</p><p>（不考虑正则化项，即和原来的定义一样，只是训练时求参数加入正则化项）</p><p>如：</p><p>$J(\theta)=\frac{1}{2 m_{train}} \sum_{i=1}^{m_{train}}\left(h_{\theta}\left(x^{(i)}\right)-y^{(i)}\right)^{2}+\frac{1}{2m_{train}}\sum_{j=1}^{m_{train}}\theta_j^2$</p><p>通过以上公式求得$\theta$，然后再计算误差</p><p>$J_{\operatorname{train}}(\theta)=\frac{1}{2 m_{train}} \sum_{i=1}^{m_{train}}\left(h_{\theta}\left(x^{(i)}\right)-y^{(i)}\right)^{2}$ </p><p>$J_{c v}(\theta)=\frac{1}{2 m_{c v}} \sum_{i=1}^{m_{c v}}\left(h_{\theta}\left(x_{c v}^{(i)}\right)-y_{c v}^{(i)}\right)^{2}$ </p><p>$J_{\text {test }}(\theta)=\frac{1}{2 m_{\text {test }}} \sum_{i=1}^{m_{\text {test }}}\left(h_{\theta}\left(x_{\text {test }}^{(i)}\right)-y_{\text {test }}^{(i)}\right)^{2}$ </p></li><li><p>自动选择正则化参数 $\lambda$ </p><p>​    选取一系列$\lambda$值，如$\{\lambda|0,0.01,0.02,0.04,\dots,10\}$，分别利用验证集计算每个模型对应的训练误差进行模型选择，选择最小误差所对应的$\lambda$值即可。</p></li><li><p>正则化与偏差/方差的关系</p><ul><li>$\lambda$较小时，容易出现过拟合问题 —— $J_{train}$较小（高方差）</li><li>$\lambda$较大时，容易出现欠拟合问题 —— $J_{train}$较大（高偏差）</li></ul></li><li><p>考虑underfit和overfit问题的正则化参数$\lambda$选择方式</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/regularization-parameter-selection.jpg" alt="regularization parameter selection"></p></li></ol><h3 id="五、学习曲线（Learning-Curves）"><a href="#五、学习曲线（Learning-Curves）" class="headerlink" title="五、学习曲线（Learning Curves）"></a>五、学习曲线（Learning Curves）</h3><ol><li><p>从数据集中选取少量样本，并逐渐增加样本数量m，绘制$J_{train}$和$J_{cv}$随之变化的曲线</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/error-varies-with-the-sample-number-m.jpg" alt="error varies with the sample number m"></p></li><li><p>高偏差情况</p><p><font color="red"><strong>高偏差情况下，不断增大数据集的样本数量无益。</strong></font>其$J_{train}$和$J_{cv}$都非常大且值相近，并随着m增大而趋于一个常数。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/J_t&amp;J_cv-under-high-bias.jpg" alt="J_t&amp;J_cv under high bias"></p></li><li><p>高方差情况</p><p><font color="red"><strong>高方差情况下，不断增大数据集样本数量有益。</strong></font>其$J_{train}$和$J_{cv}$随着样本数m增大而逐渐接近，模型性能逐渐提升。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/J_t&amp;J_cv-under-high-variance.jpg" alt="J_t&amp;J_cv under high vaiance"></p></li></ol><h3 id="六、算法改进"><a href="#六、算法改进" class="headerlink" title="六、算法改进"></a>六、算法改进</h3><ol><li><p>优化方法</p><ul><li><p>更多的训练样本 —— fix high variance</p></li><li><p>更少的特征集合 —— fix high variance</p></li><li><p>更多的额外特征 —— fix high bias</p></li><li><p>增加特征阶数 —— fix high bias</p></li><li><p>减小正则化参数$\lambda$ —— fix high bias</p></li><li><p>增大正则化参数$\lambda$ —— fix high variance</p></li></ul></li><li><p>神经网络和过拟合</p><ul><li>较“小”的神经网络：参数少、更可能欠拟合、计算量小</li><li>较“大”的神经网络：参数多、更可能过拟合、计算量大</li></ul></li><li><p>误差分析</p><ul><li>在项目初始尽可能使用简单的算法实现，然后测试</li><li>使用实际的证据来指导决策</li><li>数值评价指标。保证可以用数值的方法直观地表现出算法的优劣（如交叉验证）</li></ul></li><li><p><strong>不对称性分类（偏斜类）</strong>的误差评估</p><ul><li><p>例</p><blockquote><p>癌症分类判断问题。分类算法的误差率是1%，但测试集中患癌症的人可能只有0.5%，相比之下误差率就不能够被接受。</p></blockquote></li><li><p><strong>Precision（精确度）/Recall（召回率）</strong> </p><blockquote><p><strong>Precision</strong>=真阳性/(真阳性+假阳性)</p><p><strong>Recall</strong>=真阳性/(真阳性+假阴性)</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/ModelSelectionAndImprovement/Precision&amp;Recall.png" alt="Precision&amp;Recall"></p></blockquote></li><li><p><strong>拥有高Precision和高Recall的模型表现很好</strong> </p></li><li><p>精确度和召回率的权衡</p><ul><li><p>通过调节判决条件可对最后结果的精确度和召回率进行调整</p><blockquote><ul><li><p>如希望非常确信是癌症才告诉病人，则可调高判决条件，此时模型拥有较高的精确度和较低的召回率。</p></li><li><p>若我们不想放过任何一个可能错判的情况，则可调低判决条件，此时模型拥有较低的精确度和较高的召回率。</p></li></ul></blockquote></li><li><p>也可画出精确度和召回率的曲线，取二者均较高的临界值</p></li><li><p>通过 $F_1$ <strong>Score</strong> 来获取较好的精确度和召回率</p><ul><li>$F_1 = 2\frac{PR}{P+R}$</li><li>要获得较好的 $F_1$，$P$ 和 $R$ 都要接近于1</li></ul></li></ul></li></ul></li></ol><h3 id="七、机器学习数据"><a href="#七、机器学习数据" class="headerlink" title="七、机器学习数据"></a>七、机器学习数据</h3><ol><li>要确定能够根据特征获得想要的输出</li><li>确定能够采集到一个拥有多个特征的庞大数据集</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-神经网络（Neural-Network）</title>
      <link href="/yyds/84d31394.html"/>
      <url>/yyds/84d31394.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、非线性假设"><a href="#一、非线性假设" class="headerlink" title="一、非线性假设"></a>一、非线性假设</h3><blockquote><p>当输入特征数量非常大时，线性假设不再适用。</p></blockquote><h3 id="二、神经元与大脑"><a href="#二、神经元与大脑" class="headerlink" title="二、神经元与大脑"></a>二、神经元与大脑</h3><blockquote><p>“神经重接实验”: 让处理听觉的神经断开，转而接上视觉神经的信息输入，听觉神经会学会“看到”东西。也许存在一种学习算法，可以同时实现对视觉、听觉、触觉等的处理，让大脑自己学习如何处理不同的数，而不用大量不同的算法分开处理。</p></blockquote><h3 id="三、模型"><a href="#三、模型" class="headerlink" title="三、模型"></a>三、模型</h3><ol><li><p>Neuron Model: Logistic Unit</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Neuron-Model.jpg" alt="Neuron Model"></p></li><li><p>Neural Network</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Neural-Network.jpg" alt="Neural Network"></p><ul><li><p>输入层(Input Layer) + 隐藏层(Hidden Layer) + 输出层(Output Layer)</p></li><li><p>$a_i^{(j)}$: 第$j$层的第$i$个单元的“activation”，即激活项，指由一个具体神经元计算并输出的值</p></li><li><p>$\theta^{(j)}$: 权重矩阵。控制从第$j$层到第$j+1$层的映射</p></li><li><p>$x_0或a_0^{(2)}$: 偏置单元(bias unit)</p></li><li><p>g: 指sigmoid函数</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/computation-process.jpg" alt="computation process"></p></li></ul></li><li><p>计算过程</p><ul><li><p><strong>前向传播(Forward Propagation)</strong>: 从输入层到隐藏层到输出层，计算每一层激活项的值。可以求出代价函数值。</p></li><li><p><strong>后向传播(Back Propagation)</strong>: 从输出层到隐藏层到输入层，累加计算代价函数的偏导数。回传误差，得到梯度，更新权重。</p></li><li><p>特征</p><blockquote><p>与逻辑回归相似，只是用于训练的特征并非$x_1,x_2,…,x_n$，而是隐藏层计算出来的$a_i^{(j)}$</p></blockquote></li></ul></li><li><p>实例（非线性函数计算的实现与理解）</p><blockquote><ul><li>使用不断深入的神经网络层可以计算更加复杂的函数</li><li>每一层隐藏层用于计算更加复杂的特征，这些特征被用于逻辑回归分类器的最后一层（输出层）</li></ul></blockquote><ul><li><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/AND-Func.jpg" alt="逻辑与"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/OR-Func.jpg" alt="逻辑或"></p></li><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/XNOR-Func.jpg" alt="XNOR-利用隐藏层实现复杂非线性函数的计算"></li></ul></li><li><p>多元分类问题</p><ul><li><p>手写数字识别</p></li><li><p>多目标识别</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Multiple-Output-units-1.jpg" alt="多目标识别"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Multiple-Output-units-2.jpg" alt="多目标识别-网络结构"></p></li></ul></li></ol><h3 id="四、代价函数"><a href="#四、代价函数" class="headerlink" title="四、代价函数"></a>四、代价函数</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/formulation-1.png" alt></p><ul><li>$L$: 网络总层数</li><li>$s_L$: 每层的单元数</li><li>$K$: 输出单元数。也即需要分类的数量（如识别车、人、人行道，则K=3）</li></ul><h3 id="五、前向传播算法（Forward-Propagation）"><a href="#五、前向传播算法（Forward-Propagation）" class="headerlink" title="五、前向传播算法（Forward Propagation）"></a>五、前向传播算法（Forward Propagation）</h3><ul><li><p>功能：逐层求激活项并求出代价函数</p></li><li><p>计算过程</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Fordward-Propagation.jpg" alt="Forward Propagation"></p></li></ul><h3 id="六、后向传播算法（Back-Propagation）"><a href="#六、后向传播算法（Back-Propagation）" class="headerlink" title="六、后向传播算法（Back Propagation）"></a>六、后向传播算法（Back Propagation）</h3><blockquote><p>功能：计算每一层代价函数的偏导数$\frac{\partial}{\partial\Theta_{ij}^{(l)}}J(\Theta)$，最小化代价函数（因为需要利用梯度下降法求参数）<br>网络结构：<br><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/4-layer-neural-network.png" alt="4层神经网络"></p><p>推导可参考：<a href="https://blog.csdn.net/m0_37867091/article/details/104742705">吴恩达机器学习（五）神经网络 2/2 —— 反向传播算法（BP-神经网络）_fun1024-CSDN博客</a></p></blockquote><ul><li><p>$\min_\limits{\Theta}J(\Theta)$</p><p>需要计算：$J(\Theta)$，$\frac{\partial}{\partial\Theta_{ij}^{(l)}}J(\Theta)$</p></li><li><p>前置说明：</p><ul><li><p>$sigmoid$函数的性质: $g(x)’=g(x)(1-g(x))$</p></li><li><p>中间变量$z$: $z^{(l)}=(\Theta^{(l-1)})a^{(l-1)}$</p></li><li><p>第$l$层神经元的误差: $\delta^{(l)}=\frac{\partial J(\theta)}{\partial z^{(l)}}$（向量。第$l$层第$j$个神经元的误差$\delta_j^{(l)}$，$J(\theta)$是每一层的代价函数）</p><blockquote><p>误差公式理解：每一层中间值$z^{(l)}$的变化会影响到神经网络输出值$h_\theta(x)$，进而影响到代价函数$J(\theta)$。<br>因此$\frac{\partial J(\theta)}{\partial z^{(l)}}$表示神经元加权输入$z^{(l)}$的变化给代价函数$J(\theta)$带来的变化梯度。</p></blockquote></li></ul></li><li><p>应用链式求导法则求出每一层的误差</p><ol><li><p>layer 4的误差：$\delta^{(4)}=a^{(4)}-y$（都是向量）</p></li><li><p>layer 3的误差：$\delta^{(3)}=(\Theta^{(3)})^T\delta^{(4)}.*g’(z^{(3)})$（各向量具体顺序取决于数据的实际维度）</p><ul><li><p>链式求导</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/formulation-2.png" alt></p><blockquote><p>求导说明：将代价函数简化表示为: </p><p>$J(\theta)=-y \log h(x)-(1-y) \log (1-h(x))=-y \log a^{(4)}-$ $(1-y) \log \left(1-a^{(4)}\right)$</p><p>所以:</p><ul><li>$\frac{\partial J}{\partial a^{(4)}}=\left(\frac{-y}{a^{(4)}}+\frac{1-y}{1-a^{(4)}}\right)$</li></ul><p>Sigmoid函数的导数为: $g^{\prime}(z)=g(z)(1-g(z))$ ， 所以:</p><ul><li>$\frac{\partial a^{(4)}}{\partial z^{(4)}}=\frac{\partial g\left(z^{(4)}\right)}{\partial z^{(4)}}=a^{(4)}\left(1-a^{(4)}\right)$ </li></ul></blockquote></li></ul></li><li><p>layer 2的误差：$\delta^{(2)}=(\Theta^{(2)})^T\delta^{(3)}.*g’(z^{(2)})$ </p></li></ol></li><li><p>BP算法流程</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Back-Propagation.jpg" alt="Back Propagation"></p><ul><li>$D_{ij}^{(l)}$表示第$i$个样本，在第$l$层的第$j$个节点的代价函数的梯度，可以利用该梯度对权重矩阵$\Theta$执行梯度下降或者另外一个高级优化算法。</li><li>注意$\Delta_{ij}^{(l)}=\Delta_{ij}^{(l)}+a_j^{(l)}\delta_i^{(l+1)}$是根据 $\delta^{(l)}=\frac{\partial J(\theta)}{\partial z^{(l)}}$推导得出。$z^{(l)}=(\Theta^{(l-1)})a^{(l-1)}$</li></ul></li></ul><h3 id="七、梯度检测"><a href="#七、梯度检测" class="headerlink" title="七、梯度检测"></a>七、梯度检测</h3><blockquote><p>梯度的数值估计。用来检验BP算法的正确性。注意在检验完二者得出的梯度值相近（仅在小数有差异）后进行数据训练前，需要禁止梯度数值的代码（因为很慢）。</p></blockquote><ul><li><p>梯度的数值估计（$\theta$为标量时）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Numerical-estimation-of-gradients-1.jpg" alt="Numerical estimation of gradients"></p><ul><li><p>双侧差分法（更准确）</p><p>$\frac{\partial J(\theta)}{\partial\theta}\approx \frac{J(\theta+\varepsilon)-J(\theta-\varepsilon)}{2\varepsilon}$（$\varepsilon=10^{-4}$）</p></li><li><p>单侧差分法</p><p>$\frac{\partial J(\theta)}{\partial\theta}\approx \frac{J(\theta+\varepsilon)-J(\theta)}{\varepsilon}$</p></li></ul></li><li><p>梯度的数值估计（$\theta$为矢量时）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/NeuralNetwork/Numerical-estimation-of-gradients-2.jpg" alt="Numerical estimation of gradients"></p></li></ul><h3 id="八、随机初始化"><a href="#八、随机初始化" class="headerlink" title="八、随机初始化"></a>八、随机初始化</h3><blockquote><p>初始化时$\Theta$值<strong>不能为0</strong>，这会导致每一层的隐藏神经元得到的值相同，而无法计算复杂函数，提取不了特征。（对称权重问题）</p></blockquote><ul><li><p>一般将每个$\Theta_{ij}^{(l)}$初始化为$[-\varepsilon,\varepsilon]$之间的一个值</p><p><code>theta=rand(10,11)*(2*INIT_EPSILON)-INIT_EPSILON;</code></p><p>（rand(10,11): 10*11的矩阵，元素值在(0,1)间）</p></li></ul><h3 id="九、训练神经网络"><a href="#九、训练神经网络" class="headerlink" title="九、训练神经网络"></a>九、训练神经网络</h3><ol><li><p>随机初始化权重$\Theta_{ij}^{(l)}$，通常很小，接近零但不等于零</p></li><li><p>通过前向传播算法得到每个输入值$x^{(i)}$的输出项$h_{\Theta}(x^{(i)})$</p></li><li><p>计算出代价函数$J(\Theta)$</p></li><li><p>通过后向传播算法求$J(\Theta)$的偏导$\frac{J(\Theta)}{\partial\Theta_{jk}^{(l)}}$</p></li><li><p>梯度检验。用BP算法得到的偏导和数值估计法所得进行比较验证。然后注释梯度检验的代码。</p></li><li><p>使用梯度下降或高级优化方法计算令$J(\Theta)$最小化的参数 $\Theta$ </p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-过拟合问题及正则化（Overfitting&amp;Regularization）</title>
      <link href="/yyds/6c271ad1.html"/>
      <url>/yyds/6c271ad1.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、欠-过拟合问题（Under-fitting-Overfitting-Problem）"><a href="#一、欠-过拟合问题（Under-fitting-Overfitting-Problem）" class="headerlink" title="一、欠/过拟合问题（Under fitting/Overfitting Problem）"></a>一、欠/过拟合问题（Under fitting/Overfitting Problem）</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Fitting-Problems-1.jpg" alt="Fitting Problems-1"><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Fitting-Problems-2.jpg" alt="Fitting Problems-2"></p><ol><li><p>欠拟合</p><p>拟合偏差非常大，用于预测时误差也会非常大。</p></li><li><p>过拟合</p><p>方差非常大，即拟合曲线与训练数据拟合得非常好以至于曲线非常复杂，导致缺乏足够的数据来约束，不能很好地泛化到新的样本数据中。</p></li><li><p>解决拟合问题</p><ul><li><strong>减少特征的数量</strong><ul><li>人工选择</li><li>自动选择算法</li></ul></li><li><strong>正则化（Regularization）</strong><ul><li>保留所有的特征，但减少参数的数量级</li></ul></li></ul></li></ol><h3 id="二、正则化（Regularization）"><a href="#二、正则化（Regularization）" class="headerlink" title="二、正则化（Regularization）"></a>二、正则化（Regularization）</h3><ol><li><p>在优化目标函数中加入<strong>惩罚项</strong>以缩小参数值（$\lambda$为正则化参数）</p><p>$\min_\limits{\theta}[\frac{1}{2m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2+{\color{red}\lambda\sum_\limits{j=1}^n\theta_j^2}]$（一般不会用$\theta_0$，但影响不大）</p><ul><li><p><strong>更小的参数值意味着更简单的假设函数和更平滑的拟合曲线。</strong></p></li><li><p>但是正则化参数 $\lambda$ 不能太大，否则相当于只含$\theta_0$，会导致欠拟合</p></li></ul></li><li><p>例：</p><blockquote><p>如一个有3个参数的目标函数，在其后加入$\lambda(\theta_3+\theta_4)$项，且$\lambda$很大，则要使整个目标函数最小，必然要让$\theta_3,\theta_4$接近0，相当于忽略了这两个参数。</p><p>$\min_\limits{\theta}[\frac{1}{2m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2+{\color{red}\lambda(\theta_3^2+\theta_4^2)}]$</p></blockquote></li></ol><h3 id="三、正则化线性回归"><a href="#三、正则化线性回归" class="headerlink" title="三、正则化线性回归"></a>三、正则化线性回归</h3><ol><li><p>梯度下降法</p><ul><li><p>目标函数</p><p>$\min_\limits{\theta}\frac{1}{2m}[\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2+{\lambda\sum_\limits{j=1}^n\theta_j^2}]$</p></li><li><p>迭代过程</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Regularization/fomulation-1.jpg" alt></p><p>其实就是每次迭代的时候都将 $\theta_j$ 缩小一点</p></li></ul></li><li><p>正规方程</p><blockquote><p>正则化还能解决样本数量小于特征数量时矩阵不可逆的问题。加入 $\lambda$ 矩阵项后，括号内的矩阵一定可逆</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Linear-Regression/Normal-Function.jpg" alt="Normal Func"></p></li></ol><h3 id="四、正则化逻辑回归"><a href="#四、正则化逻辑回归" class="headerlink" title="四、正则化逻辑回归"></a>四、正则化逻辑回归</h3><ol><li><p>目标函数</p><p>$\min_\limits{\theta}-\frac{1}{m}\left[\sum_\limits{i=1}^my^{(i)}\log(h_\theta(x^{(i)}))+(1-y^{(i)})\log(1-h_\theta(x^{(i)}))\right]+\frac{\lambda}{2m}\sum_\limits{j=1}^n\theta_j$</p></li><li><p>迭代过程</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Regularization/formulation-2.jpg" alt></p></li></ol><h3 id="五、高级优化算法的正则化应用"><a href="#五、高级优化算法的正则化应用" class="headerlink" title="五、高级优化算法的正则化应用"></a>五、高级优化算法的正则化应用</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Reguarization-in-Advanced-Optimization.jpg" alt="Reguarization in Advanced Optimization"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-逻辑回归（Logistic-Regression）</title>
      <link href="/yyds/9feb0fb4.html"/>
      <url>/yyds/9feb0fb4.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、分类问题介绍"><a href="#一、分类问题介绍" class="headerlink" title="一、分类问题介绍"></a>一、分类问题介绍</h3><p>$y\in\{0,1\}$</p><blockquote><ul><li>0: Negative Class</li><li>1: Positive Class</li></ul></blockquote><p>例子：邮件分类；肿瘤分类；</p><p>Logistic Regression的特点</p><ul><li>其预测值介于0-1间，而不会大于1或小于0</li><li>事实上并不是回归，而是分类，命名属于历史问题</li></ul><h3 id="二、Logistic-Regression-Model"><a href="#二、Logistic-Regression-Model" class="headerlink" title="二、Logistic Regression Model"></a>二、Logistic Regression Model</h3><ol><li><p>假设函数: $h_\theta(x)=g(\theta^Tx)$ </p><ul><li><p>$g(z)=\frac{1}{1+e^{-z}}$ </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/sigmoid-func.jpg" alt="g(z)"></p></li><li><p>其输出为 $h_\theta(x)=P(y=1|x;\theta)或P(y=0|x;\theta)$ </p><ul><li>$predict\ {}’’y=1’’\ if\ h_\theta(x)\ge0.5$</li><li>$predict\ {}’’y=0’’\ if\ h_\theta(x)&lt;0.5$</li></ul></li></ul></li><li><p>决策边界</p><blockquote><p><strong>是假设和参数本身的属性，而非由数据集定义。</strong>数据集用于拟合参数</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Decision-Boundary-1.jpg" alt="Decision Boundary-1"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Decision-Boundary-2.jpg" alt="Decision Boundary-2"></p></blockquote></li><li><p>代价函数（优化目标）</p><blockquote><p>因为直接代入sigmoid函数时，代价函数并不是凸函数，使用梯度下降法很难得到全局最优值。因此用log操作将其转化为凸函数。</p></blockquote><ul><li><p>代价函数: $J(\theta)=\frac{1}{m}\sum_\limits{i=1}^m\mathrm{Cost}(h_\theta(x^{(i)},y^{(i)})$</p></li><li><p>单样本代价函数: </p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/func.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/-logh(x" alt="Cost Func">.jpg)</p></li><li><p>代价函数简化: $J(\theta)=-\frac{1}{m}\left[\sum_\limits{i=1}^my^{(i)}\log(h_\theta(x^{(i)}))+(1-y^{(i)})\log(1-h_\theta(x^{(i)}))\right]$ </p></li><li><p>拟合得到参数$\theta$: $\min_\limits{\theta}{J(\theta)}$ </p><p>Repeat {<br>$\theta_j=\theta_j-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_j$<br>}</p></li><li><p>预测分类结果: $h_\theta(x)=g(\theta^Tx)$ </p></li></ul></li></ol><h3 id="三、高级优化"><a href="#三、高级优化" class="headerlink" title="三、高级优化"></a>三、高级优化</h3><blockquote><p>优点：不需要选择学习速率 $\alpha$ ，比梯度下降收敛更快</p><p>缺点：更加复杂</p><p>在MATLAB/Octave中有内置函数实现</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Advanced-Optimization.jpg" alt="Advanced Optimization"></p><ol><li>共轭梯度（Conjugate gradient）</li><li>BFGS</li><li>L-BFGS</li></ol><h3 id="四、多类别分类（Multiclass-Classification）"><a href="#四、多类别分类（Multiclass-Classification）" class="headerlink" title="四、多类别分类（Multiclass Classification）"></a>四、多类别分类（Multiclass Classification）</h3><ol><li><p>应用Logistic Regression的思路</p><p>训练对应类别个分类器，再进行测试，将输入分别代入三个分类器，取最大输出值为最终预测值。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Logistic-Regression/Multiclass-Classification.jpg" alt="Multiclass Classification"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-线性回归（Linear-Regression）</title>
      <link href="/yyds/ce525ac0.html"/>
      <url>/yyds/ce525ac0.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、模型描述"><a href="#一、模型描述" class="headerlink" title="一、模型描述"></a>一、模型描述</h3><ol><li><p>建立y关于x的线性函数</p><ul><li><p>Hypothesis Function:$H_\theta(x)=\theta_0+\theta_1 x$</p><blockquote><p>用$H_\theta(x)$来拟合y与x的关系</p></blockquote></li><li><p>Parameters:$\theta_0,\theta_1$</p><blockquote><p>需要估计的参数</p></blockquote></li><li><p>Cost Function:$J(\theta_0,\theta_1)=\frac{1}{2m}\sum_\limits{i=1}^{m}(h_\theta(x^{(i)})-y^{(i)})^2$</p><blockquote><p>此处为<strong>平方误差代价函数</strong>。即通过令$H_\theta(x)$与y差异最小使得假设函数最接近真实值。<br>其中m是训练样本集的容量，$\frac{1}{2m}$表示求平均误差最小。</p></blockquote></li><li><p>Goal Funtion: $\min_\limits{\theta_0\theta_1}J(\theta_0,\theta_1)$ </p></li></ul></li><li><p>Cost Function</p><ul><li><p>代价函数-3维图像</p><blockquote><p>每个点到底部的距离为一次拟合的代价函数的值</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Linear-Regression/CostFunction-3DFigure.jpg" alt="代价函数-3维图像"></p></li><li><p>代价函数-等高线图</p><blockquote><p>每条等高线代表拥有相同代价函数值的参数配置<br>绿点为此次拟合直线的代价值，中心为最小代价值</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Linear-Regression/CostFunction-ContourFigure.jpg" alt="代价函数-等高线图"></p></li></ul></li></ol><h3 id="二、梯度下降算法"><a href="#二、梯度下降算法" class="headerlink" title="二、梯度下降算法"></a>二、梯度下降算法</h3><blockquote><p>用于最小化代价函数（不仅仅是最小化线性回归的代价函数）<br>特点：</p><ul><li>只能得到局部最小值</li><li>相比正规方程组法（直接计算最小值），Gradient Descent更适合大数据集<br>此处的梯度下降算法被称为”Batch” Gradient Descent，因为每一次迭代遍历整个样本集</li></ul></blockquote><ol><li>思想<ul><li>从任意参数值$\theta_0,\theta_1$开始，如 $\theta_0=0,\theta_1=0$ </li><li>不断改变 $\theta_0,\theta_1$（朝梯度方向）,以减小 $J(\theta_0,\theta_1)$ </li><li>直到我们找到 J 的最小值或者局部最小值</li></ul></li><li>图像解释</li></ol><blockquote><p>将图像想象成一座山，沿着下山最快的方向下降（即梯度方向），直到到达山谷</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/MachineLearning/Linear-Regression/GradientDescent.jpg" alt="梯度下降"></p><ol><li><p>迭代公式<br>循环直至收敛 {</p><p>$\theta_j=\theta_j-\alpha\frac{\partial}{\partial\theta_j}J(\theta_0,\theta_1)$           </p><p>（for j = 0 and j = 1）<br>}</p><ul><li><p>其中$\alpha$是学习速率，决定以多大幅度更新参数</p></li><li><p>更新过程（注意$\theta$和temp0赋值的执行顺序不能交换，因为需要同步更新$\theta_0\theta_1$）</p><blockquote><p>$temp0=\theta_0-\alpha\frac{\partial}{\partial\theta_0}J(\theta_0,\theta_1)$<br>$temp1=\theta_1-\alpha\frac{\partial}{\partial\theta_1}J(\theta_0,\theta_1)$<br>$theta_0=temp0$<br>$theta_1=temp1$</p></blockquote></li></ul></li><li><p>收敛</p><ul><li><p>学习速率$\alpha$</p><blockquote><p>如果$\alpha$过小，收敛速度会非常慢<br>如果$\alpha$过大，梯度下降可能会越过最小值，收敛速度慢甚至发散</p></blockquote></li><li><p>由于最低点导数值为0，因此随着梯度下降算法的执行，它会自动采取较小的幅度（因为导数值越来越小），因此没必要逐渐减小$\alpha$</p></li></ul></li></ol><h3 id="三、矩阵乘法的特性"><a href="#三、矩阵乘法的特性" class="headerlink" title="三、矩阵乘法的特性"></a>三、矩阵乘法的特性</h3><ol><li>不符合交换律: $A\times B\ne B\times A$</li><li>符合结合律: $(A\times B)\times C=A\times (B\times C)$</li><li>单位矩阵$I_{n\times n}$，$I\times A=A\times I=A$</li></ol><h3 id="四、特殊运算"><a href="#四、特殊运算" class="headerlink" title="四、特殊运算"></a>四、特殊运算</h3><ol><li>矩阵的逆: $AA^{-1}=A^{-1}A=I$（其中A是一个方阵）</li><li>矩阵的转置 $A^T$，$A_{ij}=A^T_{ji}$ </li></ol><h3 id="五、多元梯度下降法"><a href="#五、多元梯度下降法" class="headerlink" title="五、多元梯度下降法"></a>五、多元梯度下降法</h3><ol><li><p>Hypothesis Function: $H_\theta(x)=\theta_0+\theta_1 x_1+\theta_2 x_2+…+\theta_n x_n$ </p><ul><li>为了方便，一般假设 $x_0=1$ </li><li>可用矩阵形式表示: $H_\theta(x)=\theta^T\mathrm{x}$ </li></ul></li><li><p>Parameters: $\theta_0,\theta_1,…,\theta_n$，n+1维向量</p></li><li><p>Cost Function: $J(\theta_0,\theta_1,\dots,\theta_n)=\frac{1}{2m}\sum_\limits{i=1}^{m}(h_\theta(x^{(i)})-y^{(i)})^2$ </p></li><li><p>Multiple Gradient Descent:<br>Repeat{<br>$\theta_j=\theta_j-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_j$<br>更新 $\theta_j,j=0,1,\dots,n$<br>}<br>例如有2个特征的梯度下降算法:<br>$\theta_0=\theta_0-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_0$<br>$\theta_1=\theta_1-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_1$<br>$\theta_2=\theta_2-\alpha\frac{1}{m}\sum_\limits{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}_2$</p></li><li><p>梯度下降运算的技巧</p><ul><li><p><strong>特征缩放（Feature Scaling）</strong> </p><blockquote><p>使几个特征的大小在相似的规模，使变量间具有可比性，这样会使得梯度下降收敛得更快<br>如让每一个特征的取值都在与 $-1\le x_i\le 1$ 相近的范围内<br>例如可以接受 $0\le x_1\le 3,-2\le x_2\le 0.5$ ，不能接受 $-100\le x_3\le 100,-0.0001\le x_4\le 0.0001$<br>方法有：</p><ul><li>Z-Score标准化: $x^*=\frac{x-\mu}{\sigma}$ </li><li>min-max归一化（将结果映射到0-1之间）: $x^*=\frac{x-min}{max-min}$ </li><li>…</li></ul></blockquote></li><li><p><strong>调试（Debugging）</strong> </p><ul><li><p>确定梯度下降是否正确运行</p><blockquote><p>代价函数的值应该随迭代减小。在迭代到达一定程度时，代价函数值变化不会太大，可以通过画出代价函数值随着迭代次数的变化曲线，判断应该选择的迭代次数</p></blockquote></li><li><p>选择合适的学习速率</p><blockquote><p>可以通过每隔一段步长选择 $\alpha$ 值，画出代价函数值的变化曲线来选取合适的 $\alpha$ 值。如0.001,0.003,0.01,0.03,0.1,0.3,…,1,…</p></blockquote></li></ul></li></ul></li><li><p>特征和多项式回归</p><blockquote><p>通过<strong>观察数据分布</strong>选择多项式如二次模型、三次模型等<br>$h_\theta(x)=\theta_0+\theta_1 x_1+\theta_2 x_2^2$<br>$h_\theta(x)=\theta_0+\theta_1 x_1+\theta_2 x_2^2+\sqrt{\theta_3 x_3}$<br>$h_\theta(x)=\theta_0+\theta_1 x_1+\theta_2 x_2^2+\theta_3 x_3^3$</p></blockquote></li></ol><h3 id="六、正规方程解法（区别于迭代法的直接解法）"><a href="#六、正规方程解法（区别于迭代法的直接解法）" class="headerlink" title="六、正规方程解法（区别于迭代法的直接解法）"></a>六、正规方程解法（区别于迭代法的直接解法）</h3><ol><li><p>方法</p><ul><li>如让目标函数对每一个未知变量求偏导，并将其置零，得到每一个变量值</li><li>令 $\theta=(X^TX)^{-1}X^TY$ ，会得到代价函数的最小值 $\min_\limits{\theta}J(\theta)$ </li></ul></li><li><p>和梯度下降法的对比(m个训练样本，n个特征值)</p><ul><li><p>梯度下降法（Gradient Descent）</p><blockquote><ul><li>需要选择学习速率 $\alpha$ </li><li>需要多次迭代</li><li>在特征量很多时效果比较好</li></ul></blockquote></li><li><p>正规方程法（Normal Equation）</p><blockquote><ul><li>不需要选择 $\alpha$ </li><li>不需要迭代</li><li>需要计算 $(X^TX)^{-1}$ （是一个 $n\times n$ 的矩阵，计算逆矩阵的时间复杂度是 $O(n^3)$ ）</li><li>特征量多时运行很慢</li><li>矩阵可逆才能使用</li></ul></blockquote></li></ul></li><li><p>正规方程法在矩阵不可逆的情况下的解决方法</p><blockquote><p>不可逆的原因：</p><ul><li>由于某些原因，学习问题包含了多余的特征</li><li>学习算法有很多特征，导致m小于n，即样本数少于特征数<br>解决：<ul><li>可以通过观察特征之间的关系，也许是线性相关的，可以删掉多余特征</li><li>可以用MATLAB的求逆函数求出伪逆</li></ul></li></ul></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-概述及分类</title>
      <link href="/yyds/e943bc7e.html"/>
      <url>/yyds/e943bc7e.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>声明：本系列十二篇文章均为<a href="https://www.bilibili.com/video/BV164411b7dx?p=1">[中英字幕]吴恩达机器学习系列课程_哔哩哔哩_bilibili</a>学习笔记，另外收集了课程相关课件、作业原题及参考源码，以及我的笔记原文件，已经放在我的<a href="https://github.com/321hjd/MachineLearning-Andrew-Ng">github</a>上，欢迎大家取用~</p><p>侵删~</p></blockquote><h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><blockquote><p>学习算法是一组工具，如何正确使用这些工具是最重要的</p></blockquote><ol><li>定义：计算机从经验E中学习，解决某一任务T，进行某一性能度量P，通过P测定在T上的表现因经验E而提高。<br>例：邮件程序根据你对垃圾邮件和非垃圾邮件的标记，从而基于此来学习如何过滤垃圾邮件。其中E是你给邮件的标签，T是区分垃圾邮件，P是区分成功率</li><li>分类：<ul><li>Supervised Learning</li><li>Unsupervised Learning</li><li>Others: Reinforcement Learning，Recommender Systems</li></ul></li></ol><h3 id="二、监督学习（Supervised-Learning）"><a href="#二、监督学习（Supervised-Learning）" class="headerlink" title="二、监督学习（Supervised Learning）"></a>二、监督学习（Supervised Learning）</h3><ol><li>定义：我们给算法一个数据集，其中包含了“正确答案”，算法的目的就是给出更多的“正确答案”。<ul><li>“<strong>回归问题</strong>”，即预测连续值的输出。（房价预测实例）</li><li>“<strong>分类问题</strong>”，即预测离散值输出，0/1、0/1/2/…。（肿瘤分类实例）</li></ul></li><li>如何处理无穷多的特征？<ul><li>设计一个算法来解决——什么算法？</li></ul></li></ol><h3 id="三、无监督学习（Unsupervised-Learning）"><a href="#三、无监督学习（Unsupervised-Learning）" class="headerlink" title="三、无监督学习（Unsupervised Learning）"></a>三、无监督学习（Unsupervised Learning）</h3><ol><li><p>定义：数据集无标签或者标签相同，算法自动识别数据集的结构特征。</p><ul><li><strong>聚类算法</strong>：根据数据集的特征将其分为不同的簇</li><li>Octave/Matlab</li></ul><blockquote><p>学会用Octave建立算法原型并运行（因为很快），然后再迁移到其它环境中<br>Octave和Matlab语法兼容<br>Octave开源且轻量级</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 吴恩达-机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵分解算法</title>
      <link href="/yyds/83153ec8.html"/>
      <url>/yyds/83153ec8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>接触到通信中的下行链路预编码，其中很多线性预编码方法涉及到矩阵求逆，而矩阵求逆的计算复杂度随着维度增加而剧增，因此出现了很多基于矩阵分解的简化求逆方法。在总结预编码方法时发现当时学线性代数好像只接触了LU分解和SVD分解，故在此对常见的一些矩阵分解算法做个记录以便查询。后续也许会系统学习矩阵计算相关并记录。也许。。。资料来源于网络上各大佬的博客以及潘建瑜老师的《矩阵计算》讲义。侵删~</p></blockquote><h2 id="一、-LU-分解"><a href="#一、-LU-分解" class="headerlink" title="一、$LU$分解"></a>一、$LU$分解</h2><h3 id="1-1-LU-分解定理"><a href="#1-1-LU-分解定理" class="headerlink" title="1.1 $LU$分解定理"></a>1.1 $LU$分解定理</h3><p>&emsp;&emsp;$LU$分解实质就是将系数矩阵$A$分解为$L$和$U$两个矩阵的乘积。其中$L$是单位下三角矩阵，$U$为非奇异上三角矩阵。</p><p>&emsp;&emsp;假定矩阵$A$存在$LU$分解，则原方程$Ax=b$就将转化为求解下面两个三角方程组，而三角方程组的求解非常容易求解。</p><ul><li><script type="math/tex; mode=display">\left\{\begin{align}&Ly=b,\\&Ux=y.\end{align}\right.</script></li></ul><p>&emsp;&emsp;此外，$LU$分解也可用于对矩阵求逆，分别对三角矩阵$L$和$U$求逆比直接对$A$求逆的计算复杂度低很多。假设$PA=LU$，则</p><ul><li><script type="math/tex; mode=display">A^{-1}=U^{-1}L^{-1}P</script></li></ul><p>&emsp;&emsp;并不是每个非奇异矩阵都存在$LU$分解。</p><blockquote><p>定理（$LU$分解的存在性和唯一性）：矩阵$A \in \mathbb{R}^{n \times n}$存在$LU$分解（即存在单位下三角矩阵$L$和非奇异上三角矩阵$U$使得$A=LU$）的充要条件是$A$的所有顺序主子式都非奇异（行列式非零）。进一步地，若$A$存在 $LU$分解, 则分解是唯一的。                    </p></blockquote><h3 id="1-2-LU-分解的实现方式"><a href="#1-2-LU-分解的实现方式" class="headerlink" title="1.2 $LU$分解的实现方式"></a>1.2 $LU$分解的实现方式</h3><h4 id="1-2-1-Gauss消元法"><a href="#1-2-1-Gauss消元法" class="headerlink" title="1.2.1 Gauss消元法"></a>1.2.1 Gauss消元法</h4><p>&emsp;&emsp;Gauss消元法的本质是通过Gauss变换（矩阵初等变换的组合）来构造$A$的$LU$分解。给定一个矩阵</p><ul><li><script type="math/tex; mode=display">A = \left[ {\begin{array}{*{20}{c}}a_{11}&a_{12}& \cdots &a_{1n}\\a_{21}&a_{22}& \cdots &a_{2n}\\ \vdots &{}& \ddots &{}\\a_{n1}&a_{n2}& \cdots &a_{nn}\end{array}} \right] \in \mathbb{R}{^{n \times n}}</script></li></ul><ul><li><p>第一步，假定$a_{11}\ne 0$，构造矩阵</p><ul><li><script type="math/tex; mode=display">{L_1} = \left[ {\begin{array}{*{20}{c}}1&0&0& \cdots &0\\l_{21}&1&0& \cdots &0\\l_{31}&0&1& \cdots &0\\ \vdots & \vdots &{}& \ddots &{}\\l_{n1}&0&0& \cdots &1\end{array}} \right],其中~l_{i1} = \frac{a_{i1}}{a_{11}},i = 2,3, \ldots ,n.</script></li><li><p>易知$L_1$的逆为</p></li><li><script type="math/tex; mode=display">{L_1^{-1}} = \left[ {\begin{array}{*{20}{c}}1&0&0& \cdots &0\\-l_{21}&1&0& \cdots &0\\-l_{31}&0&1& \cdots &0\\ \vdots & \vdots &{}& \ddots &{}\\-l_{n1}&0&0& \cdots &1\end{array}} \right]</script></li><li><p>用$L_1^{-1}$左乘$A$，并将所得矩阵记为$A^{(1)}$，则</p></li><li><script type="math/tex; mode=display">A^{(1)}=L_{1}^{-1} A\left[\begin{array}{cccc}a_{11} & a_{12} & \cdots & a_{1 n} \\0 & a_{22}^{(1)} & \cdots & a_{2 n}^{(1)} \\\vdots & \vdots & \ddots & \\0 & a_{n 2}^{(1)} & \cdots & a_{n n}^{(1)}\end{array}\right]</script></li><li><p>即左乘$L_1^{-1}$后, $A$的第一列中除第一个元素外其它都变为0。</p></li></ul></li><li><p>第二步，类似地，将上面的操作作用在$A^{(1)}$的子矩阵$A^{(1)}(2:n,2:n)$上，将其第一列除第一个元素外都变为0。也就是说，假定$a_{22}^{(1)}\ne 0$，构造矩阵</p><ul><li><script type="math/tex; mode=display">{L_1} = \left[ {\begin{array}{*{20}{c}}1&0&0& \cdots &0\\0&1&0& \cdots &0\\0&l_{32}&1& \cdots &0\\ \vdots & \vdots &{}& \ddots &{}\\0&l_{n2}&0& \cdots &1\end{array}} \right],其中{l_{i2}} = \frac{a_{i2}^{(1)}}{a_{22}^{(1)}},i = 3,4, \ldots ,n.</script></li><li><p>用$L_2^{-1}$左乘$A^{(1)}$，所得矩阵记为$A^{(2)}$，则</p></li><li><script type="math/tex; mode=display">A^{(2)}=L_{2}^{-1} A^{(1)}=L_{2}^{-1} L_{1}^{-1} A=\left[\begin{array}{ccccc}a_{11} & a_{12} & a_{13} & \cdots & a_{1 n} \\0 & a_{22}^{(1)} & a_{23}^{(1)} & \cdots & a_{2 n}^{(1)} \\0 & 0 & a_{33}^{(2)} & \cdots & a_{3 n}^{(2)} \\\vdots & \vdots & \vdots & \ddots & \\0 & 0 & a_{n 3}^{(2)} & \cdots & a_{n n}^{(2)}\end{array}\right].</script></li></ul></li></ul><ul><li><p>依此类推，假定$a_{kk}^{(k-1)}\ne 0(k=3,4,\dots,n-1)$，则可以构造一系列矩阵$L3,L4,\dots,L_{n-1}$，使得</p></li><li><script type="math/tex; mode=display">L_{n-1}^{-1} \cdots L_{2}^{-1} L_{1}^{-1} A=\left[\begin{array}{ccccc}a_{11} & a_{12} & a_{13} & \cdots & a_{1 n} \\0 & a_{22}^{(1)} & a_{23}^{(1)} & \cdots & a_{2 n}^{(1)} \\0 & 0 & a_{33}^{(2)} & \cdots & a_{3 n}^{(2)} \\\vdots & \vdots & \vdots & \ddots & \\0 & 0 & 0 & \cdots & a_{n n}^{(n-1)}\end{array}\right]</script></li></ul><ul><li><p>为一个上三角矩阵，即所需要分解得到的非奇异上三角矩阵$U$，并记</p></li><li><script type="math/tex; mode=display">L = {L_1}{L_2} \ldots {L_{n - 1}} = \left[ {\begin{array}{*{20}{c}}1&0&0& \cdots &0\\l_{21}&1&0& \cdots &0\\l_{31}&l_{32}&1& \cdots &0\\ \vdots & \vdots &{}& \ddots &{}\\l_{n1}&l_{n2}&l_{n3}& \cdots &1\end{array}} \right]</script></li></ul><ul><li><p>最终得到矩阵$A$的$LU$分解，即</p></li><li><script type="math/tex; mode=display">A=LU</script></li></ul><h4 id="1-2-2-待定系数法"><a href="#1-2-2-待定系数法" class="headerlink" title="1.2.2 待定系数法"></a>1.2.2 待定系数法</h4><p>&emsp;&emsp;假定$A$存在$LU$分解，即$A=LU$，或</p><ul><li><script type="math/tex; mode=display">\left[\begin{array}{ccccc}a_{11} & a_{12} & a_{13} & \cdots & a_{1 n} \\a_{21} & a_{22} & a_{23} & \cdots & a_{2 n} \\a_{31} & a_{32} & a_{33} & \cdots & a_{3 n} \\\vdots & & & \ddots & \vdots \\a_{n 1} & a_{n 2} & a_{n 3} & \cdots & a_{n n}\end{array}\right]=\left[\begin{array}{ccccccccc}1 & & & & \\l_{21} & 1 & & & \\l_{31} & l_{32} & 1 & & \\\vdots & & & \ddots & \\l_{n 1} & l_{n 2} & \cdots & l_{n, n-1} & 1\end{array}\right]\left[\begin{array}{ccccc}u_{11} & u_{12} & u_{13} & \cdots & u_{1 n} \\& u_{22} & u_{23} & \cdots & u_{2 n} \\& & u_{33} & \cdots & u_{2 n} \\& & & \ddots & \vdots \\& & & & & u_{n n}\end{array}\right]</script></li></ul><p>可以通过比较等式两边的元素来计算$L$和$U$中各元素的值。具体计算过程如下：</p><ol><li><p>比较等式两边的<strong>第一行</strong>，可得</p><script type="math/tex; mode=display">u_{1j}=a_{1j},\quad j=1,2,\dots,n</script><p>再比较等式两边的<strong>第一列</strong>，可得</p><script type="math/tex; mode=display">a_{i1}=l_{i1}u_{11}\Rightarrow l_{i1}=a_{i1}/u_{11},\quad i=2,3,\dots,n</script></li><li><p>比较等式两边的<strong>第二行</strong>，可得</p><script type="math/tex; mode=display">a_{2 j}=l_{21} u_{1 j}+u_{2 j} \Rightarrow u_{2 j}=a_{2 j}-l_{21} u_{1 j}, \quad j=2,3, \ldots, n</script><p>再比较等式两边的<strong>第二列</strong>，可得</p><script type="math/tex; mode=display">a_{i2}=l_{i1} u_{12}+l_{i2}u_{22} \Rightarrow l_{i2}=(a_{i2}-l_{i1}u_{12})/u_{22}, \quad j=3,4, \ldots, n</script></li><li><p>以此类推吗，第$k$步时，比较等式两边的<strong>第$k$行</strong>，可得</p><script type="math/tex; mode=display">u_{k j}=a_{k j}-\left(l_{k 1} u_{1 j}+\cdots+l_{k, k-1} u_{k-1, j}\right), \quad j=k, k+1, \ldots, n</script><p>比较等式两边的<strong>第$k$列</strong>，可得</p><script type="math/tex; mode=display">l_{i k}=\left(a_{i k}-l_{i 1} u_{1 k}-\cdots-l_{i, k-1} u_{k-1, k}\right) / u_{k k}, \quad i=k+1, k+2, \ldots, n</script></li></ol><h3 id="1-3-条件更弱的LU分解定理（选主元-LU-分解）"><a href="#1-3-条件更弱的LU分解定理（选主元-LU-分解）" class="headerlink" title="1.3  条件更弱的LU分解定理（选主元$LU$分解）"></a>1.3  条件更弱的LU分解定理（选主元$LU$分解）</h3><p>&emsp;&emsp;在$LU$分解算法中，称$a_{kk}^{(k-1)}$为主元，若$a_{kk}^{(k-1)}=0$，算法无法进行下去；若$|a_{kk}^{(k-1)}|$值非常小，则因为舍入误差导致结果误差非常大。可通过选主元来解决此问题。</p><p>&emsp;&emsp;选主元需要引入置换矩阵，其基本性质如下：</p><blockquote><p>设$P\subset{\mathbb{R}^{n\times n}}$为置换矩阵，$X\subset{\mathbb{R}^{n\times n}}$为任意矩阵，则</p><p>（1）$PX$相当于将$X$的行进行置换；$XP$相当于对$X$的列进行置换；</p><p>（2）$P^{-1}=P^T$，即$P$是正交矩阵；</p><p>（3）$\det(P)=\pm1$;</p><p>（4）置换矩阵的乘积仍然是置换矩阵。</p></blockquote><p>&emsp;&emsp;另外选主元$LU$分解也不是一定存在的，其条件如下：</p><blockquote><p>定理（选主元$LU$分解的存在性）：设$A\subset{\mathbb{R}^{n\times n}}$非奇异，则存在置换矩阵$P_L,P_R$，以及单位下三角矩阵$L$和非奇异上三角矩阵$U$，使得</p><script type="math/tex; mode=display">P_LAP_R=LU</script></blockquote><p>&emsp;&emsp;注意置换矩阵有两种选择方式：</p><ul><li><p>“全主元Gauss消元法”（GECP）：使主元为剩下矩阵中绝对值最大。</p></li><li><p>“部分选主元Gauss消元法”（GEPP）：使主元为第$k$列第$k$到第$n$个元素中绝对值最大，此时$P_R^{(k)}=I$，因此也成为列主元Gauss消元法</p><blockquote><p>（1）GECP 比 GEPP 更稳定, 但工作量太大, 在实际应用中通常使用 GEPP 算法. </p><p>（2）GEPP 算法能保证 L 所有的元素的绝对值都不超过 1.</p></blockquote></li></ul><h2 id="二、-QR-分解"><a href="#二、-QR-分解" class="headerlink" title="二、$QR$分解"></a>二、$QR$分解</h2><p>&emsp;&emsp;$QR$分解是将一个矩阵分解为一个正交矩阵（酉矩阵）和一个上三角矩阵的乘积。$QR$分解被广泛应用于线性最小二乘问题的求解和矩阵特征值的计算。</p><blockquote><p>定理（$QR$分解）：设$A\in{\mathbb{C}^{m\times n}(m\ge n)}$，则存在一个单位列正交矩阵$Q\in \mathbb{C}^{m\times n}(即Q^*Q=I_{n\times n})$和一个上三角矩阵$R\in \mathbb{C}^{n\times n}$，使得</p><ul><li><script type="math/tex; mode=display">A=QR</script></li></ul><p>若$A$列满秩，则存在一个具有对角线元素的上三角矩阵$R$使得$A=QR$成立，且此时$QR$分解唯一，即$Q$和$R$都唯一。</p><p>推论：设$A\in{\mathbb{C}^{m\times n}(m\ge n)}$，且秩为$l(0\le l\le n)$，则存在一个置换矩阵$P$，使得</p><ul><li><script type="math/tex; mode=display">AP=Q\left[\begin{align}&R_{11}~~R_{12}\\&~0~~~~~~~0\end{align}\right]_{n\times n},</script></li></ul><p>其中$Q\in \mathbb{C}^{m\times n}$单位列正交，$R_{11}\in \mathbb{C}^{l\times l}$是非奇异上三角矩阵。</p></blockquote><h2 id="三、-SVD"><a href="#三、-SVD" class="headerlink" title="三、$SVD$"></a>三、$SVD$</h2><p>&emsp;&emsp;设 $A ∈ \mathbb C^{m×n} (m ≥ n)$，则$ A^∗A ∈\mathbb C^{n×n} $和$AA^∗ ∈ \mathbb C^{m×m}$都是 Hermite 半正定矩阵，且它们具有相同的非零特征值 (都是正实数)。</p><blockquote><p>定理（$SVD$）：设任意矩阵 $A ∈ \mathbb C^{m×n} (m ≥ n)$，则存在酉矩阵$U\in \mathbb C^{m\times m}$和$V\in \mathbb C^{n\times n}$，使得</p><ul><li><script type="math/tex; mode=display">U^{*} A V=\left[\begin{array}{l}\Sigma_r&0\\ 0&0\end{array}\right] \quad 或 \quad A=U\left[\begin{array}{l}\Sigma_r&0\\ 0&0\end{array}\right]  V^{*}</script></li></ul><p>其中$\sum=\mathrm{diag}(\sigma_1,\sigma_2,\ldots,\sigma_r)\in \mathbb R^{r\times r}$，且$\sigma_1\ge\sigma_2\ge\ldots\ge\sigma_r\ge0$。该分解称为$A$的奇异值分解（$SVD$）,而 $\sigma_1,\sigma_2,\ldots,\sigma_r$ 称为$A$的奇异值（特征值），$r$ 是矩阵 $A$ 的秩。</p></blockquote><h2 id="四、-Cholesky-分解"><a href="#四、-Cholesky-分解" class="headerlink" title="四、$Cholesky$分解"></a>四、$Cholesky$分解</h2><p>&emsp;&emsp;对称正定矩阵的基本性质：</p><blockquote><p>设$A\in\mathbb R^{n\times n}$.</p><ul><li>$A$ 对称正定当且仅当 $A$ 对称且所有特征值都是正的；</li><li>$A$ 对称正定当且仅当$X^TAX$ 对称正定，其中 $X\in R_{n×n} $是一个任意的非奇异矩阵；</li><li>若 $A$ 对称正定，则 $A$ 的任意主子矩阵都对称正定；</li><li>若 $A$ 对称正定，则 $A$ 的所有对角线元素都是正的，且 $\max_\limits{i\ne j} {|a_{ij}|} &lt; \max_\limits{i} {|a_{ii}|}$， 即绝对值最大的元素出现在对角线上。</li></ul></blockquote><p>&emsp;&emsp;基于对称正定的$Cholesky$分解：</p><blockquote><p>定理（$Cholesky$分解）：设$A\in\mathbb R^{n\times n}$对称正定，则存在唯一的对角线元素为正的下三角矩阵$L$，使得</p><script type="math/tex; mode=display">A=LL^T</script><p>该分解称为$Cholesky$分解。</p></blockquote><h2 id="五、-Jordan-分解（-Jordan-标准型）"><a href="#五、-Jordan-分解（-Jordan-标准型）" class="headerlink" title="五、$Jordan$分解（$Jordan$标准型）"></a>五、$Jordan$分解（$Jordan$标准型）</h2><p>&emsp;&emsp;设$A\in\mathbb C^{n\times n}$，有$p$个不同特征值，则存在非奇异矩阵$X\in \mathbb C^{n\times n}$，使得</p><ul><li><script type="math/tex; mode=display">X^{-1} A X=\left[\begin{array}{cccc}J_{1} & & & \\ & J_{2} & & \\ & & \ddots & \\ & & & J_{q}\end{array}\right] \triangleq J</script></li></ul><p>&emsp;&emsp;其中$J_i$的维数等于$\lambda_i$的代数重数，且具有下面的结构：</p><ul><li><script type="math/tex; mode=display">J_{i}=\left[\begin{array}{llll}J_{i 1} & & & \\ & J_{i 2} & & \\ & & \ddots & \\ & & & J_{i \nu_{i}}\end{array}\right], \quad J_{i k}=\left[\begin{array}{cccc}\lambda_{i} & 1 & & \\ & \ddots & \ddots & \\ & & \lambda_{i} & 1 \\ & & & \lambda_{i}\end{array}\right]</script></li></ul><p>&emsp;&emsp;这里的$v_i$为$\lambda_i$的几何重数，$J_{ik}$为（对应于$\lambda_i$的）$Jordan$块。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/mucai1/article/details/85242098">几种矩阵分解算法： LU分解，Cholesky分解，QR分解，SVD分解，Jordan分解</a></li><li><a href="https://zhuanlan.zhihu.com/p/363948873">矩阵的LU分解</a></li><li><a href="http://math.ecnu.edu.cn/~jypan/Teaching/MatrixComp/index.html">矩阵计算</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 矩阵 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 矩阵分解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园网组网实验方案</title>
      <link href="/yyds/a86e8493.html"/>
      <url>/yyds/a86e8493.html</url>
      
        <content type="html"><![CDATA[<center><font size="5">    <b>信息与通信工程学院</b>    <br>    <br>    <b>通信工程专业综合实验报告</b>    <br>    <br>    <b>2021年9月20日~12月20日</b>    <br>    <br>    <br>    </font></center><center><font size="5">    <b>校园网组建与应用</b>    </font></center><center><b>摘 要</b></center><p>&emsp;&emsp;校园网作为数字化校园和智慧校园的重要载体，在师生的工作和生活中占据着举足轻重的地位。校园网要求覆盖整个校园，具有统一、高效、便于管理、可扩展性好以及安全性好等特点。此外，网络内部应存储大量教学资源以供老师学生访问，并为校内人员提供网络服务如Web服务、E-mail服务等。本项目考虑校园网的特征，基于实用设备如路由器、交换机和防火墙等，搭建一个中小型局域网，实现了校园网基本职能。三层组网模型便于网络管理和故障检测，也便于新用户以至于新校区的接入，保证了所设计网络的可扩展性。VLAN划分及ACL的制定，保证了网络的安全性。校内服务器的部署，则完善了资源共享与校内通信的服务。</p><p><strong>关键词</strong> 校园网 实用设备 组网</p><center><font size="5">    <b>The establishment and application of campus network</b>    </font></center><center><b>ABSTRACT</b></center><p>&emsp;As an important carrier of digital campus and smart campus, campus network occupies a pivotal position in the work and life of teachers and students. Thecampus network is required to cover the entire campus, with the characteristics of uniformity, high efficiency, easy management, good scalability, and good security. In addition, a large number of teaching resources should be stored inside the network for teachers and students to access, and network services such as Web services and E-mail services should be provided for school personnel. This project takes into account the characteristics of the campus network, and builds a small and medium-sized local area network based on practical equipment such as routers, switches, and firewalls to realize the basic functions of the campus network. The three-layer networking model is convenient for network management and fault detection, and it is also convenient for new users and even new campuses to access, ensuring the scalability of the designed network. The division of VLANs and the formulation of ACLs ensure the security of the network. The deployment of the server in the school has improved the service of resource sharing and communication in the school.</p><p><strong>KEY WORDS</strong>  campus network practical equipment network construction</p><h2 id="第一章-综述"><a href="#第一章-综述" class="headerlink" title="第一章 综述"></a>第一章 综述</h2><p>&emsp;&emsp;校园网作为数字化校园和智慧校园的重要载体，在师生的工作和生活中占据着举足轻重的地位。我们的服务目标是大学校园，最终目的是实现覆盖整个校园区域的互联、统一、高效、可扩展、安全的局域网络。网络结构上，规划合理且便于管理和故障排查；网络布线上，布局统一简洁，便于升级改造；网络功能上，能够保证新用户的便捷接入，提供资源共享能力，以及丰富多彩的网络服务^[1-4]^。基于众多网络资源以及实验室提供的资料^[5-23]^和设备，我们对整个网络进行了分析、设计和实验。</p><h2 id="第二章-需求分析"><a href="#第二章-需求分析" class="headerlink" title="第二章 需求分析"></a>第二章 需求分析</h2><p>&emsp;&emsp;由于大学校园组成复杂，各个部门、各个区域、师生和临时人员对上网的需求存在一定的差异性，对每个网络于系统复杂程度、应用范围及规模上都存在较大的不同。同时考虑到平时的使用习惯和使用经验，我们从网络性能、网络管理、网络安全、网络服务以及网络扩展五大方面进行了需求分析。</p><h3 id="2-1-网络性能需求"><a href="#2-1-网络性能需求" class="headerlink" title="2.1 网络性能需求"></a>2.1 网络性能需求</h3><ol><li><p>带宽合理，保证传输速率。</p></li><li><p>节点分布合理，保证不同区域接入需求。</p></li><li><p>设备选用合理，不同层次不同区域设备选用具有合适吞吐量的设备。</p></li></ol><h3 id="2-2-网络管理需求"><a href="#2-2-网络管理需求" class="headerlink" title="2.2 网络管理需求"></a>2.2 网络管理需求</h3><ol><li><p>合理的拓扑结构。树型拓扑结构便于管理和问题排查。</p></li><li><p>合理的组网模型。三层组网模型及其扁平化处理使得整体网络结构清晰，层次分明。</p></li></ol><h3 id="2-3-网络安全需求"><a href="#2-3-网络安全需求" class="headerlink" title="2.3 网络安全需求"></a>2.3 网络安全需求</h3><ol><li><p>内部网络划分VLAN 网段，隔离广播域，防止网络窃听和非授权的跨网段访问。</p></li><li><p>使用硬件防火墙，通过ACL限定用户的访问权限，尤其是内外部网络的隔离。</p></li><li><p>在内网出口上配置NAT转换，不让内网主机直接暴露在因特网上，保证内网主机的安全。</p></li></ol><h3 id="2-4-网络服务需求"><a href="#2-4-网络服务需求" class="headerlink" title="2.4 网络服务需求"></a>2.4 网络服务需求</h3><ol><li><p>搭建Web服务器以提供网页访问服务。</p></li><li><p>搭建FTP服务器以提供文件资源共享服务。</p></li><li><p>搭建E-mail服务器以提供邮件转发服务。</p></li><li><p>搭建DNS服务器实现域名解析服务。</p></li><li><p>搭建DHCP服务器以便于主机自动获取IP地址。</p></li></ol><h3 id="2-5-网络扩展需求"><a href="#2-5-网络扩展需求" class="headerlink" title="2.5 网络扩展需求"></a>2.5 网络扩展需求</h3><ol><li><p>接入扩展。通过二层、三层交换机的部署，使得新用户、新校区能简单地接入现有网络。</p></li><li><p>平滑升级。通过网络结构的设计，使得更新换代时能够保证便捷性、非破坏性。升级改造时只需简单地更换高速率的集线设备，就能完成升级。</p></li></ol><h2 id="第三章-布线方案"><a href="#第三章-布线方案" class="headerlink" title="第三章 布线方案"></a>第三章 布线方案</h2><p>&emsp;&emsp;为了便于以后校园规划的便捷性，提高网络的可管理性和可扩展性，我们采用的是结构化布线方案。该方案具有实用性、灵活性、模块化、可扩展和可靠性高等五大特点。该布线系统对内适应不同的网络设备、主机、终端、PC及外部设备，可构成灵活的拓扑结构，有足够的系统扩展能力，对外通过与国家公网与外部信息源相连，组成全方位多通道的信息访问系统。既能适应当前信息处理的需要，又充分考虑到信息系统未来的发展趋势。[5]</p><h3 id="3-1-结构化布线特点"><a href="#3-1-结构化布线特点" class="headerlink" title="3.1 结构化布线特点"></a>3.1 结构化布线特点</h3><ol><li><p>实用性：实施后的楼宇自动化系统及其所有的子系统的通讯线路和接口都满足国际标准。具有良好的用户使用界面，并且网络管理功能完善、使用方便。</p></li><li><p>灵活性：系统中任一部分的连接都是灵活的，即从物理接线到数据通讯、语音通讯、智能控制设备之间的连接都不受或极少受物理位置和这些设备类型的限制。</p></li><li><p>模块化：所有用于连接设备的适配件都是积木式的标准件，不需要掌握很多有关这些领域的专门知识，就能够连接这些设备。</p></li><li><p>扩展性：由于系统的所有基础设施(材料、部件、通讯设备）都采用国际标准，因此，无论计算机设备、通讯设备、智能控制设备随技术的发展，将来都可能很方便地将其连接到楼宇自动化系统中去。</p></li><li><p>可靠性：系统中的各个部分都采用高质量的材料、组部件设备实现，并谨慎施工和测试，以保证系统的各个环节都是可靠的。</p></li></ol><h3 id="3-2-结构化布线图"><a href="#3-2-结构化布线图" class="headerlink" title="3.2 结构化布线图"></a>3.2 结构化布线图</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/校园整体网络布线结构示意图.png" alt="图3-1 校园整体网络布线结构示意图"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图3-2宿舍楼整体网络布线示意图.png" alt="图3-2 宿舍楼整体网络布线示意图"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图3-3宿舍楼内部布线结构平面图.png" alt="图3-3 宿舍楼内部布线结构平面图"></p><h2 id="第四章-网络规划"><a href="#第四章-网络规划" class="headerlink" title="第四章 网络规划"></a>第四章 网络规划</h2><p>&emsp;&emsp;我们组建的网络采用三层组网模型[5]。该模型自底向上为接入层、汇聚层及核心层，每层设备各司其职，具备良好的可管理性和可扩展性。基于三层组网模型，我们首先设计了整体的校园网络结构，其次由于实验室设备有限，并且经过分析，很多区域的通信过程相同，因此将原有网络结构进行简化，生成验证方案网络结构。最后在简化校园网络的基础上，我们为其进行了明确的IP地址分配和设备端口规划。</p><h3 id="4-1-三层组网模型设计原则-5"><a href="#4-1-三层组网模型设计原则-5" class="headerlink" title="4.1 三层组网模型设计原则^[5]^"></a>4.1 三层组网模型设计原则^[5]^</h3><ol><li><p>选择最合适需求的分级模型。边界（汇聚层节点）作为广播的隔离点，同时还是网络控制功能的焦点。</p></li><li><p>不要使网络的各层总是完全网状的，即接入层交换机不能直接相连，而需要通过汇聚层节点连接。但核心层通常是网状的，目的是考虑到电路冗余和网络收敛速度的原因。</p></li><li><p>不要把终端工作站安装在主干网上。可提高主干网可靠性，便于通信量管理和增大带宽设计的实现，加快收敛速度。</p></li><li><p>通过把80%的通信量控制在本地工作组内部，使工作组LAN运行良好。即尽量使联系较多的人员分配在同一子网或同一VLAN中，从而高程度实现通信隔离，既缓解了网络压力，又能保证安全性。</p></li><li><p>对于网络规模小的，也可以省去汇聚层。</p></li></ol><h3 id="4-2-组网模型说明"><a href="#4-2-组网模型说明" class="headerlink" title="4.2 组网模型说明"></a>4.2 组网模型说明</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图4-1整体校园网络结构设计图.png" alt="图4-1 整体校园网络结构设计图"></p><p>&emsp;&emsp;网络结构自底向上分别为接入层、汇聚层、核心层。接入层直接连接学校用户的计算机。以宿舍为例，每层楼设置一个或多个接入层节点（交换机），为每个宿舍留出一个接口。然后该接口通过<br>AP进行无线局域网覆盖，同时再通过一个交换机（交换机堆叠）接入到宿舍4/6/8人的计算机。其次，整栋楼设置一个汇聚层节点，负责汇总连接接入层节点。各个建筑的汇聚层节点通过光缆连接至核心层节点，核心层连接服务器或者经过路由器接至外部网络。图4-1为整体校园网络结构设计图。</p><h4 id="4-2-1核心层"><a href="#4-2-1核心层" class="headerlink" title="4.2.1核心层"></a>4.2.1核心层</h4><p>&emsp;&emsp;核心层是局域网的主干部分，主要目的是尽可能快地交换数据。不应涉及费力的数据包操作或减慢数据交换的处理。应避免在核心层使用访问控制列表（ACL）和数据包过滤之类的操作（防火墙的功能）。此外，核心层被认为是所有流量的最终承受者和汇聚者，因此核心层交换机应该采用拥有更高带宽、更高可靠性、更高性能和吞吐量的千兆甚至万兆以上的交换机。一般采用高端三层交换机。</p><p>核心层的主要工作为：</p><ol><li><p>提供交换区块间的连接。</p></li><li><p>提供到其它区块的访问。</p></li><li><p>尽可能快地交换数据帧或包。</p></li></ol><h4 id="4-2-2汇聚层"><a href="#4-2-2汇聚层" class="headerlink" title="4.2.2汇聚层"></a>4.2.2汇聚层</h4><p>&emsp;&emsp;汇聚层是接入层和核心层之间的分界点。负责提供边界定义（如VLAN划分）并对潜在的费力的数据包操作进行处理。汇聚层为接入层提供基于策略的连接，如地址合并、协议过滤、路由服务、认证管理等。通过VLAN划分屏蔽接入层对核心层的影响。提供接入层VLAN之间的互连，控制和限制接入层对核心层的访问，保证核心层的安全和稳定。一般也采用三层交换机。</p><p>汇聚层的主要工作为：</p><ol><li><p>VLAN聚合。</p></li><li><p>VLAN间路由。</p></li><li><p>部门级和工作组接入。</p></li><li><p>广播域或组播域的定义。</p></li><li><p>介质转换。</p></li><li><p>安全。</p></li></ol><h4 id="4-2-3接入层"><a href="#4-2-3接入层" class="headerlink" title="4.2.3接入层"></a>4.2.3接入层</h4><p>&emsp;&emsp;接入层利用光纤、双绞线、同轴电缆、无线接入技术等传输介质，实现与用户（工作站、AP等）连接，并进行业务和带宽的分配。接入层常用包过滤策略提供基本的安全性，以保护局域网免受网络内外的攻击。接入层的主要准则是通过低成本和高端口密度的设备提供安全接入功能，采用“低端”交换机（二层交换机），被称作工作组交换机或接入层交换机。</p><p>接入层的主要工作为：</p><ol><li><p>将流量导入网络。</p></li><li><p>提供二层服务：基于广播或MAC地址的VLAN成员资格和数据流过滤。</p></li><li><p>访问控制。</p></li></ol><h4 id="4-2-4各部分区域说明"><a href="#4-2-4各部分区域说明" class="headerlink" title="4.2.4各部分区域说明"></a>4.2.4各部分区域说明</h4><ol><li><p>核心区。设定信息中心为核心区域，仅可在内网中通信，不能访问外网。</p></li><li><p>无线覆盖区域。此处的无线覆盖区域并非单指某一区域，而是代指每个区域区分于有线网络的无线覆盖。如在每个宿舍的接入层交换机连接多个AP，以保证每间宿舍的无线网覆盖。</p></li><li><p>涉密机器区域。该区域的机器仅能够在自身VLAN内部通信。</p></li><li><p>校区B。设置校区B以模拟验证方案的可扩展性，未来随着校园规划增加校区，可继续通过接入核心层交换机接入整体网络。或者如果校区规模非常大，还可以独立于校区A，具备完整的三层结构并通过自己的出口路由器连接外部网络（即与校区A类似）。与校区A的互访仍通过核心层交换机进行。</p></li><li><p>对内服务器区域。用于部署校内所需要的各种网络服务器。</p></li><li><p>Internet及学校2。由于校园内不允许私自通过路由器接入外网网线，因此我们设立学校2来模拟外部网络用户与内网用户的通信过程。</p></li><li><p>出口路由器与防火墙。用于隔离内外部网络以及实现接入广域网。设计冗余链路实现负载均衡和热备份，以防止某一个机器宕机之后网络瘫痪。</p></li></ol><h3 id="4-3-网络结构简化"><a href="#4-3-网络结构简化" class="headerlink" title="4.3 网络结构简化"></a>4.3 网络结构简化</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图4-2验证方案网络结构设计图.png" alt="图4-2 验证方案网络结构设计图"></p><p>&emsp;&emsp;由于设备和时间有限，考虑到实验的可操作性，我们尽可能简化了网络设计并以此方案进行组网实验。一是对学校建筑选择的简化，二是对VLAN划分的简化，三是网络拓扑结构的简化。图4-2为简化后的验证方案网络拓扑图。图中对各部分VLAN、IP地址以及部分接口做了说明。</p><ol><li><p>建筑选择。只对所设计学校中的部分代表性区域进行网络设计及验证，未在网络拓扑图中出现的部门/区域认为其网络需求与其它区域相同或类似，同时在网络涉设计中会留有便于扩展的接口。经过分析，从所有学校建筑中挑选出五个部分：宿舍楼、科研楼、行政及信息中心。</p></li><li><p>网络拓扑。对于学校来说，因为其人员多、覆盖范围广，应考虑采用三层结构组网模型。但为了实验的可操作性，并且由于不同汇聚层交换机与核心层交换机的通信过程、以及其下的VLAN的通信过程都是类似的。因此我们省去汇聚层，将接入层交换机与核心层直接相连。</p></li><li><p>VLAN划分。出于便捷性和实用性考虑，同一VLAN内工作站不会分布在不同的交换机上。另外因为不同VLAN间通信均需要通过三层设备（三层交换机或路由器），因此无论是同一交换机上的VLAN，还是不同交换机上的VLAN，其通信过程相同。故在网络设计图中会将不同交换机上的VLAN接入到同一接入层交换机。</p><p>VLAN具体设计：</p><ol><li><p>VLAN2、3、4、6、7间互通</p></li><li><p>VLAN4只能在内网通信，不能访问外部网络</p></li><li><p>VLAN5只能在VLAN内部通信</p></li><li><p>VLAN7属于内部服务器区域，为内网用户提供服务，不能访问外网，也不能被外网访问</p></li></ol></li></ol><h3 id="4-4-IP地址及设备端口规划"><a href="#4-4-IP地址及设备端口规划" class="headerlink" title="4.4 IP地址及设备端口规划"></a>4.4 IP地址及设备端口规划</h3><ul><li><p>接入层交换机：S2A（H3C S3100）</p><p>因为前期实验时没注意到H3C S3100是三层交换机，已经配置了许多，故直接用其代替二层交换机使用。</p><p>表4-1 S2A端口分配表<br>|   <strong>端口</strong>   | <strong>模式</strong> |   <strong>VLAN</strong>   |  <strong>网段</strong>   |   <strong>默认网关</strong>   |<br>| :—————: | :———: | :—————: | :————-: | :———————: |<br>|  e0/1~e0/4  |  access  |    VLAN2     | 192.168.2.0 | 192.168.2.254/24 |<br>|  e0/5~e0/8  |  access  |    VLAN3     | 192.168.3.0 | 192.168.3.254/24 |<br>| e0/9~e0/12  |  access  |    VLAN4     | 192.168.4.0 | 192.168.4.254/24 |<br>| e0/13~e0/16 |  access  |    VLAN5     | 192.168.5.0 | 192.168.5.254/24 |<br>|    e0/20     |  trunk   | VLAN2-4、6-7 |             |                  |</p></li><li><p>接入层交换机S2B（Quidway E050）</p><p>表4-2 S2B端口分配表<br>|   <strong>端口</strong>   | <strong>模式</strong> |   <strong>VLAN</strong>   |  <strong>网段</strong>   |   <strong>默认网关</strong>   |<br>| :—————: | :———: | :—————: | :————-: | :———————: |<br>| e0/45~e0/48 |  access  |    VLAN6     | 192.168.6.0 | 192.168.6.254/24 |<br>|    e0/10     |  trunk   | VLAN2-4、6-7 |             |                  |</p></li><li><p>核心层交换机S3（H3C 3610）</p><ul><li>下行端口<br>表4-3-1 S3下行端口分配表<br>|    <strong>端口</strong>     | <strong>模式</strong> | <strong>VLAN</strong> | <strong>网段/IP地址</strong> |   <strong>默认网关</strong>   |<br>| :——————-: | :———: | :———: | :——————-: | :———————: |<br>| e1/0/9~e1/0/12 |  access  |  VLAN7   |   192.168.7.0   | 192.168.7.254/24 |<br>| <strong>端口</strong> | <strong>模式</strong> | <strong>接入设备</strong> | <strong>allow-pass</strong> |<br>|  e1/0/1  |  trunk   |     S2A      |  VLAN2-4、6-7  |<br>|  e1/0/2  |  trunk   |     S2B      |  VLAN2-4、6-7  |<br>| <strong>interface-vlan</strong> | <strong>IP地址</strong>    |<br>| ————————— | ——————- |<br>| interface-vlan2    | 192.168.2.254 |<br>| interface-vlan3    | 192.168.3.254 |<br>| interface-vlan4    | 192.168.4.254 |<br>| interface-vlan6    | 192.168.6.254 |<br>| interface-vlan7    | 192.168.7.254 |</li></ul></li><li><p>上行端口<br>表4-3-2 S3上行端口分配表<br>| <strong>端口</strong> | <strong>接入设备</strong> | <strong>模式</strong> | <strong>IP地址</strong>   | <strong>网关</strong>     |<br>| ———— | —————— | ———— | —————— | —————— |<br>| e1/0/20  | firewall     | access   | 192.168.10.1 | 192.168.10.2 |</p></li><li><p>防火墙firewall（H3C SecPath F100-A）<br>表4-4 防火墙端口分配表<br>| <strong>端口</strong> | <strong>作用</strong>              | <strong>IP地址</strong>      |<br>| ———— | ——————————- | ———————- |<br>| E0/0     | 内网端口LAN0，trust   | 192.168.10.2/24 |<br>| E1/0     | 外网端口WAN0，untrust | 202.99.160.2/28 |</p></li><li><p>路由器R1（H3C R2501E）<br>表4-5 R1端口分配表<br>| <strong>端口</strong> | <strong>IP地址</strong>      |<br>| ———— | ———————- |<br>| E0       | 202.99.160.1/28 |<br>| S0       | 10.1.1.2/24     |</p></li><li><p>路由器R2（H3C R2501E）<br>表4-6 R2端口分配表<br>| <strong>端口</strong> | <strong>IP地址</strong>    |<br>| ———— | ——————- |<br>| E0       | 192.168.9.254 |<br>| S0       | 10.1.1.1/24   |</p></li><li><p>接入层交换机S2C（Quidway E050）</p><p>e0/1~e0/16为VLAN9，直接将e0/4接入路由器R2</p></li></ul><h2 id="第五章-设备配置"><a href="#第五章-设备配置" class="headerlink" title="第五章 设备配置"></a>第五章 设备配置</h2><h3 id="5-1设备说明"><a href="#5-1设备说明" class="headerlink" title="5.1设备说明"></a>5.1设备说明</h3><ol><li><p>以太网交换机^[6]^</p><ol><li><p>定义：交换机是用于电信号转发的网络设备。以太网交换机是基于以太网传输数据的交换机。其每个端口直接与主机相连，并一般工作在全双工方式。实质上就是一个多端口的网桥，能连通多个端口并使每一对相互通信的主机都像独占通信媒体一样，无冲突传输数据（分隔冲突域）。</p></li><li><p>传输模式：全双工、半双工、全双工/半双工自适应。</p></li><li><p>原理：工作在数据链路层，使用MAC地址（48位，6字节）。当接受到一个广播帧时，他会向除接受端口之外的所有端口转发；当接受到一个单播帧时，检查其目的地址并对应自己的MAC地址表，如果存在目的地址，则转发，如果不存在则泛洪(广播)，广播后如果没有主机的MAC地址与帧的目的MAC地址相同，则丢弃，若有主机相同，则会将主机的MAC自动添加到其MAC地址表中（学习）。</p></li><li><p>主要功能：物理编址、网络拓扑结构、错误校验、帧序列以及流控。</p></li><li><p>特点：转发速度非常快。</p></li></ol></li><li><p>二层交换机^[7]^</p><ol><li><p>定义：指只支持OSI第二层(数据链路层)交换技术的交换机。</p></li><li><p>特点</p><ol><li><p>多端口数据同时交换，故要求具有很高的交换总线带宽。</p></li><li><p>学习端口连接机器的MAC地址，地址表大小影响交换机的接入容量。</p></li><li><p>含有专用于处理数据包转发的ASIC（Application Specific Integrated<br>Circuit）芯片，转发速度非常快。</p></li></ol></li></ol></li><li><p>三层交换机^[8]^</p><ol><li><p>定义：具有部分路由器功能的交换机。工作在网络层。基于IP设计。三层交换技术<br>= 二层交换技术 + 三层转发技术</p></li><li><p>目的：加快大型局域网“内部”的数据交换，所具有的路由功能也是为这目的服务的，能够做到一次路由，多次转发。</p></li><li><p>应用环境：大型局域网按功能/地域（逻辑）划分为多个小局域网（VLAN），不同VLAN间通过三层交换机通信，因为它具有二层交换的速度，同时能完成部分传统路由器的功能。</p></li></ol></li><li><p>路由器^[9]^</p><ol><li><p>定义：工作在网络层，用于在不同的网络间存储转发分组。可在异种网络间（如不同局域网、局域网与广域网、广域网与广域网）传输数据并进行路径选择。多协议的路由器可以连接到使用完全不同的网络层、数据链路层和物理层协议的网络。</p></li><li><p>原理：</p><ol><li><p>IP地址：通信节点的唯一标识。根据数据包的IP将其从正确接口转发出去。</p></li><li><p>控制部分与数据转发部分：在控制部分，路由器通过路由协议交换网络的拓扑结构信息，依照拓扑结构动态生成路由表。在数据转发部分，转发引擎从输入线路接受IP分组之后，分析并修改分组头，使用转发表查找下一跳，把数据交换到输出线路上，向相应方向转发。转发表是根据路由表生成的，其表项和路由表项有直接对应关系，更适合实现快速查找。转发的主要流程包括线路输入、分组头分析、数据存储、分组头修改和线路输出</p></li><li><p>输入和输出端口：输入端口是物理链路的连接点，也是数据的接收点。它完成的功能主要包括数据链路层帧的封装和解封装。输出端口主要完成数据的排队、缓冲管理以及调度输出，同时也要执行数据的封装和支持物理层、链路层协议。</p></li><li><p>选路策略与选路机制：选路策略——静态/动态路由表确定最佳传输路径。选路机制——查找路由表并根据结果转发。</p></li></ol></li><li><p>功能：</p><ol><li><p>组网。连接不同网络，提供分组转发；通过分段改进局域网性能，划分网段并阻隔广播包以避免“广播风暴”；多协议路由器实现不同协议间的转换</p></li><li><p>安全防护。防止外部网络对内部网络的信息窃取和攻击；阻止内部网络某些用户对外部网络的访问</p></li><li><p>网络管理。流量控制。</p></li><li><p>IP地址共享。内部用户使用外部公开IP地址访问互联网。</p></li></ol></li></ol></li><li><p>防火墙^[10]^</p><ol><li><p>定义：防火墙技术是通过有机结合各类用于安全管理与筛选的软件和硬件设备，帮助计算机网络于其内、外网之间构建一道相对隔绝的保护屏障，以保护用户资料与信息安全性的一种技术。</p></li><li><p>功能：</p><ol><li><p>网络安全屏障：过滤不安全的网络服务</p></li><li><p>强化网络安全策略：通过以firewall为中心的安全方案配置，将安全软件配置在防火墙上，集中安全管理。</p></li><li><p>监控审计：记录经过firewall的访问并作日志记录。可疑时报警并提供详细信息。</p></li><li><p>防止内部信息外泄：划分内部网络，实现内网重点网段的隔离，从而限制局部重点或敏感网络安全问题对全局网络造成的影响。</p></li><li><p>日志记录与事件通知。</p></li></ol></li><li><p>特征：</p><ol><li><p>数据必经之地：内部网络和外部网络之间的所有网络数据流都必须经过防火墙。</p></li><li><p>典型的防火墙体系网络结构一端连接企事业单位内部的局域网，而另一端则连接着互联网。所有的内、外部网络之间的通信都要经过防火墙，只有符合安全策略的数据流才能通过防火墙。</p></li><li><p>确保网络流量的合法性</p></li><li><p>抗攻击免疫力</p></li></ol></li><li><p>主要类型：</p><ol><li><p>过滤型（网络层与传输层）</p></li><li><p>应用代理型（OSI最高层，应用层之上）</p></li><li><p>复合型（应用最广泛）</p></li></ol></li><li><p>关键技术</p><ol><li><p>包过滤技术（网络层）</p></li><li><p>加密技术</p></li><li><p>防病毒技术</p></li><li><p>代理服务器（实现信息数据IP的虚拟化）</p></li></ol></li><li><p>部署方式</p><ol><li><p>桥模式（透明模式）：内外网在同一网段。此模式下firewall无IP地址。</p></li><li><p>网关模式：内外网不在同一网段，firewall设置网关地址实现路由器的功能。比桥模式更安全。</p></li><li><p>NAT模式(Network Address<br>Translation)：防火墙对内部网络的IP地址进行地址翻译，使用防火墙的IP地址替换内部网络的源地址向外部网络发送数据；当外部网络的响应数据流量返回到防火墙后，防火墙再将目的地址替换为内部网络的源地址。</p></li><li><p>高可靠设计：冗余技术。如虚拟路由冗余协议（VRRP）</p></li></ol></li></ol></li></ol><h3 id="5-2原理说明"><a href="#5-2原理说明" class="headerlink" title="5.2原理说明"></a>5.2原理说明</h3><h4 id="5-2-1-VLAN原理"><a href="#5-2-1-VLAN原理" class="headerlink" title="5.2.1 VLAN原理"></a>5.2.1 VLAN原理</h4><p>&emsp;&emsp;VLAN^[11]^（Virtual LAN）即“虚拟局域网”，可以看做是在一个物理局域网络上搭建出几个逻辑上分离的几个局域网。举例来说，如果一个交换机划分为两个VLAN，则相当于这台交换机逻辑上划分为两个交换机。实际上VLAN也可以跨越多台交换机，本质上VLAN是一个网络层次上的概念，将整个网络划分为多个逻辑上隔离的网络（一个VLAN就是一个独立的广播域）。</p><p>引入VLAN的概念，主要有以下好处，总结如下：</p><ol><li><p>更安全：数据包仅在本VLAN内传递。</p><p>&emsp;&emsp;由于配置了VLAN后，一个VLAN的数据包不会发送到另一个VLAN，这样，其他VLAN的用户的网络上是收不到任何该VLAN的数据包，这样就确保了该VLAN的信息不会被其他VLAN的人窃听，从而实现了信息的保密。</p></li><li><p>更高效：泛洪转发仅在本VLAN内复制。</p><p>&emsp;&emsp;按照802.1D透明网桥的算法，如果一个数据包找不到MAC表，那么交换机就会将该数据包向除接收端口以外的其他所有端口发送，这就是桥的泛洪转发。（典型的广播方式包括组播报文，广播报文，以及未知单播报文都会进行泛洪转发）。这样的结果，毫无疑问极大的浪费了带宽，如果配置了VLAN，那么，当一个数据包需要泛洪转发时，交换机只会将此数据包发送到所有属于该VLAN的其他端口，而不是所有的交换机的端口，这样，就将数据包限制到了一个VLAN内。在一定程度上可以节省带宽。</p></li><li><p>更方便：不改变物理组网的情况下，灵活进行逻辑网络的变更。</p><p>&emsp;&emsp;使用VLAN的最终目标就是建立虚拟工作组模型，例如，在企业网中，同一个部门的就好象在同一个LAN上一样，很容易的互相访问，交流信息，同时，所有的广播包也都限制在该虚拟LAN上，而不影响其他VLAN的人。一个人如果从一个办公地点换到另外一个地点，而他仍然在该部门，那么，该用户的配置无须改变；同时，如果一个人虽然办公地点没有变，但他更换了部门，那么，只需网络管理员更改一下该用户的配置即可。这个功能的目标就是建立一个动态的组织环境，当然，这只是一个理想的目标，要实现它，还需要一些其他方面的支持。</p></li></ol><p>VLAN交换机的端口一般可以分为几大类：</p><ol><li><p>Access端口</p><p>&emsp;&emsp;一般用于交换机与终端之间，该类端口仅归属于一个VLAN。Access链路上的报文没有VLAN<br>tag，与传统报文保持兼容。但交换机的Access端口上回配置VLAN。这样所有从该Access链路上收到的报文都归属于Access端口所归属的VLAN。（核心概念：报文兼容，没有vlan-tag）</p></li><li><p>Trunk端口</p><p>&emsp;&emsp;一般交换机与交换机之间，该类型端口允许多个VLAN的报文通过。该端口所在的链路上的报文需要有VLAN<br>tag。（核心概念：除默认VLAN外，其他VLAN报文有vlan-tag）</p></li><li><p>Hybrid端口</p><p>&emsp;&emsp;Hybrid类型的端口可以允许多个VLAN通过，可以接收和发送多个VLAN的报文，可以用于交换机之间连接，也可以用于连接用户的计算机。Hybrid端口和Trunk端口在接收数据时，处理方法是一样的，唯一不同之处在于发送数据时：Hybrid端口可以允许多个VLAN的报文发送时不打标签，而Trunk端口只允许缺省VLAN的报文发送时不打标签。（核心概念：哪些VLAN打tag，哪些不打tag可以手工配置）</p></li></ol><p>&emsp;&emsp;本次实验配置主要用到了Access端口和Trunk端口。</p><p>&emsp;&emsp;图是处于VLAN10下的PC1向VLAN20下的PC2发送数据包的流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-1不同VLAN下的数据转发图.jpg" alt="图5-1 不同VLAN下的数据转发图"></p><h4 id="5-2-2-DHCP原理"><a href="#5-2-2-DHCP原理" class="headerlink" title="5.2.2 DHCP原理"></a>5.2.2 DHCP原理</h4><p>&emsp;&emsp;DHCP^[12]^服务事件的序列如下：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-2DHCP服务时间序列图.png" alt="图5-2 DHCP服务时间序列图"></p><p>&emsp;&emsp;客户机通过将搜索消息广播到本地子网上的有限广播地址 (255.255.255.255) 来搜索 DHCP 服务器。如果存在路由器并已将其配置为充当 BOOTP 中继代理的角色，请求便会传送到不同子网上的其他 DHCP 服务器。客户机的广播包括其唯一的 ID，在 Oracle Solaris 中的 DHCP 实现中，此 ID 由客户机的介质访问控制 (Media Access Control, MAC) 地址派生而来。在以太网上，MAC 地址与以太网地址相同。</p><p>&emsp;&emsp;在 DHCP 服务器确定客户机的网络之后，便会选择相应的 IP 地址并确认该地址尚未使用。然后，DHCP服务器通过广播一条提供消息来响应客户机。该提供消息中包含选定的 IP 地址以及有关可为客户机配置的服务的信息。每台服务器都会暂时保留所提供的 IP 地址，直到客户机确定是否使用该 IP 地址为止。</p><p>&emsp;&emsp;客户机会根据所提供的服务的数量和类型来选择最佳内容。客户机会广播一条请求来指定提供最佳内容的服务器的 IP 地址。该广播确保所有发出响应的 DHCP 服务器都知道客户机已经选择了一台服务器。未被选中的服务器会取消对之前提供的 IP 地址的保留。</p><p>&emsp;&emsp;被选中的服务器会为客户机分配 IP 地址，并将信息存储到 DHCP 数据存储中。该服务器还会向客户机发送一条确认消息 (acknowledgement message, ACK)。确认消息包含客户机的网络配置参数。客户机使用 ping 实用程序测试此 IP<br>地址，以确保它没有被其他系统使用。然后，客户机会继续引导以加入网络。</p><p>&emsp;&emsp;客户机会监视租用时间。当设定的时间段过去时，客户机会向所选的服务器发送一条新消息来延长租用时间。</p><p>&emsp;&emsp;接收请求的 DHCP 服务器会延长租用时间，前提是租用仍然遵循由管理员设置的本地租用策略。如果服务器在 20 秒内没有响应，客户机便会广播一条请求，以便其他 DHCP 服务器之一可以延长租用期。</p><p>&emsp;&emsp;当客户机不再需要 IP 地址时，便会通知服务器已释放了 IP 地址。此通知可以在正常关机时发送，也可以手动发送。</p><h4 id="5-2-3-OSPF原理"><a href="#5-2-3-OSPF原理" class="headerlink" title="5.2.3 OSPF原理"></a>5.2.3 OSPF原理</h4><p>&emsp;&emsp;OSPF[13]路由协议是一种典型的链路状态（Link-state）的路由协议，一般用于同一个路由域内。在这里，路由域是指一个自治系统（Autonomous System），即AS，它是指一组通过统一的路由政策或路由协议互相交换路由信息的网络。在这个AS中，所有的OSPF路由器都维护一个相同的描述这个AS结构的数据库，该数据库中存放的是路由域中相应链路的状态信息，OSPF路由器正是通过这个数据库计算出其OSPF路由表的。</p><p>&emsp;&emsp;当路由器开启OSPF后，路由器之间就会相互发送HELLO报文，HELLO报文中包含一些路由器和链路的相关信息，发送HELLO报文的目的是为了形成邻居表，然后，路由器之间就会发送LSA（LINK STATE ADVERTISEMENT，链路状态通告），LSA告诉自己的邻居路由器和自己相连的链路的状态，最后，形成网络的拓扑表，其实这个过程是很复杂的，他们经过发LSA，记录LSA，装发LSA，最后形成LSDB（链路状态数据库，即拓扑表），形成拓扑表之后，在经过SPF算法，通过计算LSDB，最后形成路由表。形成路由表后，路由器就可以根据路由表来转发数据包，但是，这只是理想情况，如果之后，网络拓扑发生了变化，或是网络链路出现了问题，OSPF协议还是会经过这三张表来重新计算新的路由，只不过不会这么复杂了，路由器在默认情况下，10S就会发送一次HELLO报文，以检测链路状态，保证链路始终是正常的。</p><h4 id="5-2-4-NAT原理"><a href="#5-2-4-NAT原理" class="headerlink" title="5.2.4 NAT原理"></a>5.2.4 NAT原理</h4><p>&emsp;&emsp;NAT[14]英文全称是“Network Address Translation”，中文意思是“网络地址转换”，它是一个IETF(Internet Engineering Task Force, Internet工程任务组)标准，允许一个整体机构以一个公用IP（Internet Protocol）地址出现在Internet上。顾名思义，它是一种把内部私有网络地址（IP地址）翻译成合法网络IP地址的技术，如下图所示。因此我们可以认为，NAT在一定程度上，能够有效的解决公网地址不足的问题。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-3NAT转换原理图.jpg" alt="图5-3 NAT转换原理图"></p><p>&emsp;&emsp;简单地说，NAT就是在局域网内部网络中使用内部地址，而当内部节点要与外部网络进行通讯时，就在网关（可以理解为出口，打个比方就像院子的门一样）处，将内部地址替换成公用地址，从而在外部公网（internet）上正常使用，NAT可以使多台计算机共享Internet连接，这一功能很好地解决了公共<br>IP地址紧缺的问题。通过这种方法，可以只申请一个合法IP地址，就把整个局域网中的计算机接入Internet中。这时，NAT屏蔽了内部网络，所有内部网计算机对于公共网络来说是不可见的，而内部网计算机用户通常不会意识到NAT的存在。如下图所示。这里提到的内部地址，是指在内部网络中分配给节点的私有IP地址，这个地址只能在内部网络中使用，不能被路由转发。</p><p>图5-4 NAT转换演示图</p><h4 id="5-2-5-DNS原理"><a href="#5-2-5-DNS原理" class="headerlink" title="5.2.5 DNS原理"></a>5.2.5 DNS原理</h4><p>&emsp;&emsp;DNS^[15]^( Domain Name System)是“域名系统”的英文缩写，是一种组织成域层次结构的计算机和网络服务命名系统，它用于TCP/IP网络，它所提供的服务是用来将主机名和域名转换为IP地址的工作。DNS就是这样的一位“翻译官”，它的基本工作原理可用下图来表示。</p><p>图5-5 DNS转换原理图</p><p>&emsp;&emsp;网络通讯大部分是基于TCP/IP的，而TCP/IP是基于IP地址的，所以计算机在网络上进行通讯时只能识别如“202.96.134.133”之类的IP地址，而不能认识域名。我们无法记住10个以上IP地址的网站，所以我们访问网站时，更多的是在浏览器地址栏中输入域名，就能看到所需要的页面，这是因为有一个叫“DNS服务器”的计算机自动把我们的域名“翻译”成了相应的IP地址，然后调出IP地址所对应的网页。</p><p>&emsp;&emsp;DNS采用分布式层次式数据库。包含根域名服务器、顶级域名服务器、权威域名服务器、本地域名解析服务器等。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-6DNS结构.png" alt="图5-6 DNS结构"></p><p>DNS查询过程：</p><ol><li><p>迭代查询</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-7DNS迭代查询.png" alt="图5-7 DNS迭代查询"></p></li><li><p>递归查询</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-8DNS递归查询.png" alt="图5-8 DNS递归查询"></p></li></ol><h4 id="5-2-6-ACL原理"><a href="#5-2-6-ACL原理" class="headerlink" title="5.2.6 ACL原理"></a>5.2.6 ACL原理</h4><p>&emsp;&emsp;访问控制列表ACL^[16]^（Access Control List）是由一条或多条规则组成的集合。所谓规则，是指描述报文匹配条件的判断语句，这些条件可以是报文的源地址、目的地址、端口号等。</p><p>&emsp;&emsp;ACL本质上是一种报文过滤器，规则是过滤器的滤芯。设备基于这些规则进行报文匹配，可以过滤出特定的报文，并根据应用ACL的业务模块的处理策略来允许或阻止该报文通过。通过ACL可以实现对网络中报文流的精确识别和控制，达到控制网络访问行为、防止网络攻击和提高网络带宽利用率的目的，从而切实保障网络环境的安全性和网络服务质量的可靠性。</p><p>&emsp;&emsp;ACL由一系列规则组成，通过将报文与ACL规则进行匹配，设备可以过滤出特定的报文，组成如下：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-9ACL结构图.png" alt="图5-9 ACL结构图"></p><ul><li><p>ACL编号：用于标识ACL，表明该ACL是数字型ACL。根据ACL规则功能的不同，ACL被划分为基本ACL、高级ACL、二层ACL和用户ACL这几种类型，每类ACL编号的取值范围不同。</p></li><li><p>规则：即描述报文匹配条件的判断语句。</p></li><li><p>规则编号：用于标识ACL规则。可以自行配置规则编号，也可以由系统自动分配。ACL<br>规则的编号范围是0～4294967294，所有规则均按照规则编号从小到大进行排序。所以，图1中的rule5排在首位，而规则编号最大的rule4294967294排在末位。系统按照规则编号从小到大的顺序，将规则依次与报文匹配，一旦匹配上一条规则即停止匹配。</p></li><li><p>动作：包括permit/deny两种动作，表示允许/拒绝。</p></li><li><p>匹配项：ACL定义了极其丰富的匹配项。除了图中的源地址和生效时间段，ACL还支持很多其他规则匹配项。例如，二层以太网帧头信息（如源MAC、目的MAC、以太帧协议类型）、三层报文信息（如目的地址、协议类型）以及四层报文信息（如TCP/UDP端口号）等。</p></li><li><p>ACL的匹配机制</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-10ACL匹配机制图.png" alt="图5-10 ACL匹配机制图"></p><ol><li>首先系统会查找设备上是否配置了ACL。</li><li>如果ACL不存在，则返回ACL匹配结果为：不匹配。</li><li>如果ACL存在，则查找设备是否配置了ACL规则。</li><li>如果匹配上了permit规则，则停止查找规则，并返回ACL匹配结果为：匹配（允许）。</li><li>如果匹配上了deny规则，则停止查找规则，并返回ACL匹配结果为：匹配（拒绝）。</li><li>如果未匹配上规则，则继续查找下一条规则，以此循环。如果一直查到最后一条规则，报文仍未匹配上，则返回ACL匹配结果为：不匹配。</li><li>如果规则不存在，则返回ACL匹配结果为：不匹配。</li><li>如果规则存在，则系统会从ACL中编号最小的规则开始查找。设备将报文与ACL规则进行匹配时，遵循“一旦命中即停止匹配”的机制</li></ol><p>&emsp;&emsp;从整个ACL匹配流程可以看出，报文与ACL规则匹配后，会产生两种匹配结果：“匹配”和“不匹配”。</p><ul><li>匹配（命中规则）：指存在ACL，且在ACL中查找到了符合匹配条件的规则。不论匹配的动作是“permit”还是“deny”，都称为“匹配”，而不是只是匹配上permit规则才算“匹配”。</li><li>不匹配（未命中规则）：指不存在ACL，或ACL中无规则，再或者在ACL中遍历了所有规则都没有找到符合匹配条件的规则。以上三种情况，都叫做“不匹配”。</li></ul></li></ul><h3 id="5-3具体配置"><a href="#5-3具体配置" class="headerlink" title="5.3具体配置"></a>5.3具体配置</h3><p>&emsp;&emsp;根据验证方案网络结构设计图（图4-2），S2A上配置了VLAN2、3、4、5，S2B上配置了VLAN6，S2C上配置了VLAN9。此外，S3上的配置包括VLAN7、VLAN-Interface2~7、DHCP协议、OSPF协议。防火墙配置包括NAT协议、OSPF协议以及控制内外部网络用户访问权限的ACL列表。R1、R2所含配置为OSPF协议。</p><h4 id="5-3-1接入层交换机S2A"><a href="#5-3-1接入层交换机S2A" class="headerlink" title="5.3.1接入层交换机S2A"></a>5.3.1接入层交换机S2A</h4><ul><li><p>VLAN配置指令</p><pre class="line-numbers language-none"><code class="language-none">* VLAN2、3、4、5[S2A] vlan 2[S2A-vlan2] port e0&#x2F;1 to e0&#x2F;4   #把e0&#x2F;1到e0&#x2F;4加入到vlan 2[S2A] vlan 3[S2A-vlan3] port e0&#x2F;5 to e0&#x2F;8   #把e0&#x2F;5到e0&#x2F;8加入到vlan 3[S2A] vlan 4[S2A-vlan4] port e0&#x2F;9 to e0&#x2F;12  #把e0&#x2F;9到e0&#x2F;12加入到vlan 4[S2A] vlan 5[S2A-vlan5] port e0&#x2F;13 to e0&#x2F;16  #把e0&#x2F;13到e0&#x2F;16加入到vlan 5* 检查配置情况[S2A] display vlan all* 配置trunk端口[S2A] interface e0&#x2F;20[S2A-e0&#x2F;20] port link-type trunk  #设置端口模式为trunk[S2A-e0&#x2F;20] port trunk permit vlan 2 3 4 6 7 8  #该端口可以通过vlan 2 3 4 6 7 8的数据* 检查配置情况[S2A] display interface e0&#x2F;20# 注意看allow-pass是否包含2&amp;3&amp;4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-11S2A配置结果.png" alt="图5-11 S2A配置结果"></p></li></ul><h4 id="5-3-2接入层交换机S2B"><a href="#5-3-2接入层交换机S2B" class="headerlink" title="5.3.2接入层交换机S2B"></a>5.3.2接入层交换机S2B</h4><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">* VLAN6[S2B] vlan 6[S2B-vlan6] port e0&#x2F;1 to e0&#x2F;4  #把e0&#x2F;1到e0&#x2F;4加入到vlan 6* 检查配置情况[S2B] display vlan 6* 配置trunk端口[S2B] interface e0&#x2F;10[S2B-e0&#x2F;10] port link-type trunk  #设置端口模式为trunk[S2B-e0&#x2F;10] port trunk permit vlan 2 3 4 6 7  #该端口可以通过vlan 2 3 4 6 7的数据* 检查配置情况[S2B] display interface e&#x2F;10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-12S2B配置结果.png" alt="图5-12 S2B配置结果"></p></li></ul><h4 id="5-3-3接入层交换机S2C"><a href="#5-3-3接入层交换机S2C" class="headerlink" title="5.3.3接入层交换机S2C"></a>5.3.3接入层交换机S2C</h4><ul><li><p>VLAN配置指令</p><pre class="line-numbers language-none"><code class="language-none">* VLAN9[S2C] vlan 9[S2C-vlan9] port e0&#x2F;1 to e0&#x2F;16  #把e0&#x2F;1到e0&#x2F;16加入到vlan 9* 检查配置情况[S2C] display vlan 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-13S2C配置结果.png" alt="图5-13 S2C配置结果"></p></li></ul><h4 id="5-3-4核心层交换机S3"><a href="#5-3-4核心层交换机S3" class="headerlink" title="5.3.4核心层交换机S3"></a>5.3.4核心层交换机S3</h4><ol><li><p>VLAN及interface-vlan配置</p><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">* VLAN2&#x2F;3&#x2F;4&#x2F;6&#x2F;7&#x2F;8及SVI配置[S3] vlan 2[S3-vlan2] interface vlan 2[S3-vlan-interface2] ip address 192.168.2.254 255.255.255.0# 或用24代表掩码位数[S3] vlan 3[S3-vlan3] interface vlan 3[S3-vlan-interface3] ip address 192.168.3.254 255.255.255.0[S3] vlan 4[S3-vlan4] interface vlan 4[S3-vlan-interface4] ip address 192.168.4.254 255.255.255.0[S3] vlan 6[S3-vlan6] interface vlan 6[S3-vlan-interface6] ip address 192.168.6.254 255.255.255.0[S4] vlan 7[S3-vlan7] port e1&#x2F;0&#x2F;9 to e1&#x2F;0&#x2F;12  #把e1&#x2F;0&#x2F;9到e1&#x2F;0&#x2F;12加入到vlan 7[S3-vlan7] interface vlan 7[S3-vlan-interface7] ip address 192.168.7.254 255.255.255.0* trunk端口配置[S3] interface e1&#x2F;0&#x2F;1  # 该端口连接S2A[S3-e1&#x2F;0&#x2F;1] port link-type trunk       #设置端口模式为trunk[S3-e1&#x2F;0&#x2F;1] port trunk permit vlan 2 3 4 6 7 #该端口可以通过vlan 2 3 4 6 7的数据[S3] interface e1&#x2F;0&#x2F;2 # 该端口连接S2B[S3-e1&#x2F;0&#x2F;2] port link-type trunk      #设置端口模式为trunk[S3-e1&#x2F;0&#x2F;2] port trunk permit vlan 2 3 4 6 7 #该端口可以通过vlan 2 3 4 6 7的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-14S3VLAN及Interface-vlan配置结果.png" alt="图5-14 S3 VLAN及Interface-vlan配置结果"></p></li></ul></li><li><p>DHCP协议配置</p><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">[S3] dhcp enble  #三层交换机开启dhcp服务* VLAN 2[S3] dhcp server ip-pool 2  #开辟地址池2[S3-ip-pool-2] network 192.168.2.0 24 #分配地址池中可分发的地址段[S3-ip-pool-2] gateway-list 192.168.2.254  #配置网关[S3-ip-pool-2] dns-list 192.168.7.2        #配置dns服务器ip* VLAN 3[S3] dhcp server ip-pool 3  #开辟地址池3[S3-ip-pool-3] network 192.168.3.0 24    #分配地址池中可分发的地址段[S3-ip-pool-3] gateway-list 192.168.3.254 #配置网关[S3-ip-pool-3] dns-list 192.168.7.2      #配置dns服务器ip* VLAN 4 [S3] dhcp server ip-pool 4  #开辟地址池4[S3-ip-pool-4] network 192.168.4.0 24  #分配地址池中可分发的地址段[S3-ip-pool-4] gateway-list 192.168.4.254   #配置网关[S3-ip-pool-4] dns-list 192.168.7.2  #配置dns服务器ip* VLAN 6[S3] dhcp server ip-pool 6  #开辟地址池6[S3-ip-pool-6] network 192.168.6.0 24  #分配地址池中可分发的地址段[S3-ip-pool-6] gateway-list 192.168.6.254  #配置网关[S3-ip-pool-6] dns-list 192.168.7.2 #配置dns服务器ip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-15S3DHCP协议配置结果.png" alt="图5-15 S3 DHCP协议配置结果"></p></li></ul></li><li><p>OSPF协议配置</p><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">[S3] vlan 10[S3-vlan10] port e1&#x2F;0&#x2F;20  #把e1&#x2F;0&#x2F;20加入到vlan 10[S3] ospf    #开启ospf服务[S3-ospf-1] area 0 [S3-ospf-1-area0.0.0.0] network 192.168.2.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.3.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.4.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.6.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.7.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.8.0 0.0.0.255[S3-ospf-1-area0.0.0.0] network 192.168.10.0 0.0.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><pre class="line-numbers language-none"><code class="language-none">ospf 1area 0.0.0.0network 192.168.2.0 0.0.0.255network 192.168.3.0 0.0.0.255network 192.168.4.0 0.0.0.255network 192.168.6.0 0.0.0.255network 192.168.7.0 0.0.0.255network 192.168.8.0 0.0.0.255network 192.168.10.0 0.0.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h4 id="5-3-5防火墙firewall"><a href="#5-3-5防火墙firewall" class="headerlink" title="5.3.5防火墙firewall"></a>5.3.5防火墙firewall</h4><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">&lt;firewall&gt; sys[firewall] int e0&#x2F;0  ##对内的接口[firewall-e0&#x2F;0] ip add 192.168.10.2 24   #配置e0&#x2F;0端口ip[firewall-e1&#x2F;0] int e1&#x2F;0  #对外的接口[firewall-e1&#x2F;0] ip add 202.99.160.2 28   #配置e1&#x2F;0端口ip[firewall] fire zone untrust[firewall-untrust] add int e1&#x2F;0     #将e1&#x2F;0端口加入到untrust域[firewall] quit [firewall] fire zone trust[firewall-trust] add int e0&#x2F;0        #将e0&#x2F;0端口加入到trust域####配置内部网段VLAN2、3、6的NAT转换，以及禁止VLAN4访问外部网络####配置ACL准则[firewall] acl number 2000 #该准则应用到e1&#x2F;0的出端口，允许以下网段访问外网[firewall-acl-2000] rule 0 permit source 192.168.2.0 0.0.0.255 [firewall-acl-2000] rule 1 permit source 192.168.3.0 0.0.0.255 [firewall-acl-2000] rule 2 permit source 192.168.6.0 0.0.0.255 [firewall] acl number 2002#该准则应用到e1&#x2F;0的出端口，拒绝该网段访问外网[firewall-acl-2002] rule 2 deny source 192.168.4.0 0.0.0.255 ####配置nat地址池[firewall] nat address-group 0 202.99.160.5 202.99.160.11####端口应用acl[firewall] interface Ethernet1&#x2F;0[firewall-e1&#x2F;0] nat outbound 2000 address-group 0   #应用nat协议和acl规则[firewall-e1&#x2F;0] firewall packet-filter 2002 outbound  #应用acl规则####配置OSPF协议[firewall] ospf 1 [firewall-ospf-1] area 0.0.0.0#0.0.0.255是反掩码，代表192.168.10.0网段的255台主机都包含在内[firewall-area-0.0.0.0] network 192.168.10.0 0.0.0.255[firewall-area-0.0.0.0] network 202.99.160.0 0.0.0.15[firewall] firewall packet-filter default permit#使能默认允许包通过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><pre class="line-numbers language-none"><code class="language-none">[H3C]dis cu#sysname H3C#防火墙系统名称#firewall packet-filter enable#开启包过滤功能firewall packet-filter default permit#使能默认允许包通过#insulate#undo connection-limit enableconnection-limit default denyconnection-limit default amount upper-limit 50 lower-limit 20#nat address-group 0 202.99.160.5 202.99.160.11#NAT转换的IP地址池#firewall statistic system enable#radius scheme systemserver-type extended#domain system#local-user hjd#本地用户hjd，用于通过ftp拷贝配置文件password simple hjd#密码设置为hjd#                                         traffic behavior sit-permit               #                                         acl number 2000                   #允许以下网段进行NAT转换rule 0 permit source 192.168.2.0 0.0.0.255rule 1 permit source 192.168.3.0 0.0.0.255rule 2 permit source 192.168.6.0 0.0.0.255acl number 2002                    #禁止该网段从防火墙出去到外部网络rule 0 deny source 192.168.4.0 0.0.0.255 #                                         interface Aux0                            async mode flow                          #                                         interface Ethernet0&#x2F;0                 #内网接口的IP地址ip address 192.168.10.2 255.255.255.0    #                                         interface Ethernet0&#x2F;1                     #                                         interface Ethernet0&#x2F;2                     #                                         interface Ethernet0&#x2F;3                     #                                         interface Ethernet1&#x2F;0                 #外网接口的IP地址ip address 202.99.160.2 255.255.255.240  firewall packet-filter 2002 outbound     #包过滤nat outbound 2000 address-group 0      #应用NAT协议#                                         interface Ethernet1&#x2F;1                     #                                         interface Ethernet1&#x2F;2                     #                                         interface NULL0                           #                                         firewall zone local                    #默认。local域优先级为100set priority 100                         #                                         firewall zone trust                    #默认。trust域优先级85（内网）add interface Ethernet0&#x2F;0                set priority 85                          #                                         firewall zone untrust                  #默认。untrust域优先级5（外网）add interface Ethernet1&#x2F;0                set priority 5                           #                                         firewall zone DMZ                   #默认。DMZ域，本实验没有用到add interface Ethernet0&#x2F;1                set priority 50                          #                                         firewall interzone local trust            #                                         firewall interzone local untrust          #                                         firewall interzone local DMZ              #                                         firewall interzone trust untrust          #                                         firewall interzone trust DMZ              #                                         firewall interzone DMZ untrust            #ospf 1                              #OSPF协议配置area 0.0.0.0                               network 192.168.10.0 0.0.0.255            network 202.99.160.0 0.0.0.15           #                                         FTP server enable                     #开启FTP服务器用于拷贝配置文件#    #以下均为默认配置，无需特别设置firewall defend ip-spoofing              firewall defend land                     firewall defend smurf                    firewall defend fraggle                  firewall defend winnuke                  firewall defend icmp-redirect            firewall defend icmp-unreachable         firewall defend source-route             firewall defend route-record             firewall defend tracert                  firewall defend ping-of-death            firewall defend tcp-flag                 firewall defend ip-fragment              firewall defend large-icmp               firewall defend teardrop                 firewall defend ip-sweep                 firewall defend port-scan                firewall defend arp-spoofing             firewall defend arp-reverse-query        firewall defend arp-flood                firewall defend frag-flood               firewall defend syn-flood enable         firewall defend udp-flood enable         firewall defend icmp-flood enable        #                                         user-interface con 0                      user-interface aux 0user-interface vty 0 4# return<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="5-3-6路由器R1"><a href="#5-3-6路由器R1" class="headerlink" title="5.3.6路由器R1"></a>5.3.6路由器R1</h4><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">[R1] ospf enable # 开启ospf服务[R1] display ospf[R1] interface e0  [R1-interface0] ospf enable area 0#允许区域0的OSPF协议[R1-interface0] ospf network-type broadcast#设置网络方式为广播报错：找不到配置选项（再执行一遍就行）[R1-interface0] ospf network-type broadcast[R1] interface s0[R1-serial0] ospf enable area 0[R1-serial0] ospf network-type broadcast报错：找不到配置选项（再执行一遍就行）[R1-serial0] ospf network-type broadcast[R1] display ospf routing# 查看OSPF配置信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-16-1R1OSPF协议配置结果.png" alt="图5-16-1 R1 OSPF协议配置结果"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-16-2R1配置文件截图.png" alt="图5-16-2 R1配置文件截图"></p></li></ul><h4 id="5-3-7路由器R2"><a href="#5-3-7路由器R2" class="headerlink" title="5.3.7路由器R2"></a>5.3.7路由器R2</h4><ul><li><p>配置指令</p><pre class="line-numbers language-none"><code class="language-none">[R2] ospf enable  # 开启ospf服务[R2-ospf] quit[R2] display ospf[R2] interface e0[R2-interface0] ospf enable area 0[R2-interface0] ospf network-type broadcast报错：找不到配置选项（再执行一遍就行）[R2-interface0] ospf network-type broadcast[R2] display ospf routing# 查看OSPF配置信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-17-1R2OSPF配置结果.png" alt="图5-17-1 R2 OSPF配置结果"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图5-17-2R2配置文件截图.png" alt="图5-17-2 R2 配置文件截图"></p></li></ul><h2 id="第六章-网络服务"><a href="#第六章-网络服务" class="headerlink" title="第六章 网络服务"></a>第六章 网络服务</h2><h3 id="6-1-FTP服务器"><a href="#6-1-FTP服务器" class="headerlink" title="6.1 FTP服务器"></a>6.1 FTP服务器</h3><h4 id="6-1-1-简介"><a href="#6-1-1-简介" class="headerlink" title="6.1.1 简介"></a>6.1.1 简介</h4><p>&emsp;&emsp;FTP服务器^[17]^（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务，FTP是File Transfer Protocol(文件传输协议)，顾名思义，就是专门用来传输文件的协议，简单地说，支持FTP协议的服务器就是FTP服务器。</p><p>&emsp;&emsp;FTP是用来在两台计算机之间传输文件，是Internet中应用非常广泛的服务之一，它可根据实际需要设置各用户的使用权限，同时还具有跨平台的特性，即在UNIX、Linux和Windows等操作系统中都可实现FTP客户端和服务器，相互之间可跨平台进行文件的传输。因此，FTP服务是网络中经常采用的资源共享方式之一，FTP协议有PORT和PASV两种工作模式，即主动模式和被动模式。</p><p>&emsp;&emsp;FTP（File Transfer Protocol）即文件传输协议，是一种基于TCP的协议，采用客户/服务器模式，通过FTP协议，用户可以在FTP服务器中进行文件的上传或下载等操作，虽然现在通过HTTP协议下载的站点有很多，但是由于FTP协议可以很好地控制用户数量和宽带的分配，快速方便地上传、下载文件，因此FTP已成为网络中文件上传和下载的首选服务器，同时，它也是一个应用程序，用户可以通过它把自己的计算机与世界各地所有运行FTP协议的服务器相连，访问服务器上的大量程序和信息。</p><p>FTP服务的功能是实现完整文件的异地传输，特点如下：</p><ol><li><p>FTP使用两个平行连接：控制连接和数据连接。控制连接在两主机间传送控制命令，如用户身份、口令、改变目录命令等。数据连接只用于传送数据。</p></li><li><p>在一个会话期间，FTP服务器必须维持用户状态，也就是说，和某一个用户的控制连接不能断开。另外，当用户在目录树中活动时，服务器必须追踪用户的当前目录，这样，FTP就限制了并发用户数量。</p></li><li><p>FTP支持文件沿任意方向传输。当用户与一远程计算机建立连接后，用户可以获得一个远程文件也可以将一本地文件传输至远程机器。</p></li></ol><h4 id="6-1-2-配置方法"><a href="#6-1-2-配置方法" class="headerlink" title="6.1.2 配置方法"></a>6.1.2 配置方法</h4><ol><li><p>安装IIS(Internet Information Services)</p><ol><li><p>计算机—-控制面板—-程序—-打开或关闭Windows功能</p></li><li><p>将Internet信息服务下的FTP服务器与Web管理工具(IIS)全部勾选，等它自动安装完成</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-1安装IIS.png" alt="图6-1 安装IIS"></p></li></ol></li><li><p>网站搭建</p><ol><li><p>点击计算机右键—-管理—-服务和应用程序，点击Internet信息服务（IIS）管理</p></li><li><p>网站右键—-添加FTP站点，输入名称并添加一条物理路径（新建一个文件夹即可）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-2-1网站搭建.png" alt="图6-2-1 网站搭建"></p></li><li><p>下一步，默认端口位21，IP地址填写本机地址如192.168.7.1，勾选无SSL。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-2-2网站搭建.png" alt="图6-2-2 网站搭建"></p></li><li><p>下一步，身份验证选择匿名和基本，选择所有用户可访问，权限勾选读取和写入。创建完成。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-2-3网站搭建.png" alt="图6-2-3 网站搭建"></p></li></ol></li><li><p>服务测试</p><p>打开文件资源管理器，输入ftp://192.168.7.1，可以进入为FTP设置的文件夹。</p></li></ol><h3 id="6-2-E-mail服务器"><a href="#6-2-E-mail服务器" class="headerlink" title="6.2 E-mail服务器"></a>6.2 E-mail服务器</h3><h4 id="6-2-1-简介"><a href="#6-2-1-简介" class="headerlink" title="6.2.1 简介"></a>6.2.1 简介</h4><p>&emsp;&emsp;邮件服务器^[18]^是一种用来负责电子邮件收发管理的设备。邮件服务器构成了电子邮件系统的核心。每个收信人都有一个位于某个邮件服务器上的邮箱(mailbox)。Bob的邮箱用于管理和维护已经发送给他的邮件消息。一个邮件消息的典型旅程是从发信人的用户代理开始，邮件发信人的邮件服务器，中转到收信人的邮件服务器，然后投递到收信人的邮箱中。当Bob想查看自己的邮箱中的邮件消息时，存放该邮箱的邮件服务器将以他提供的用户名和口令认证他。Alice的邮件服务器还得处理Bob的邮件服务器出故障的情况。如果Alice的邮件服务器无法把邮件消息立即递送到Bob的邮件服务器，Alice的服务器就把它们存放在消息队列(message queue)中，以后再尝试递送。这种尝试通常每30分钟左右执行一次：要是过了若干天仍未尝试成功，该服务器就把这个消息从消息队列中去除掉，同时以另一个邮件消息通知发信人(即Alice)。</p><p>&emsp;&emsp;简单邮件传送协议(SMTP)是因特网电子邮件系统首要的应用层协议。它使用由TCP提供的可靠的数据传输服务把邮件消息从发信人的邮件服务器传送到收信人的邮件服务器。跟大多数应用层协议一样，SMTP也存在两个端：在发信人的邮件服务器上执行的客户端和在收信人的邮件服务器上执行的服务器端。SMTP的客户端和服务器端同时运行在每个邮件服务器上。当一个邮件服务器在向其他邮件服务器发送邮件消息时，它是作为SMTP客户在运行。当一个邮件服务器从其他邮件服务器接收邮件消息时，它是作为SMTP服务器在运行。</p><h4 id="6-2-2-配置方法"><a href="#6-2-2-配置方法" class="headerlink" title="6.2.2 配置方法"></a>6.2.2 配置方法</h4><p>我们采用Winmail 邮件服务器+ Foxmail客户端来搭建局域网邮件服务器。</p><ol><li><p>准备两台电脑通过交换机相连，在其中一台电脑上安装Winmail服务器，并在两台电脑上均安装好Foxmail客户端。</p></li><li><p>运行Winmail<br>server，然后打开Winmail管理客户端，管理用户的用户名和密码随意设置。</p><ul><li><p>创建域名</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-3-1邮件服务器配置-创建域名.png" alt="图6-3-1 邮件服务器配置-创建域名"></p></li><li><p>创建用户名和密码。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-3-2邮件服务器配置-创建用户.png" alt="图6-3-2 邮件服务器配置-创建用户"></p></li></ul></li><li><p>在两台电脑的Foxmail上分别创建上一步定义好的用户。打开Foxmail，选择其它邮箱。按下图配置。此时需要保证该电脑已经与邮件服务器所在电脑处于同一局域网下。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-4Foxmail客户端配置.png" alt="图6-4 Foxmail客户端配置"></p></li><li><p>发邮件测试。</p></li></ol><h3 id="6-3-Web服务器"><a href="#6-3-Web服务器" class="headerlink" title="6.3 Web服务器"></a>6.3 Web服务器</h3><h4 id="6-3-1-简介"><a href="#6-3-1-简介" class="headerlink" title="6.3.1 简介"></a>6.3.1 简介</h4><p>&emsp;&emsp;WEB服务器^[19]^也称为WWW(WORLD WIDE WEB)服务器，主要功能是提供网上信息浏览服务。WWW 是 Internet 的多媒体信息查询工具，是 Internet 上近年才发展起来的服务，也是发展最快和目前用的最广泛的服务。正是因为有了WWW工具，才使得近年来 Internet 迅速发展，且用户数量飞速增长。</p><p>&emsp;Web服务器是指驻留于因特网上某种类型计算机的程序。当Web浏览器（客户端）连到服务器上并请求文件时，服务器将处理该请求并将文件反馈到该浏览器上，附带的信息会告诉浏览器如何查看该文件（即文件类型）。服务器使用HTTP（超文本传输协议）与客户机浏览器进行信息交流，这就是人们常把它们称为HTTP服务器的原因。</p><p>&emsp;Web服务器不仅能够存储信息，还能在用户通过Web浏览器提供的信息的基础上运行脚本和程序。</p><p>&emsp;Web服务器的工作原理并不复杂，一般可分成如下4个步骤：连接过程、请求过程、应答过程以及关闭连接。下面对这4个步骤作一简单的介绍。连接过程就是Web服务器和其浏览器之间所建立起来的一种连接。查看连接过程是否实现，用户可以找到和打开socket这个虚拟文件，这个文件的建立意味着连接过程这一步骤已经成功建立。请求过程就是Web的浏览器运用socket这个文件向其服务器而提出各种请求。应答过程就是运用HTTP协议把在请求过程中所提出来的请求传输到Web的服务器，进而实施任务处理，然后运用HTTP协议把任务处理的结果传输到Web的浏览器，同时在Web的浏览器上面展示上述所请求之界面。关闭连接就是当上一个步骤—应答过程完成以后，Web服务器和其浏览器之间断开连接之过程。Web服务器上述4个步骤环环相扣、紧密相联，逻辑性比较强，可以支持多个进程、多个线程以及多个进程与多个线程相混合的技术。</p><h4 id="6-3-2-配置方法"><a href="#6-3-2-配置方法" class="headerlink" title="6.3.2 配置方法"></a>6.3.2 配置方法</h4><p>我们采用NodeJs + Git + Hexo搭建了一个简单的静态网页。</p><ol><li><p>安装NodeJs和Git</p></li><li><p>安装Hexo</p><ol><li><p>找个地方右键`Git Bash Here`，后面的指令操作都是使用`Git Bash`</p></li><li><p>配置npm的国内镜像源：</p><p>npm install -g cnpm —registry=<a href="https://registry.npm.taobao.or">https://registry.npm.taobao.or</a></p></li><li><p>配置完成后，输入npm info hexo，如果配置成功，dist会显示</p><p>.tarball: <a href="https://registry.nlark.com/hexo/download/hexo-5.4.0.tgz">https://registry.nlark.com/hexo/download/hexo-5.4.0.tgz</a></p></li><li><p>通过npm安装Hexo（-g是指定全局安装，之后可以在任意位置使用hexo指令）</p><p>npm install -g hexo</p></li><li><p>然后输入hexo -v查看是否安装成功。若出现版本号，则至此已安装完成</p></li><li><p>接下来初始化我们的静态网站，进入到存放博客文件的目录下</p><p>hexo init MyBlog # 初始化创建，将在当前目录下新建MyBlog文件夹</p><p>cd MyBlog # 进入这个文件夹，这个文件夹下面将存放所有相关文件</p><p>npm install # 进一步安装hexo所需文件</p><ol><li><p>大概效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-5Hexo安装.png" alt="图6-5 Hexo安装"></p></li><li><p>指令执行完成后，指定文件夹MyBlog目录下有：</p><p>* node_modules/：Hexo的依赖包</p><p>* scaffolds/：生成文章的一些模板</p><p>* source/：用来存放写的文章</p><p>* themes/：主题</p><p>* _config.yml：博客的配置文件</p><p>*<br>其它：.github/、.gitignore、_config.landscape.yml、package.json、package-lock.json</p></li></ol></li><li><p>打开本地服务器查看博客</p><p>hexo generate # 生成静态网页</p><p>hexo server # 打开本地服务器(默认是4000端口)</p><p>正常情况下应该会出现下图：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图6-6安装成功.png" alt="图6-6 安装成功"></p></li></ol></li></ol><h3 id="6-4-DNS服务器"><a href="#6-4-DNS服务器" class="headerlink" title="6.4 DNS服务器"></a>6.4 DNS服务器</h3><p>&emsp;由于我们发现Windows自带的IIS(Internet Information Services)无法配置DNS服务器，且在因为安装Windows Server<br>2016 需要更换实验室电脑系统，故采用Ubuntu-21.04-desktop和DNS服务器软件BIND9（Berkeley Internet Name Domain v9）进行DNS的服务搭建。由于搭建步骤较为繁琐，故没有写在报告里，所有步骤均已整理至博客中^[20]^。</p><h2 id="第七章-验证方案"><a href="#第七章-验证方案" class="headerlink" title="第七章 验证方案"></a>第七章 验证方案</h2><ol><li><p>DHCP协议配置测试（VLAN2-4）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-1DHCP协议配置测试结果图.png" alt="图7-1 DHCP协议配置测试结果图"></p></li><li><p>内网VLAN内通信测试（以VLAN2为例）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-2VLAN内通信测试.png" alt="图7-2 VLAN内通信测试"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-3-1VLAN间通信测试（VLAN2toVLAN3）.png" alt="图7-3-1 VLAN间通信测试（VLAN2 to VLAN3）"></p></li><li><p>内网VLAN间通信测试</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-3-2VLAN间通信测试（VLAN2toVLAN6）.png" alt="图7-3-2 VLAN间通信测试（VLAN2 to VLAN6）"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-3-3VLAN间通信测试（与VLAN5隔离）.png" alt="图7-3-3 VLAN间通信测试（与VLAN5隔离）"></p></li><li><p>内外部网络通信测试</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-4-1内外部网络通信（VLAN2toVLAN9）.png" alt="图7-4-1 内外部网络通信（VLAN2 to VLAN9）"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-4-2内外部网络通信（VLAN9toVLAN2）.png" alt="图7-4-2 内外部网络通信（VLAN9 to VLAN2）"></p></li><li><p>网络服务测试</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-5FTP服务测试.png" alt="图7-5 FTP服务测试"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-6E-mail服务测试（收发邮件）.png" alt="图7-6 E-mail服务测试（收发邮件）"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-7-1DNS解析测试.png" alt="图7-7-1 DNS解析测试"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-7-2DNS+Web服务测试.png" alt="图7-7-2 DNS + Web服务测试"></p></li><li><p>NAT转换测试</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图7-8NAT转换抓包测试.png" alt="图7-8 NAT转换抓包测试"></p></li></ol><h2 id="第八章-改进"><a href="#第八章-改进" class="headerlink" title="第八章 改进"></a>第八章 改进</h2><p>&emsp;出于模拟真实网络拓扑结构的考虑，我们针对原有结构和功能做了些许改动。由于时间有限，我们简单地将内网中的FTP服务器开放给外部网络^[23]^，并利用IIS(Internet Information Services)在外部网络搭建FTP、Web服务器以供内网访问测试。测试网络拓扑如图8-1所示。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图8-1改进网络结构部分.png" alt="图8-1 改进网络结构部分"></p><p>本次改进涉及设备有：防火墙、外部网络服务器。</p><p>具体配置包括：</p><ol><li><p>将内网FTP服务器地址192.168.7.1:21经过NAT转换为公网IP地址202.99.160.12:21。</p></li><li><p>在外部网络新增两个服务：FTP、Web服务器，IP地址为202.99.160.3。</p><p>防火墙配置指令：</p><pre class="line-numbers language-none"><code class="language-none">[firewall] acl number 2003[firewall-acl-2003] rule 0 permit source 192.168.7.1 0#仅允许一台主机进行转换[firewall] nat address-group 1 202.99.160.12 202.99.160.12#NAT转换地址池[firewall] int e1&#x2F;0#进入WAN0口（外网接口）[firewall-e1&#x2F;0] nat server protocol tcp global 202.99.160.12 ftp inside 192.168.7.1 ftp[firewall-e1&#x2F;0] nat outbound 2003 address-group 1#应用NAT转换的ACL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>防火墙相关配置结果：（仅包含相关内容）</p><pre class="line-numbers language-none"><code class="language-none">#sysname H3C#firewall packet-filter enable#使能包过滤功能firewall packet-filter default permit#默认允许包通过#nat address-group 0 202.99.160.5 202.99.160.11#VLAN236网段的公网IP地址池nat address-group 1 202.99.160.12 202.99.160.12#内网服务器的公网IP地址池#acl number 2000                           rule 0 permit source 192.168.2.0 0.0.0.255rule 1 permit source 192.168.3.0 0.0.0.255rule 2 permit source 192.168.6.0 0.0.0.255acl number 2002                           rule 0 deny source 192.168.4.0 0.0.0.255 acl number 2003                           #内网服务器NAT转换相关rule 0 permit source 192.168.7.1 0       #                                         interface Ethernet0&#x2F;0                     ip address 192.168.10.2 255.255.255.0    #interface Ethernet1&#x2F;0  ip address 202.99.160.2 255.255.255.240   firewall packet-filter 2002 outbound  #应用ACL2002规则进行包过滤 nat outbound 2003 address-group 1#内网服务器NAT转换 nat outbound 2000 address-group 0#内网VLAN236网段NAT转换 #内网FTP服务器的NAT端口映射 nat server protocol tcp global 202.99.160.12 ftp inside 192.168.7.1 ftp#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置结果测试：</p><ul><li><p>外部网络用户202.99.160.4通过公网IP地址202.99.160.12访问内网FTP服务器</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图8-2外网用户访问内网FTP服务器.png" alt="图8-2 外网用户访问内网FTP服务器"></p></li><li><p>内网用户访问外网FTP服务器</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图8-3内网用户访问外网FTP服务器.png" alt="图8-3 内网用户访问外网FTP服务器"></p></li><li><p>内网用户访问外网Web服务器</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/LocalNetworkBuilding/图8-4内网用户访问外网Web服务器.png" alt="图8-4 内网用户访问外网Web服务器"></p></li></ul></li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 赵文忠.试论校园局域网组网技术方案[J].计算机光盘软件与应用,2012,15(23):91+104.<br>[2] 潘江瀚.校园网组网架构的比较与分析[J].计算机光盘软件与应用,2012(09):99-100.<br>[3] 杨朋.校园无线网组网技术及应用的探讨[J].数字通信世界,2019(01):66.<br>[4] 张圣,陈伟.基于WLAN技术的无线校园网组网研究[J].信息技术,2005(07):17-20.<br>[5] 《局域网组建、管理与维护（第3版）》刘永华，张秀洁主编<br>[6] <a href="https://product.pconline.com.cn/itbk/wlbg/network/1107/2474289.html">《PConline-交换机是什么》</a><br>[7] <a href="https://product.pconline.com.cn/itbk/wlbg/network/1204/2749969.html">《PConline-二层交换机是什么》</a><br>[8] <a href="https://product.pconline.com.cn/itbk/wlbg/network/1204/2750118.html">《PConline-三层交换机是什么》</a><br>[9] <a href="https://www.zhihu.com/topic/19561099/intro">《PConline-路由器》</a><br>[10] <a href="https://baike.baidu.com/item/%E9%98%B2%E7%81%AB%E5%A2%99/52767#2">《百度百科-防火墙》</a><br>[11] <a href="https://blog.csdn.net/T146lLa128XX0x/article/details/95688710">《CSDN-VLAN工作原理》</a><br>[12] <a href="https://docs.oracle.com/cd/E24847_01/html/819-7058/dhcp-overview-3.html">《ORACLE系统管理指南-DHCP的工作原理》</a><br>[13] <a href="https://blog.csdn.net/Breeze_CAT/article/details/79704903">《CSDN-OSPF原理及配置》</a><br>[14] <a href="https://www.cnblogs.com/derrick/p/4052401.html">《CSDN-NAT技术基本原理与应用》</a><br>[15] <a href="https://www.cnblogs.com/gopark/p/8430916.html">《博客园-DNS原理及其解析过程》</a><br>[16] <a href="https://www.sohu.com/a/446073085_120888633">《搜狐-5分钟了解ACL基本原理和四大分类》</a><br>[17] <a href="https://baike.baidu.com/item/FTP%E6%9C%8D%E5%8A%A1%E5%99%A8/1926327?fr=aladdin">《百度百科-FTP服务器》</a><br>[18] <a href="https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8">《百度百科-邮件服务器》</a><br>[19] <a href="https://baike.baidu.com/item/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8">《百度百科-WEB服务器》</a><br>[20] <a href="https://321hjd.github.io/yyds/c9587404.html">《使用Ubuntu搭建内网DNS服务》</a><br>[21] 《计算机网络课件》<br>[22] 《IP网络基础知识学习之笑傲江湖新篇》<br>[23] <a href="https://zhiliao.h3c.com/questions/dispcont/116359">《知了社区-H3C SECPATH F100-C60-WiNet防火墙如何进行端口映射》</a></p>]]></content>
      
      
      <categories>
          
          <category> 课程实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 局域网组建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Ubuntu搭建内网DNS服务</title>
      <link href="/yyds/c9587404.html"/>
      <url>/yyds/c9587404.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><blockquote><p>由于课程局域网组网实验的要求，需要使用到DNS服务，而网上的教程又较为零散，尝试了一些之后磕磕绊绊也测试成功了，但由于后续还需要在实验室用设备测试，故记录在这里。</p></blockquote><h2 id="二、环境及IP说明"><a href="#二、环境及IP说明" class="headerlink" title="二、环境及IP说明"></a>二、环境及IP说明</h2><ul><li><p>系统环境：Ubuntu-21.04-desktop</p></li><li><p>所用服务器软件：BIND9（Berkeley Internet Name Domain v9）</p></li><li><p>IP说明</p><blockquote><p>此处都使用的同一台电脑。</p><ul><li>也可以使用多台电脑，但是都必须在同一局域网内。如DNS服务器为192.168.43.28，客户端为192.168.2.1，Web服务器为192.168.3.1。几台机器需要通过交换机或路由器相连，并配置相应的路由/VLAN/DNS server。</li><li>也可以都在同一网段下，如使用手机热点让几台电脑处于同一局域网下。</li></ul></blockquote><ul><li>DNS服务器：192.168.43.28</li><li>客户端（需要访问域名服务器，将域名解析为Web服务器对应IP地址）：192.168.43.28</li><li>Web服务器：192.168.43.28</li></ul></li></ul><h2 id="三、配置内网DNS服务"><a href="#三、配置内网DNS服务" class="headerlink" title="三、配置内网DNS服务"></a>三、配置内网DNS服务</h2><h3 id="3-1-安装-BIND9"><a href="#3-1-安装-BIND9" class="headerlink" title="3.1 安装 BIND9"></a>3.1 安装 BIND9</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> bind9 bind9utils bind9-doc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2-配置-BIND9-的IPv4-模式"><a href="#3-2-配置-BIND9-的IPv4-模式" class="headerlink" title="3.2 配置 BIND9 的IPv4 模式"></a>3.2 配置 BIND9 的IPv4 模式</h3><ol><li><p>只需要修改 BIND9 的 systemd unit file即可（<code>/etc/systemd/system/bind9.service</code>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl edit --full bind9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者直接用vim修改文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/systemd/system/bind9.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在文件的<code>ExecStart</code>行最后加上<code>-4</code>即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">[</span>service<span class="token punctuation">]</span><span class="token punctuation">..</span>.<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/sbin/named -f <span class="token variable">$OPTIONS</span> -4<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重新启动 BIND9 以重新载入 systemd 的 unit file</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart bind9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="3-3-修改配置文件"><a href="#3-3-修改配置文件" class="headerlink" title="3.3 修改配置文件"></a>3.3 修改配置文件</h3><ol><li><p><code>/etc/bind/named.conf.options</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">acl <span class="token string">"trusted"</span> <span class="token punctuation">&#123;</span>        <span class="token number">192.168</span>.43.0/24<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">..</span>.options <span class="token punctuation">&#123;</span>        recursion <span class="token function">yes</span><span class="token punctuation">;</span>        allow-recursion <span class="token punctuation">&#123;</span> trusted<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        listen-on <span class="token punctuation">&#123;</span> <span class="token number">192.168</span>.43.28<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        allow-transfer <span class="token punctuation">&#123;</span> none<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">..</span>.        forwarders <span class="token punctuation">&#123;</span>                <span class="token number">114.114</span>.114.114<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">..</span>.<span class="token punctuation">&#125;</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>字段解析：</p><ul><li><code>acl</code>：用于控制哪些客户端可以连接到这个DNS服务器；此处表示允许该网段的所有主机</li><li><code>recursion</code>：yes表示允许递归DNS查询</li><li><code>allow-recursion</code>：允许递归查询的客户端范围，此处设置为在<code>acl</code>中声明的<code>trusted</code>部分</li><li><code>listen-on</code>：表示DNS服务器监听此地址的53端口，此处为本地IP（即DNS服务器IP）</li><li><code>allow-transfer</code>：none表示不允许其他DNS服务器从本DNS服务器中查询</li><li><code>forwarders</code>：这是BIND9提供的DNS查询转发机制，当本地DNS查询不到时，查询会转发到<code>forwarders</code>上，并将查询结果缓存到本地DNS上</li></ul></li><li><p><code>/etc/bind/named.conf.local</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// Do any <span class="token builtin class-name">local</span> configuration here// 正向解析zone <span class="token string">"test.com"</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>        <span class="token function">file</span> <span class="token string">"/etc/bind/db.test.com"</span><span class="token punctuation">;</span>        //正向解析文件所在路径<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>//反向解析zone <span class="token string">"43.168.192.in-addr.arpa"</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>        <span class="token function">file</span> <span class="token string">"/etc/bind/db.192.168.43"</span><span class="token punctuation">;</span>//反向解析文件所在路径<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新增域名解析文件：<code>/etc/bind/db.test.com</code></p><ul><li><p>可以直接将<code>db.local</code>的内容拷贝到<code>db.test.com</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/bind/db.local /etc/bind/db.test.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后再修改文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">;</span><span class="token punctuation">;</span> BIND data <span class="token function">file</span> <span class="token keyword">for</span> test.com loopback interface<span class="token punctuation">;</span><span class="token variable">$TTL</span>    <span class="token number">604800</span>@       IN      SOA     test.com. root.test.com. <span class="token punctuation">(</span>                              <span class="token number">1</span>         <span class="token punctuation">;</span> Serial                         <span class="token number">604800</span>         <span class="token punctuation">;</span> Refresh                          <span class="token number">86400</span>         <span class="token punctuation">;</span> Retry                        <span class="token number">2419200</span>         <span class="token punctuation">;</span> Expire                         <span class="token number">604800</span> <span class="token punctuation">)</span>       <span class="token punctuation">;</span> Negative Cache TTL<span class="token punctuation">;</span>@       IN      NS      test.com.@       IN      A       <span class="token number">192.168</span>.43.28*.test.com.     <span class="token number">14400</span>   IN      A       <span class="token number">192.168</span>.43.28<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>需要注意的是：<ul><li>不要漏掉域名后的点</li><li>*为通配符，表示任意字母.test.com都被解析到192.168.43.28这个IP</li></ul></li></ul></li></ul></li><li><p>新增IP地址反向解析文件<code>/etc/bind/db.192.168.43</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">;</span><span class="token punctuation">;</span> BIND data <span class="token function">file</span> <span class="token keyword">for</span> dev domains <span class="token punctuation">;</span><span class="token variable">$TTL</span>    <span class="token number">604800</span>@       IN      SOA     dev. root.dev. <span class="token punctuation">(</span>                              <span class="token number">1</span>         <span class="token punctuation">;</span> Serial                         <span class="token number">604800</span>         <span class="token punctuation">;</span> Refresh                          <span class="token number">86400</span>         <span class="token punctuation">;</span> Retry                        <span class="token number">2419200</span>         <span class="token punctuation">;</span> Expire                         <span class="token number">604800</span> <span class="token punctuation">)</span>       <span class="token punctuation">;</span> Negative Cache TTL<span class="token punctuation">;</span> NS Records@       IN      NS      test.com.<span class="token punctuation">;</span> PTR Records<span class="token number">28</span>     IN      PTR     test.com.<span class="token punctuation">;</span> <span class="token number">192.168</span>.43.28<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="3-4-检查语法并重启-BIND9-服务"><a href="#3-4-检查语法并重启-BIND9-服务" class="headerlink" title="3.4 检查语法并重启 BIND9 服务"></a>3.4 检查语法并重启 BIND9 服务</h3><ul><li><p>检查<code>/etc/bind/name.conf.*</code>文件，没有任何输出代表没有错误，若有错误则根据提示修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> named-checkconf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若提示没有检查工具，根据提示安装即可</p></li><li><p>检查域名解析文件<code>etc/bind/db.test.com</code>和<code>etc/bind/db.192.168.43</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> named-checkzone test.com /etc/bind/db.test.com<span class="token function">sudo</span> named-checkzone <span class="token number">43.168</span>.192.in-addr.arpa /etc/bind/db.192.168.43<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>都提示如下则没问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zone test.com/IN: loaded serial <span class="token number">1</span>OKzone <span class="token number">43.168</span>.192.in-addr.arpa/IN: loaded serial <span class="token number">1</span>OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重启 BIND9 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> bind9 restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改本机的 name server 配置（若客户端为windows系统，则只需要手动设置DNS服务器IP即可</p><ul><li><p>临时修改方法，直接修改<code>/etc/resolv.conf</code>，将其中的nameserver修改为上面配置好的DNS服务器IP</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.nameserver <span class="token number">192.168</span>.43.28<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>永久修改方法</p><ul><li><p>修改<code>/etc/systemd/resolved.conf</code>文件，在<code>DNS=</code>后加上需要加入的DNS服务器IP地址即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token assign-left variable">DNS</span><span class="token operator">=</span><span class="token number">192.168</span>.43.28 <span class="token number">114.114</span>.114.114<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>再在终端执行以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart systemd-resolved<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> systemd-resolved<span class="token function">sudo</span> <span class="token function">mv</span> /etc/resolv.conf /etc/resolv.conf.bak<span class="token function">sudo</span> <span class="token function">ln</span> -s /run/systemd/resolve/resolv.conf /etc/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>之后就可以在<code>etc/resolv.conf</code>看到刚刚添加的DNS nameserver信息了</p></li></ul></li></ul></li></ul><h3 id="3-5-测试"><a href="#3-5-测试" class="headerlink" title="3.5 测试"></a>3.5 测试</h3><ol><li><p>通过nslookup指令测试</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 正向解析</span>$ <span class="token function">nslookup</span> test.comServer:<span class="token number">192.168</span>.43.28Address:<span class="token number">192.168</span>.43.28<span class="token comment">#53</span>Name:test.comAddress: <span class="token number">192.168</span>.43.28$ <span class="token function">nslookup</span> baidu.comServer:<span class="token number">192.168</span>.43.28Address:<span class="token number">192.168</span>.43.28<span class="token comment">#53</span>Non-authoritative answer:Name:baidu.comAddress: <span class="token number">220.181</span>.38.251Name:baidu.comAddress: <span class="token number">220.181</span>.38.148<span class="token comment"># 反向解析</span>$ <span class="token function">nslookup</span> <span class="token number">192.168</span>.43.28<span class="token number">28.43</span>.168.192.in-addr.arpaname <span class="token operator">=</span> test.com.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用网页测试（基于Node.js和Hexo搭建的静态网页，开启在4000端口，若端口为80端口，则域名不需要加端口）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/study/computerNetwork/%E7%BD%91%E9%A1%B5%E6%B5%8B%E8%AF%95.png" alt="网页测试"></p></li></ol><h2 id="四、参考链接"><a href="#四、参考链接" class="headerlink" title="四、参考链接"></a>四、参考链接</h2><ul><li><a href="https://www.jianshu.com/p/409cd51619d0">如何在 Ubuntu 16.04 服务器上配置内网 DNS 服务</a></li><li><a href="https://blog.csdn.net/booklijian/article/details/116491288">Ubuntu20.04 系统中设置dns并生效</a></li><li><a href="https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-16-04">How To Configure BIND as a Private Network DNS Server on Ubuntu 16.04</a></li><li><a href="http://cloudnil.com/2014/07/14/ubuntu-dns/#4-%E4%BF%AE%E6%94%B9%E6%9C%AC%E6%9C%BA%E9%85%8D%E7%BD%AE">Ubuntu DNS服务器配置</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS搭建 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信-保研复习</title>
      <link href="/yyds/492c65b9.html"/>
      <url>/yyds/492c65b9.html</url>
      
        <content type="html"><![CDATA[<h2 id="通信原理"><a href="#通信原理" class="headerlink" title="通信原理"></a>通信原理</h2><h3 id="一、绪论"><a href="#一、绪论" class="headerlink" title="一、绪论"></a>一、绪论</h3><ol><li><p>通信系统模型（香农模型）</p><blockquote><p>信源 -&gt; 编码 -&gt; 信道 -&gt; 解码 -&gt; 信宿 </p></blockquote></li></ol><ol><li><p>为什么要将低频信号调制到高频进行传输？</p><blockquote><p>（1）基带信号频率低，波长长，当天线的长度为无线电信号波长的 1/4 时，天线的发射和接收转换效率最高，如果不调制到高频，天线需要做得很长<br>（2）高频要比低频传送的成本低效率高（还是天线的原因）。利用高频的不同的载波，容易实现多路通信<br>（3）频率越高，可用带宽越宽，即高频频率资源更丰富（如信号频率为 2 MHz，则可用带宽不超过 ±2 MHz，而信号频率 2 GHz，则可用带宽不超过 ±2 GHz）</p></blockquote></li></ol><h3 id="二、确定信号分析"><a href="#二、确定信号分析" class="headerlink" title="二、确定信号分析"></a>二、确定信号分析</h3><ol><li><p>什么是基带信号？什么是带通信号？</p><blockquote><p>基带信号指信号的能量或功率集中在零频附近。带通信号指信号的能量或功率主要集中在某个载波频率fc附近</p></blockquote></li><li><p>绝对带宽、主脉带宽、3dB带宽，等效矩形带宽</p></li></ol><blockquote><p>绝对带宽：针对理想滤波器，指信号只存在于<code>[w1,w2]</code>之间</p><p>主脉带宽：中心频率到第一个过零点的频带宽度，包含信号的绝大多数能量和功率</p><p>3dB带宽：系统的功率谱密度从最大值衰减到一半时候的带宽，即频响特性从最大值衰减到原来的$\frac{1}{\sqrt{2}}$</p><p>等效矩形带宽：频谱图面积除以频响特性峰值除以2，即$W=\frac{\int_{-\infty}^{+\infty}P_x(f)df}{2P_x(0)}$</p></blockquote><ol><li>复信号存在吗？</li></ol><blockquote><p>（1）实信号的频率一定是正的，负频率实际是因为欧拉公式中有一正一负的频率与之对应，并不是实际频域上的频率<br>（2）复信号是不存在的，它是对带通信号的一种记法</p></blockquote><ol><li>波形无失真和复包络无失真</li></ol><blockquote><p>波形无失真要求幅频特性为常数，相时延为常数。即要求通过系统的所有频率分量经过相同的时延。时域表现为波形无变化，只有幅度变化和时延。</p><p>复包络无失真要求幅频特性为常数，群时延特性为常数</p></blockquote><ol><li>滤波器的可实现性取决于？</li></ol><blockquote><p>一方面取决于时域拖尾衰减的快慢，拖尾衰减越快，实现越容易；另一方面取决于实际实现误差的大小，同一滤波器在不同情况下的可实现性不同</p></blockquote><h3 id="三、随机过程"><a href="#三、随机过程" class="headerlink" title="三、随机过程"></a>三、随机过程</h3><ol><li><p>广义平稳随机过程的定义</p><blockquote><p>（1）数学期望、方差与时间无关<br>（2）自相关函数仅与时间差有关</p></blockquote></li><li><p>各态历经性（遍历性）</p><blockquote><p>指所有样本具有相同的自相关函数和功率谱密度。任意一个样本函数的功率谱密度就是该随机过程的功率谱密度</p></blockquote></li><li><p>高斯过程的性质</p><blockquote><p>如果广义平稳，则一定严平稳</p><p>若高斯过程中两点不相关，则两点一定独立</p></blockquote></li><li><p>几类噪声的定义</p><blockquote><ul><li>白噪声：功率谱密度为常数的随机信号（与之对应的为有色噪声）</li><li>高斯噪声：概率密度函数服从高斯分布</li><li>高斯白噪声：功率谱密度服从均匀分布，幅度（概率密度）服从高斯分布（热噪声是白噪声，且热噪声是由大量自由电子的运动产生的，其统计特性服从高斯分布）</li><li>加性噪声：一般指热噪声、散弹噪声等。它们与信号的关系是相加，不管有没有信号，噪声都存在。</li><li>乘性噪声：一般由信道不理想引起的。它们与信号的关系是相乘，信号在，噪声在；信号不在，噪声也就消失。乘性随机性看成是系统的时变性或者非线性造成的。乘性噪声普遍存在于现实世界的图像应用当中。</li></ul></blockquote></li><li><p>匹配滤波器的目的</p><blockquote><p>获取最大信噪比</p></blockquote></li></ol><h3 id="四、模拟通信系统"><a href="#四、模拟通信系统" class="headerlink" title="四、模拟通信系统"></a>四、模拟通信系统</h3><ol><li>什么是调制？调制的目的是什么？</li></ol><blockquote><p>调制：按照调制信号的变化规律去控制载波的幅度、频率或相位</p><p>调制的目的：</p><ul><li>频谱搬移——使发送的频带信号具有匹配频带信道的带通特性</li><li>高频资源丰富，便于复用，同时传送多路信息</li></ul></blockquote><ol><li>正弦载波调制的种类</li></ol><blockquote><p>幅度调制</p><ul><li>双边带抑制载波调幅（DSB-SC AM）<ul><li>载波提取——添加导频分量/平方环/科斯塔斯环；</li><li>只能使用相干解调——因为信号包络有正有负（包络检波会取绝对值））</li></ul></li><li>包络调制（标准调幅，AM）：DSB-SC信号叠加一个大载波</li><li>单边带调幅（SSB）</li><li>残留边带调制</li></ul><p>角度调制——牺牲带宽换取高的抗噪能力</p><ul><li>调频FM<ul><li>FM理想鉴频：先通过线性网络（微分器）把等幅调频波变换成振幅与调频波瞬时频率成正比的调幅调频波，然后用振幅检波器（包络检波）进行振幅检波</li></ul></li><li>调相PM</li></ul></blockquote><h3 id="五、数字信号的基带传输"><a href="#五、数字信号的基带传输" class="headerlink" title="五、数字信号的基带传输"></a>五、数字信号的基带传输</h3><ol><li><p>模拟通信系统和数字通信系统有何不同？</p><blockquote><ul><li>调制方式不同，波形不同：模拟系统是正弦波，数字系统是矩形波</li><li>信号流不同：一个是数字信号，一个是正弦信号。数字信号误码率低、可以经过无损压缩。模拟信号要求有效的识别，更容易受到外界噪声干扰</li><li>系统传输所需操作和设备不同：数字系统需要将模拟信号经过采样量化编码转化为数字信号，即模数转换</li></ul></blockquote></li></ol><ol><li><p>数字通信系统的组成</p><blockquote><p>信源-&gt;信源编码-&gt;信道差错控制编码-&gt;数字调制器-&gt;信道-&gt;数字解调器-&gt;信道译码器-&gt;信源译码器-&gt;信宿</p></blockquote></li><li><p>什么是码间干扰?</p><blockquote><p>在一个抽样时刻，由于邻近码元的波形在该点的幅度值不为0，导致对当前码元抽样的干扰。也就是说，在抽样点得到的抽样值，不仅包含了当前码元的幅度值，还包含了临近码元的幅度值</p></blockquote></li><li><p>什么是奈奎斯特准则？（无码间干扰条件）</p><blockquote><p>指信道与成形滤波器、匹配滤波器级联之后的时域特性满足在除了每个nTs处即采样点之外的地方为0。一般采用的升余弦滤波器满足条件。</p></blockquote></li><li><p>最佳基带传输系统设计要求</p><blockquote><ul><li>采样点无码间干扰——总体传输函数X(f)满足Nyquist准则</li><li>误码率尽量小——接收滤波器GR(f)与GT(f)C(f)匹配</li><li>发送信号带宽不超过信道带宽，为W</li></ul></blockquote></li><li><p>什么是眼图？</p><blockquote><p>利用视觉暂留效应，通过设置示波器的余辉参数，显示出采样点处的每一个码元的波形。通过眼图可以观察到实际采样点是否在最佳采样时刻，以及波形对定时的灵敏度等。</p></blockquote></li><li><p>信道均衡的目的？</p><blockquote><p>减小码间干扰。因为信道的未知性，系统特性通常不符合Nyquist准则，导致接收端采样时刻存在码间干扰。</p><p>因此可以在接收端采样后、判决前加均衡器，用于补偿信道特性的不完善</p></blockquote></li><li><p>部分响应系统的作用？</p><blockquote><p>由于升余弦滤波器截止频率超过了Nyquist带宽，导致频带利用率降低，因此部分响应系统通过“相关编码”，在前后符号注入相关性，改变信号波形的频谱特性，使得传输的信号波形的“频谱变窄”。以提高频谱利用率。</p><p>组成：相关编码器、理想低通滤波器、采样判决器</p><p>特点：利用相关编码引入受控 ISI（即在接收端可消除）的基带传输系统</p><ul><li>其带宽为W(Hz)（=1/(2 Ts），是奈氏带宽）</li><li>传输速率为2 W(Baud)（奈氏速率）</li><li>达到理论最大频带利用率——2 Baud/Hz</li><li>且能用物理可实现滤波器近似实现其频率特性</li></ul></blockquote></li><li><p>什么是符号同步？</p><blockquote><p>为了从接收信号中准确地提取出时钟信号，接收机的恢复时钟必须“实时”地调整其时钟频率及定时相位来补偿频率漂移，以确保 “对解调输出信号采样瞬时的最佳化”。</p><p>方法有发射时加入导频，或者利用线谱法，即通过对信号平方，然后再用窄带滤波器或者锁相环提取。</p></blockquote></li></ol><h3 id="六、数字信号的频带传输"><a href="#六、数字信号的频带传输" class="headerlink" title="六、数字信号的频带传输"></a>六、数字信号的频带传输</h3><ol><li><p>2PSK 信号可以非相干解调吗？</p><blockquote><p>不能，因为2PSK信号通过调制信号的相位变化规律控制载波变化，而包络检波会丢掉相位。</p></blockquote></li><li><p>什么是相位模糊问题？</p><blockquote><p>对PSK信号进行载波提取时，得到的载波有两种可能的相位（0、π），对接收信号解调将可能产生与基带信号同相/反相的信号。DPSK解决问题的关键在于利用当前bit的载波相位与前一bit的载波相位之差传递绝对码。</p></blockquote></li><li><p>如何解决QPSK（Quadrature Phase Shift Keying）的非线性影响？</p><blockquote><p>OQPSK（Offset QPSK）。令 I 路和 Q 路信号的零点错开（时间上错开 T = Ts/2）。Q路调制时延迟T，采样时同样延迟T，这样可以降低包络起伏，非线性的影响就会减小。</p></blockquote></li><li><p>为什么要采用高阶调制？</p><blockquote><p>频带利用率$\eta=\frac{R_b}{B}$，同时$R_b=R_s\log_2M$。高阶调制可以在带宽不变（即码元速率不变）的情况下，提高频带利用率</p></blockquote></li><li><p>为什么MQAM的性能比MPSK的性能更好？</p><blockquote><ul><li>MQAM 充分利用了二维信号空间的平面，在不减小相邻信号矢量之间的最小欧式距离的条件下，增加矢量点的数目，以增加信道的频带利用率</li><li>矢量间的最小欧式距离越大，越不容易判错</li></ul></blockquote></li></ol><h3 id="七、信源和信源编码"><a href="#七、信源和信源编码" class="headerlink" title="七、信源和信源编码"></a>七、信源和信源编码</h3><ol><li><p>信息、信号和消息的概念</p><blockquote><p>（1）信号：可描述、可测量、可显示的物理量<br>（2）信息：以信号参量形式载荷在信号上（幅度、频率、相位等），是我们最终所需要的东西<br>（3）消息（符号）：消息所描述和度量的对象是信息（数学层次），数学层次上对信息的描述</p></blockquote></li><li><p>信息度量</p><blockquote><p>自信息量、互信息量：相对量</p><ul><li>自信息量：信源不确定度的减少量</li><li>互信息量：信息经过信道传输后，真正被信宿获得的信源的信息量（信源X的不确定度的减少量）</li></ul><p>信息熵：信源输出的一个符号所含的平均信息量。是对信息不确定度的度量，是绝对量。</p></blockquote></li><li><p>信道有效性的衡量标准是频带利用率，为信息速率R与带宽B的比值。信源编码要求Rs尽可能小，这与提高有效性是否矛盾？</p><blockquote><p>不矛盾。</p><p>（1）信源编码后一个码字携带了更多的比特（码元速率降低），即占用更少的带宽（码元速率对应带宽），从信息传输角度看，有效性是提高了。<br>（2）高阶调制的思想类似<br>（3）有效性一般关注的是bps/Hz</p></blockquote></li><li><p>离散、无记忆、限失真信源编码定理（无失真信源编码定理同理，即传输速率大于信息熵时，只要信源序列L足够成，则……）</p><blockquote><p>若有一个离散、无记忆、平稳信源，其信息率失真函数为R(D)，则当通信系统中实际传送信息率为R &gt; R(D)，只要信源序列 L 足够长，则一定存在一种编码方式C‘令译码后的失真小于或等于D +ε，且ε为任意小的正整数。反之若R &lt; R(D)，则无论什么编码方式其译码失真必大于D。</p></blockquote></li></ol><h3 id="八、信道"><a href="#八、信道" class="headerlink" title="八、信道"></a>八、信道</h3><ol><li><p>信道中的三种典型作用</p><blockquote><p>衰落、干扰、噪声</p></blockquote></li><li><p>信道编码定理？</p></li></ol><blockquote><p>对任意给定的信道，设其容量为C，则一定存在一种信道编码，当前传输速率低于C时，收端译码后的差错率可以做到无穷小；</p><ul><li>反之，若传输速率大于C，任何编码都不可能做到差错率很小</li></ul></blockquote><ol><li>根据香农公式，信道的容量极限是？</li></ol><blockquote><p>$\mathop{lim}\limits_{B\to{\infty}}C=\frac{S}{N_0\ln{2}}~~bit/s$</p></blockquote><ol><li>分集的思想？</li></ol><blockquote><p>原理：利用两个以上信号传送同一信息，并且这些不同信号的衰落相互独立<br>目的：抗衰落</p></blockquote><h3 id="九、信道编码"><a href="#九、信道编码" class="headerlink" title="九、信道编码"></a>九、信道编码</h3><ol><li><p>线性分组码的性质</p><blockquote><ol><li>线性分组码的码字的集合C对加法封闭</li><li>全零序列是线性分组码中的一个码字</li><li>线性分组码中任意两个不同码字间汉明距离的最小值称为码组的最小距离</li><li>除全零码外，码字的最小重量称为码组的最小重量</li><li>线性分组码每个码字间的最小距离等于某非零码字的最小汉明重量</li></ol></blockquote></li><li><p>循环码生成多项式的性质</p><blockquote><ol><li>g(x)的0次项为1</li><li>g(x)是唯一的</li><li>循环码的每一个码多项式都是g(x)的倍式，且每一个小于等于(n-1)次的g(x)倍式一定是码多项式</li><li>g(x)的次数是(n-k)</li></ol></blockquote></li></ol><h3 id="十、扩频通信"><a href="#十、扩频通信" class="headerlink" title="十、扩频通信"></a>十、扩频通信</h3><ol><li><p>模拟信号可以使用扩频技术吗？</p><blockquote><p>可以，FM信号就是通过扩频来获取更强的抗干扰能力。</p></blockquote></li><li><p>伪随机码的特性</p><blockquote><ul><li>序列中 0 和 1 出现的概率各为1/2</li><li>序列中连0或连1称为游程，游程长度为k的游程数占总游程数的1/(2^k)</li><li>将给定随机序列位移任何个元素，则所得序列和原序列对应的元素由一半相同，一半不同</li></ul></blockquote></li></ol><h3 id="十一、正交频分复用多载波调制技术"><a href="#十一、正交频分复用多载波调制技术" class="headerlink" title="十一、正交频分复用多载波调制技术"></a>十一、正交频分复用多载波调制技术</h3><ol><li><p>移动无线信道的两个基本特征</p><blockquote><p>（1）多径传输：发射信号经过多条具有不同时延的路径到达接收机，接收信号是多径传输信号之和<br>（2）多径信道具有时变性：发射机、接收机及传播环境中的其它物体运动引起移动通信的时变模型一般是时变多径信道模型</p></blockquote></li><li><p>什么是信号衰落？</p><blockquote><p>若发射信号是频率为 fc 的未调制正弦载波，经过无线信道的时变多径传输会带来 “接收信号幅度的起伏变化” （瑞利分布或莱斯分布），称为信号衰落</p></blockquote></li><li><p>正交频分复用（OFDM）多载波调制技术</p><blockquote><p>单路宽带高速传输 ⇨ 多路窄带低速传输（低速：符号间隔Ts大，带宽窄（小于相关带宽Bc），平坦衰落，无码间干扰）</p></blockquote></li><li><p>OFDM系统收发过程</p><blockquote><p><img src="https://i.loli.net/2021/09/28/dDE7gVReKPZrfaW.png" alt="image-20210926202741927"></p><p>注意：<br>（1）交织是将突发差错打乱为随机差错，应该是在信道差错编码之后<br>（2）星座映射以我的理解应该就是调制过程。即串并变换 → 调制到对应子载波 → 合并<br>（3）插入导频是在 “已调信号” 中插入时钟信号，是调制之后的步骤<br>（4）注意以上步骤都是在频域上操作。IFFT后，将每个周期最后的若干样值复制放在前面作为CP</p></blockquote></li></ol><h2 id="移动通信"><a href="#移动通信" class="headerlink" title="移动通信"></a>移动通信</h2><h3 id="一、移动通信电波传播与传播预测模型"><a href="#一、移动通信电波传播与传播预测模型" class="headerlink" title="一、移动通信电波传播与传播预测模型"></a>一、移动通信电波传播与传播预测模型</h3><ol><li><p>电波传播的基本特性</p><blockquote><p>衰落。表现为传播损耗和弥散。传播损耗包括路径损耗和阴影衰落；弥散包括多径衰落和多普勒扩展。</p></blockquote></li><li><p>三种基本电波传播机制</p><blockquote><ul><li>反射。发生于地球、建筑物表面，电磁波遇到比其波长大的时候发生。是产生<strong>多径衰落</strong>的主要原因</li><li>绕射。收发机间的无线路径被尖锐物阻挡</li><li>散射。发生于粗糙物体表面</li></ul></blockquote></li><li><p>多径衰落的基本特性</p><blockquote><p>信号幅度衰落、时延扩展</p></blockquote></li><li><p>多径信道的统计分析</p><blockquote><ul><li>瑞利分布<ul><li><strong>发射机与接收机间无直射波路径</strong></li><li>大量反射波存在，且方向角随机（0~2π均匀分布）</li><li>各反射波幅度和相位统计独立</li></ul></li><li>莱斯分布<ul><li><strong>有视距传播的直达波信号，且为主接收信号分量</strong></li><li>同时有不同角度随机到达的多径分量叠加</li></ul></li></ul></blockquote></li><li><p>多径信道的分类</p><blockquote><p><img src="https://i.loli.net/2021/09/28/Hm6ixZPsfyhjB3t.png" alt="image-20210926204712370"></p></blockquote></li><li><p>什么是MIMO技术</p><blockquote><p>多入多出（基站和用户端都为多副天线）</p></blockquote></li></ol><h3 id="二、信源编码与调制解调技术"><a href="#二、信源编码与调制解调技术" class="headerlink" title="二、信源编码与调制解调技术"></a>二、信源编码与调制解调技术</h3><h3 id="三、抗衰落与链路性能增强技术"><a href="#三、抗衰落与链路性能增强技术" class="headerlink" title="三、抗衰落与链路性能增强技术"></a>三、抗衰落与链路性能增强技术</h3><ol><li><p>抗衰落和链路性能增强技术有哪些？</p><blockquote><ul><li>分集技术——SC、EGC、MRC<ul><li>思想：利用接收到的多个衰落独立的信号进行合并，提高信噪比</li><li>特点：<ul><li>改善信噪比，<strong>关键在于减小信噪比低于正常工作门限信噪比的时间</strong></li><li>无需增加发射功率即可改善信号质量</li></ul></li></ul></li><li>信道编码与交织技术——EFC、ARQ、HARQ<ul><li>方法：引入可控冗余比特，使信息与添加比特间存在相关性</li><li>目的：减小噪声和干扰影响，提高<strong>可靠性</strong></li></ul></li><li>均衡技术——线性/非线性均衡<ul><li>目的：<strong>提高可靠性</strong>，<strong>克服码间干扰</strong>（ISI）（补偿信道引起的失真）</li><li>峰值畸变/均方畸变准则定义：抽样时刻上得到的码间干扰最大可能值与有用信号y0（的平方）的比值</li></ul></li><li>扩频技术——直接序列扩频、跳频<ul><li>DSSS：将信号与一码片序列相乘，将基带信号带宽扩展至原来的N倍，功率谱密度下降为原来的1/N。若存在多址干扰，则因为PN码的尖锐自相关和低值互相关特性，可抑制其它用户频率的干扰</li><li>FHSS：使窄带数字已调信号的载波频率在一个很宽的频率范围内随时间跳变，然后接收机同步跳变调谐来接收。这样即使有部分频点被干扰，仍能在其他未被干扰的频点上进行正常的通信</li></ul></li><li>链路自适应技术——如AMC技术<ul><li>物理层：自适应调制编码（AMC）—— 信道条件好则多发，条件不好则少发<ul><li>接收端：信道估计→对接收信号进行解调和解码 </li><li>接收端：把估计信道信息通过反馈信道发给发端 </li><li>发送端：根据反馈信息对信道质量进行判断，选择适当调制编码方式（MCS，Modulation Coding Scheme）匹配信道，来提高平均吞吐量</li></ul></li><li>链路层：混合请求自动重传（HARQ）<ul><li>三种重传机制：停止等待型、回退N步型、选择重传型</li><li>根据重传数据帧构成分为三种机制：追加合并、完全增量冗余、部分增量冗余</li></ul></li></ul></li></ul></blockquote></li></ol><h3 id="四、蜂窝组网技术"><a href="#四、蜂窝组网技术" class="headerlink" title="四、蜂窝组网技术"></a>四、蜂窝组网技术</h3><ol><li><p>移动通信网的组成</p><blockquote><ul><li>空中网络（主要部分）<ul><li>多址接入</li><li>频率复用和蜂窝小区</li><li>切换和位置更新</li></ul></li><li>地面网络<ul><li>服务区内各基站互联</li><li>基站与固定网络互联</li></ul></li></ul></blockquote></li><li><p>多址接入技术（各自的特点和缺陷）</p><blockquote><ul><li>FDMA（1G）</li><li>TDMA（2G）</li><li>CMDA（3G）</li><li>OFDMA（4G）</li><li>非正交多址（5G）</li><li>随机多址：随机接入技术——ALOHA、时隙ALOHA、载波监听多址（CSMA）</li></ul></blockquote></li><li><p>什么是越区切换？</p><blockquote><p>为了保证数据传输的连续性，当正在进行传输的移动台进入相邻无线小区时，移动通信系统必须具备将业务信道自动切换到相邻小区基站的越区切换功能。</p></blockquote></li></ol><h3 id="五、GSM和CDMA系统"><a href="#五、GSM和CDMA系统" class="headerlink" title="五、GSM和CDMA系统"></a>五、GSM和CDMA系统</h3><ol><li><p>GSM系统的结构</p><blockquote><p><img src="https://i.loli.net/2021/09/28/PI3g5bATY4ms1uc.png" alt="image-20210926212541655"></p><p>组成：移动台（MS）、基站子系统（BSS）、移动交换子系统（SSS）</p></blockquote></li><li><p>位置更新过程</p><blockquote><p><img src="https://i.loli.net/2021/09/28/oELyZsFl8rvjI5M.png" alt="image-20210926212807770"></p><p>判断是否需要进行位置更新：移动台将从网络端收到的ID与原来存储的ID进行比较，若不同，则位置改变</p></blockquote></li><li><p>固话用户呼叫移动用户的过程</p><blockquote><p>（1）PSTN用户拨打移动用户的电话号码（MSISDN）<br>（2）PSTN交换机分析MSISDN号码。需要接入移动网，故转接至GMSC<br>（3）GMSC分析MSISDN号码。得到用户的HLR地址并向HLR查询路由<br>（4）HLR分析由GMSC发来的消息。包含：MSISDN、IMSI（国际移动用户识别码，全球唯一）、VLR地址、用户数据<br>（5）HLR查询被呼用户的MSC/VLR<br>（6）HLR从服务于被呼用户的MSC/VLR获得路由信息（MSRN，移动用户漫游号码）并不做处理直接转发给GMSC<br>（7）GMSC接收MSRN并分析，向服务于被呼用户的MSC/VLR发起呼叫建立请求<br>（8）MSC/VLR收到请求并检查VLR识别被呼号码，找到被呼用户，建立连接</p><p><img src="https://i.loli.net/2021/09/28/ASLwKGDfFdIUO5j.png" alt="image-20210926203509971"></p></blockquote></li></ol><h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/通信原理.xmind">通信原理</a></li><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/移动通信.xmind">移动通信</a></li><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/信号与系统.xmind">信号与系统</a></li><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/数学分析.xmind">数学分析</a></li><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/线性代数.xmind">线性代数</a></li><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/studymaterials/概率论与数理统计.xmind">概率论与数理统计</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迷茫</title>
      <link href="/yyds/2824fd95.html"/>
      <url>/yyds/2824fd95.html</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;保研资格的事情告一段落，拿到了预想之中的资格，但并不是很开心，反而因为最近看到的、以前知道的件件事情，再一次感到十分迷茫和痛苦。我好像还是不知道自己想要什么，想做什么，对未来又有如何的规划和期望。最近见闻的一些事情，让我不得不再次将此思考重启，却注定得不到答案😔。</p><p>&emsp;&emsp;先说说为什么会突然想起来这事儿吧。今天早上出了今年的保研名单，下午参加了华为的招聘宣讲会。看着各个部门的介绍，以及同学们的提问、会后的交流环节，我看到的是企业的宏大体量和飞速发展的潜力，是非常有朝气的朋友们，目标明确地、憧憬地、大胆地了解着自己想知道的一切，我忍不住逃离了现场。我不知道我能“符合”什么岗位的要求，不知道自己有什么能力，除了前三年的成绩还不错以外，我似乎没什么拿得出手的“特别”的能力，我有时会怀疑自己是否具备作为“人才”的能力和潜质。所以难以面对，难以认清自我。</p><p>&emsp;&emsp;另外晚上看见了另一位电科的朋友放弃保研资格准备出国的消息，内心佩服他的勇敢和坚定之余，不免再次对自己的不堪感到一丝失望。然后很多事情都浮上心头。朋友们似乎都是目标明确的啊，他们有着自己的兴趣和方向，也一直为之努力奋斗。国科大的kj实习了一段时间也在准备申国外大学了，爱跳舞的kj真是活出了大学生的样子😂，自在潇洒；北医的爽早已说过要本科直接工作，现在应该也是一直在医院实习，说那话的样子足够深沉，应该是深思熟虑的结果；人大的xyq似乎准备保北大继续学经济？一直优秀的她应该也已达成自己的目标了吧；川农的浩林法双修，以前就是个会讲道理的模样😂；川师的小洋准备跨考新传，不用想也知道会有多努力了，希望努力之后得到同等的回报；南昌大学的苦逼医学生农药在医院和学校之间辗转，生物爱好者到医学生的转变，最终也会很成功，嗯，以后生病了也有医生朋友了😂；泸医的三金同样，在学霸的路上一路狂奔……此外还有好多，包括大学里的朋友们，室友们积极备考，朝七晚十的生活也会画上完美的句号吧，祝考研上岸~应该是为了学微波的大佬恺乔去了东南，马师傅应该会继续跟着中科院的老师干，学物理的崔和云海应该也在联系心仪的外校老师，测控的守卫将去浙大，秋豪不是保研去浙大就是考去……大家似乎都能找到自己的方向和喜欢的东西，我什么时候才能摆脱持续了三年多的迷茫呢？读研其实也不过是随波逐流罢了，一次次告诉自己是通信这专业性质需要我读研，或者不断给自己找事情做，以忘掉这些烦恼，坚定自己学下去的信念。可是继续读我也不知道到底应该做什么方向啊，而且时常怀疑自己的脑子是不是够用，面对一大堆论文各种算法和idea，我很怀疑自己到底能不能做好，会不会让老师失望……一切的一切，真的令人感到无力。</p><p>&emsp;&emsp;祝大家都能找到自己的方向，考研的都能上岸吧❤️。希望我也早日摆脱如今的状态😶</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于未来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFWS简介</title>
      <link href="/yyds/6e325585.html"/>
      <url>/yyds/6e325585.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、DFWS-Device-free-Wireless-Sensing-简介"><a href="#一、DFWS-Device-free-Wireless-Sensing-简介" class="headerlink" title="一、DFWS(Device-free Wireless Sensing)简介"></a>一、DFWS(Device-free Wireless Sensing)简介</h4><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/research/DFWS/DFWS%E7%AE%80%E4%BB%8B.png" alt="DFWS简介"></p><h4 id="二、DFWS系统结构"><a href="#二、DFWS系统结构" class="headerlink" title="二、DFWS系统结构"></a>二、DFWS系统结构</h4><ol><li><strong>信号采集和预处理模块</strong><ul><li>无线信号的固有参数<ul><li>RSS：接收信号强度。容易获得，但易受干扰</li><li>RSP：电磁波周期上某个时间点的位置</li><li>ToA：信号到达时间。收发机间需要同步</li><li>TDoA：信号到达（两个或多个）接收机的时间差，比ToA更灵活。收发机间无需同步，接收机间需同步</li><li>AoA：信号到达角度。用于识别射频波入射传播方向</li><li>PRR：数据包接收速率。可用于估计运动的方向和速度</li><li><strong>CSI：信道状态信息。可捕获每根天线间的幅度、相位信息。前提是使用OFDM技术。普通商用WiFi设备即可提供</strong></li></ul></li><li>预处理技术（去噪）<ul><li>信号滤波（如卡尔曼滤波、带通滤波器、平滑滤波器等）</li><li>PCA（降维、去噪）</li><li>域变换</li><li>以上的混合</li></ul></li></ul></li><li><strong>特征提取模块（多域变换）</strong><ul><li>时域：均值、方差、峰峰值、高阶统计量、分布等</li><li>频域：傅氏变换。能量、熵、峰值频率、频谱分布等</li><li>小波域：小波变换。可将时域信号变换为多个不同时间分辨率的频带，然后从每个波段提取统计特征，形成多尺度时频域特征</li><li>时频域</li><li>原始数据：基于深度学习，部分情况下甚至不需要对数据进行预处理，也能得到和使用处理后的数据相差不大的效果</li><li>……</li></ul></li><li><strong>状态识别模块</strong><ul><li>基于模型<ul><li>优点：不需要耗时的训练过程；计算复杂度较低</li><li>缺点：很难建立准确的模型来描述人对信号的影响。尤其对复杂的人类状态而言，略显乏力</li><li>实例：<ul><li>矩阵求逆问题——正则化方法</li><li>空间相交问题——几何方法</li><li>稀疏表示问题——压缩感知方法</li></ul></li></ul></li><li>基于深度学习（深度特征提取与分类）<ul><li>优点：自动提取深度特征，识别性和代表性更强</li><li>缺点：训练耗时，计算量大</li><li>特征提取涉及到网络结构的选择，包括网络深度、每层的大小</li><li>分类涉及到回归模型的选择。如soft-max回归模型</li></ul></li></ul></li></ol><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/research/DFWS/DFWS%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84.png" alt="DFWS系统结构"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/research/DFWS/%E5%9F%BA%E4%BA%8EDL%E7%9A%84DFWS%E7%BB%93%E6%9E%84.png" alt="基于深度学习的DFWS结构"></p><h4 id="二、DFWS可能的方向及启发"><a href="#二、DFWS可能的方向及启发" class="headerlink" title="二、DFWS可能的方向及启发"></a>二、DFWS可能的方向及启发</h4><ol><li>DL在人体检测领域的应用<ul><li>利用无线信号间的相关性以捕获人体行为对信号传播的放大效果 </li><li>考虑模型的训练效率。包括降低计算复杂度或增强迁移能力 </li><li>考虑将雷达数据转换为图像数据，可以直接利用DL在CV领域的优秀成果</li></ul></li><li>信号参数的选择、信号处理和模型构建思路<ul><li>不同的场景和任务可能选用不同的信号参数。<strong>细粒度的CSI</strong>可能是解决所有问题最合适的参数</li><li><strong>相位</strong>信息对人体运动更加敏感，也更容易受环境噪声以及设备的影响。需要先进的信号处理技术支持</li><li>DFWS兼具粗粒度和细粒度的感知能力，需要将定位、检测和识别集成到一个模型，以实现无处不在的感知和应用</li></ul></li><li>用于训练DL模型的数据采集——与OFDM多子载波技术一起，新的MIMO技术可为无线感知提供多方面、全覆盖和内在相关的数据</li><li>商业设备信号的校准——例如采用相邻天线的相位差消除CFO和SFO的影响；信号滤波；域变换等（即去除噪声的影响）</li><li>多模式人体检测——由于DL具备强大的数据融合能力，可整合多种传感器的数据及研究成果，如无线信号与CV，让神经网络学习它们之间的对应关系<ul><li><a href="#3">[3]</a>中将骨骼的图像数据和无线信号数据输入进神经网络进行学习，之后可仅依靠人体对无线信号的反射预测人体姿势</li><li>核心技术<ul><li>数据融合：不同形态的信息组合。<a href="#4">[4]</a>提供了详细的多传感器数据融合策略</li><li>协同学习：指迁移学习和域适应。通过转移相关领域的数据或知识结构，将在某个领域或任务中学习到的知识或模式应用于不同但相关的领域或问题，以完成或改进目标领域或任务的学习成果</li></ul></li></ul></li><li>同时实现用户验证和活动识别</li><li>多用户人体检测——多人场景下分离信号：通过MIMO多天线、多链路和波束形成技术将每个用户的动态信息从多用户感知数据中分离出来，从而提高无线感知的时空分辨率<ul><li><a href="#5">[5]</a>通过MIMO多天线、多链路和波束形成技术将每个用户的动态信息从多用户感知数据中分离出来，从而提高无线感知的时空分辨率</li></ul></li><li>人体动作拆分，分别建立信号与人体动作幅度、速度、持续时间之间的关系</li><li>部署范围扩大，子区域划分</li></ol><h4 id="三、参考文献"><a href="#三、参考文献" class="headerlink" title="三、参考文献"></a>三、参考文献</h4><ul><li><span id="1"><a href="https://sci-hub.se/10.1109/MNET.2017.1700133">[1] J. Wang, Q. Gao, M. Pan and Y. Fang, “Device-Free Wireless Sensing: Challenges, Opportunities, and Applications,” in <em>IEEE Network</em>, vol. 32, no. 2, pp. 132-137, March-April 2018, doi: 10.1109/MNET.2017.1700133.</a></span></li><li><span id="2"><a href="https://sci-hub.se/10.1109/JIOT.2020.3024234">[2] R. Zhang, X. Jing, S. Wu, C. Jiang, J. Mu and F. R. Yu, “Device-Free Wireless Sensing for Human Detection: The Deep Learning Perspective,” in IEEE Internet of Things Journal, vol. 8, no. 4, pp. 2517-2539, 15 Feb.15, 2021, doi: 10.1109/JIOT.2020.3024234.</a></span></li><li><span id="3"><a href="https://sci-hub.se/10.1109/CVPR.2018.00768">[3] M. Zhao, T. Li, M. A. Alsheikh, Y. Tian, and D. Katabi, “Through-wall human pose estimation using radio signals,” in Computer Vision and Pattern Recognition (CVPR), 2018</a></span></li><li><span id="4"><a href="https://sci-hub.se/10.1016/j.inffus.2016.09.005">[4] R. Gravina, P. Alinia, H. Ghasemzadeh, and G. Fortino, “Multisensor fusion in body sensor networks: State-of-the-art and research challenges,” Information Fusion, vol. 35, pp. 68–80, 2017</a></span></li><li><span id="5"><a href="https://sci-hub.se/10.1145/3290605.3300766">[5] S. Tan, L. Zhang, Z. Wang, and J. Yang, “MultiTrack: Multi-user tracking and activity recognition using commodity WiFi,” in Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, 2019, pp. 1–12.</a></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> 通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DFWS </tag>
            
            <tag> WiFi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自省</title>
      <link href="/yyds/81231d2a.html"/>
      <url>/yyds/81231d2a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>看完《我的青铜时代》有关罗翔老师的一集，记录一些自我思考的想法又重新出现在我的脑海中，那么干脆就开始做吧。仅仅作为一点反省自身、剖析自我的工具罢了。</p></blockquote><p>&emsp;&emsp;其中有不少触动我的地方，自我剖析、对莫名优越感的警惕、一个人生活得“好”的标准当如何、如何慢慢从“知道”跨越到“做到”，这些都是值得花费时间和精力去思考、去寻找答案的问题。</p><p>&emsp;&emsp;这些问题对于目前的我来说，暂时都没有答案，甚至有些我从来都还没有想过。或者可能偶尔有一些想法出现，却又很快溜走。生活中的诱惑和世界的丰富分散掉我的注意力，有时用焦虑让我无法思考，但更多是自己对自己的麻醉。</p><p>&emsp;&emsp;<strong>警惕优越感</strong>。优越感来自于比身边较多同龄人更好的学校，大学里更高的分数，比父母更高的学历，自认为较好的外表。表现于偶尔的高谈阔论，偶尔的不屑与不耐烦，偶尔的虚伪自谦。有时事后会鄙夷自己的表现、自我反省，但似乎总是起不到想象中的作用。有时候这种莫名奇妙的优越感让我感到羞愧，因为我知道很多东西并不是我本身就有的，我也有同样无知的时候，我在人前的优越感就仿佛是对昨天的自己的嘲讽。这需要时刻警惕，拥有自省的想法和能力是维持本我的锚。</p><p>&emsp;&emsp;<strong>”好”的标准</strong>。说起来，似乎生活十分复杂，但仔细想想，大多数自我纠结的矛盾点，它们的根源其实还是来自关于“好”的标准。正如罗翔老师所说，“我们总是活在他人的眼光中，他人的评价中，他人的注视中。”因此忠于自我免不了有一些虚荣的、违心的阻碍，如何找到一个自己的“好”的标准，从而尽量避免与别人攀比，避免被别人攀比，是需要去经历和探索的。到底什么是好呢？对于现在的我来说，是拥有一个健壮的身体、顺利的学业、美满的家庭，以及和谐的感情。这些看似简单的词组，有时候感觉我其实已经拥有了，但总是想要更多，毕竟人是向前发展的，我不可能一直停留在原地，这就产生了各种各样的焦虑。有来自外界的，有来自自身的，听闻朋友们各自有着自己奋斗的目标，为他们高兴的同时也不免对自己有些焦急，佛系的表面下是深深的无奈。有时候我感觉自己是在被推着前进，看起来挺好了，但还是不够，避免被淘汰、争取更好是这些年来不变的主题之一。感觉有些累，但是不能停下，停下是更令人疲惫的迷茫。</p><blockquote><p>“对于不可控的的事情，我们保持乐观；对于可控的事情，我们保持谨慎。”        —— 爱比克泰德</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《我的青铜时代》 </tag>
            
            <tag> 自省 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX常见错误信息</title>
      <link href="/yyds/be1c3aa6.html"/>
      <url>/yyds/be1c3aa6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Reference：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/info/lshort/chinese/lshort-zh-cn.pdf">《一份(不太)简短的LaTeX介绍》</a></p><p>放在这里便于查阅。</p></blockquote><ul><li><font color="red">! Undefined control sequences.</font><blockquote><p>使用了未定义的命令。拼写错误是原因之一，如把 \LaTeX 写作 \Latex 这样。也有可能是<br>没有调用某个宏包，但用了该宏包定义的命令。</p></blockquote></li><li><font color="red">! LaTeX error: Environment ... undefined.</font><blockquote><p>使用了未定义的环境。</p></blockquote></li><li><font color="red">! Missing $ inserted.</font><blockquote><p>缺少数学环境的符号 $。多由于将数学符号用在公式之外而导致。</p></blockquote></li><li><font color="red">Runaway argument? </font><font color="red">! Paragraph ended before ... was complete.</font></li><li><font color="red">! File ended while scanning definition/use of ...</font><blockquote><p>这两个错误主要是由于漏写了包裹命令参数的花括号，导致识别参数时出现错误。许多编<br>辑器的括号配对功能有助于检查和消除这类错误。<br>这类错误还有可能是由于前一次编译中断导致 .aux 等辅助文件不完整，再次编译读入不<br>完整的文件产生错误。解决办法是删除辅助文件并重新编译。</p></blockquote></li><li><font color="red">! Extra alignment tab has been changed to \cr.</font><font color="red">! Misplaced \noalign.</font><blockquote><p>两个错误信息都与表格有关。</p><ul><li><p>前者的字面意义是“一行中使用的列分隔符<code>&amp;</code>太多”，有时可能确实是<code>&amp;</code> 的个数和列<br>格式不匹配，但多数情况是漏掉了行尾的 <code>\\</code> 命令。</p></li><li><p>后者常出现于漏掉了行尾的 <code>\\</code> 命令而接着使用 <code>\hline</code> 命令画横线的时候。</p></li></ul></blockquote></li><li><font color="red">! LaTeX Error: Lonely \item--perhaps a missing list environment.</font></li><li><font color="red"> ! LaTeX Error: Something's wrong--perhaps a missing \item.</font><blockquote><p>两个错误信息都与列表环境和 <code>\item</code> 命令有关。前者意味着在没有使用列表环境的情况下<br>用了 <code>\item</code>；后者则相反，是在列表环境中漏了 <code>\item</code>。</p></blockquote></li><li><font color="red">! I can't find file `...'.</font></li><li><font color="red">! LaTeX Error: File `...' not found.</font><blockquote><p>两个错误都意味着缺少文件。</p><ul><li>如果使用 <code>\input</code> 或者 <code>\include</code> 命令添加文件，出现上述错误的原因当然是文件不<br>存在或者文件名不对；</li><li>如果错误提示里的文件名带 <code>.cls</code> 或者 <code>.sty</code> 扩展名，那么很显然，是因为没有安装<br>所需的宏包或文档类。</li></ul></blockquote></li><li><font color="red">! LaTeX Error: Missing \begin{document}.</font><blockquote><p>字面上是缺少 <code>\begin&#123;document&#125;</code>，实际上往往是由于在 <code>\begin&#123;document&#125;</code> 之前（导言<br>区）输入了文字或某些命令。</p></blockquote></li><li><font color="red">! LaTeX Error: Can be used only in preamble.</font><blockquote><p>与上一条相反，由于将必须用于导言区的命令在 <code>\begin&#123;document&#125;</code> 之后使用而产生。</p></blockquote></li><li><font color="red">! LaTeX Error: \ begin{...} on input line ... ended by \ end{...}.</font><blockquote><p>环境首尾不匹配。比如 <code>\begin&#123;enumerate&#125;</code> 用了 <code>\end&#123;itemize&#125;</code> 结尾。或者也可能是由<br>于漏写了 <code>\begin</code> 或者 <code>\end</code> 命令。</p></blockquote></li><li><font color="red">! LaTeX Error: Option clash for package `...'.</font><blockquote><p>以不同选项重复调用宏包造成冲突。有可能是因为其它宏包内部事先调用了这个宏包，用<br>户再次带选项调用而导致冲突。解决问题的办法是去掉重复调用的宏包。如果宏包允许的<br>话，尽量使用其定义的命令改变设置，减少宏包选项的使用。</p></blockquote></li><li><font color="red">! LaTeX Error: Command ... already defined,or name \end... illegal ...</font><blockquote><p>使用 <code>\newcommand</code>或 <code>\newenvironment</code> 定义已有的命令/环境时产生的错误。如果自己确<br>实作了定义，可考虑用 <code>\renewcommand</code> 或 <code>\renewenvironment</code> 定义；如果是宏包定义的<br>命令产生了这个错误，则属于隐性的宏包冲突。<br>相比之前的 “Option Clash”，隐性宏包冲突是更难以解决的问题，对各种宏包不熟悉的用<br>户，尤其是使用模板的用户而言，往往难以下手。用户可尝试查找引起冲突的宏包的帮助<br>文档。详尽的手册里通常会告知用户这个宏包应当在某个宏包的前面/后面调用，或者不能<br>与某个宏包一起调用。如果是模板调用了大量宏包导致冲突，可联系模板的作者解决。</p></blockquote></li><li><font color="red">! LaTeX Error: Unknown option `...' for package `...'.</font><blockquote><p>调用宏包时指定了不能被其识别的选项。此时应该查找宏包的帮助文档来解决问题。</p></blockquote></li><li><font color="red">! Package `...' error: ...</font><blockquote><p>宏包或文档类自定义的错误，由于不正确地使用宏包里的命令而导致。此时应该查找宏包<br>的帮助文档来解决问题。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX符号表</title>
      <link href="/yyds/671b85fb.html"/>
      <url>/yyds/671b85fb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Reference：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/info/lshort/chinese/lshort-zh-cn.pdf">《一份(不太)简短的LaTeX介绍》</a></p><p>注意事项：</p><ol><li>蓝色的命令依赖 amsmath 宏包（非 amssymb 宏包）</li><li>带有角标 ℓ 的符号命令依赖 latexsym 宏包</li></ol></blockquote><h3 id="1-LaTeX-普通符号"><a href="#1-LaTeX-普通符号" class="headerlink" title="1. $\LaTeX$ 普通符号"></a>1. $\LaTeX$ 普通符号</h3><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/ueatB9dhGknJxUR.png" alt="文本、数学模式通用符号"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/wZXYIi3vaneBDuM.png" alt="希腊字母"></p><p><img src="/yyds/671b85fb/二元关系符.png" alt="二元关系符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/gXWbLyxNdIVJQjw.png" alt="二元运算符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/4IRsjF1EBZMNDAS.png" alt="巨算符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/i26y8r1DfkI4XE5.png" alt="数学重音符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/AezcB52SbkPpOlG.png" alt="箭头"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/yP4jWd7OGVRzcpJ.png" alt="作为重音的箭头符号"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/B48g6QlzCPNMkad.png" alt="定界符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/SX1fPncruADJYkq.png" alt="用于行间公式的大定界符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/JiPQtcG49oqzIN2.png" alt="其它符号"></p><h3 id="2-mathcal-AMS-符号"><a href="#2-mathcal-AMS-符号" class="headerlink" title="2. $\mathcal{AMS}$ 符号"></a>2. $\mathcal{AMS}$ 符号</h3><blockquote><p>本小节所有符号依赖 amssymb 宏包</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/TeYbwCfDPpOk5RJ.png" alt="AMS希腊字母和希伯来字母"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/YC1UpDd9qc4fVXr.png" alt="AMS二元关系符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/h2lYCRMqnobeySd.png" alt="AMS二元运算符"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/6WoGqTQpDLzjHAC.png" alt="AMS箭头"></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/u9nHIlsfzChqBW2.png" alt="AMS反义二元关系符和箭头"></p><p><img src="https://i.loli.net/2021/08/22/h2T63BwGbIOCzlY.png" alt="AMS定界符"></p><p><img src="https://i.loli.net/2021/08/22/vId7nFjUgHma5uz.png" alt="AMS其它符号"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬取网页学习笔记</title>
      <link href="/yyds/69a9b431.html"/>
      <url>/yyds/69a9b431.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文仅涉及一些网页爬取工具的简单应用。利用python的<code>urllib、requests、BeautifulSoup</code>等库尝试实现了简单的爬取百度图片、必应图片/每日壁纸、豆瓣评论等功能。</p></blockquote><h2 id="一、工具库介绍"><a href="#一、工具库介绍" class="headerlink" title="一、工具库介绍"></a>一、工具库介绍</h2><h3 id="1-urllib-包"><a href="#1-urllib-包" class="headerlink" title="1. urllib 包"></a>1. urllib 包</h3><ul><li>介绍：Python urllib 库用于操作网页 URL，并对网页的内容进行抓取处理</li><li><a href="https://docs.python.org/zh-cn/3/library/urllib.html">urllib—-URL处理模块</a></li><li>模块：<ul><li><strong>urllib.request</strong> - 打开和读取 URL。</li><li><strong>urllib.error</strong> - 包含 urllib.request 抛出的异常。</li><li><strong>urllib.parse</strong> - 解析 URL。</li><li><strong>urllib.robotparser</strong> - 解析 robots.txt 文件。</li></ul></li></ul><h3 id="2-requests-库"><a href="#2-requests-库" class="headerlink" title="2. requests 库"></a>2. requests 库</h3><ul><li>介绍：基于urllib，采⽤Apache2 Licensed开源协议的 HTTP 库</li><li><a href="https://docs.python-requests.org/zh_CN/latest/">官方文档</a></li><li>主要有7个方法<ul><li>Requests库主要有7个方法，分别是<ol><li>requests.request()：构造一个请求，支撑以下各方法的基础方法</li><li>requests.get()：获取HTML网页的主要方法，对应于HTTP的GET</li><li>requests.head()：获取HTML网页头信息的方法，对应于HTTP的HEAD</li><li>requests.post()：向HTML网页提交POST请求的方法，对应于HTTP的POST</li><li>requests.put()：向HTML网页提交PUT请求的方法，对应于HTTP的PUT</li><li>requests.patch()：向HTML网页提交局部修改请求，对应于HTTP的PATCH</li><li>requests.delete()：向HTML页面提交删除请求，对应于HTTP的DELETE</li></ol></li></ul></li></ul><h3 id="3-BeautifulSoup"><a href="#3-BeautifulSoup" class="headerlink" title="3. BeautifulSoup"></a>3. BeautifulSoup</h3><ul><li>介绍：提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据。</li><li><a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/">文档</a></li></ul><h2 id="二、爬取百度-必应图片"><a href="#二、爬取百度-必应图片" class="headerlink" title="二、爬取百度/必应图片"></a>二、爬取百度/必应图片</h2><h3 id="1-分析下载链接"><a href="#1-分析下载链接" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p>打开百度图片，输入关键词如”风景壁纸”，开发者工具-&gt;Network-&gt;抓包工具XHR。鼠标向下滑动，可得到图片的请求报文</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/rYCIMVQE3d1JRzp.png" alt="image-20210805205941341"></p><ul><li>这里<code>https://image.baidu.com/search/acjson?</code>是我们需要的链接，问号后面的都是对应的参数信息</li></ul></li><li><p>同时可得到浏览器的请求报文头部信息（<code>Request Headers</code>），可用于模拟浏览器的请求操作，以应对网站的安全验证。这里百度图片仅验证<code>User-Agent</code></p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/asr6Dt3KpUu41VJ.png" alt="image-20210805210255889"></p></li></ul><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">import</span> urllib<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>定义类并初始化</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GetBaiduImage</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> keyword<span class="token punctuation">,</span> page<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>path <span class="token operator">=</span> path        self<span class="token punctuation">.</span>keyword <span class="token operator">=</span> keyword        self<span class="token punctuation">.</span>page <span class="token operator">=</span> page        self<span class="token punctuation">.</span>pn <span class="token operator">=</span> <span class="token number">1</span>                  <span class="token comment"># pn代表从第几张图片开始获取，百度图片下滑时默认一次性显示30张</span>        <span class="token comment"># self.first = 1              # 代表从第几张图片开始获取，必应图片下滑时默认一次性显示30张</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><ul><li>注意：这里的<code>param</code> 就是刚刚抓包得到链接的参数部分，<strong>一个都不能少</strong></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    param <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'tn'</span><span class="token punctuation">:</span> <span class="token string">'resultjson_com'</span><span class="token punctuation">,</span>        <span class="token string">'logid'</span><span class="token punctuation">:</span> <span class="token string">' 7517080705015306512'</span><span class="token punctuation">,</span>        <span class="token string">'ipn'</span><span class="token punctuation">:</span> <span class="token string">'rj'</span><span class="token punctuation">,</span>        <span class="token string">'ct'</span><span class="token punctuation">:</span> <span class="token string">'201326592'</span><span class="token punctuation">,</span>        <span class="token string">'is'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'fp'</span><span class="token punctuation">:</span> <span class="token string">'result'</span><span class="token punctuation">,</span>        <span class="token string">'queryWord'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>keyword<span class="token punctuation">,</span>        <span class="token string">'cl'</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>        <span class="token string">'lm'</span><span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>        <span class="token string">'ie'</span><span class="token punctuation">:</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span>        <span class="token string">'oe'</span><span class="token punctuation">:</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span>        <span class="token string">'adpicid'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'st'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'z'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'ic'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'hd'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'latest'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'copyright'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'word'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>keyword<span class="token punctuation">,</span>        <span class="token string">'s'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'se'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'tab'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'width'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'face'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'istype'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'qc'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'nc'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        <span class="token string">'fr'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'expermode'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'force'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'cg'</span><span class="token punctuation">:</span> <span class="token string">'star'</span><span class="token punctuation">,</span>        <span class="token string">'pn'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>pn<span class="token punctuation">,</span>        <span class="token string">'rn'</span><span class="token punctuation">:</span> <span class="token string">'30'</span><span class="token punctuation">,</span>        <span class="token string">'gsm'</span><span class="token punctuation">:</span> <span class="token string">'1e'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token comment"># =============================================================================</span><span class="token comment">#         # first 参数控制从第 first 张图开始（与百度图片的 pn 参数类似）</span><span class="token comment">#         param = &#123;</span><span class="token comment">#             'q': self.keyword,</span><span class="token comment">#             'first': self.first,</span><span class="token comment">#             'count': '30',</span><span class="token comment">#             'cw': '1177',</span><span class="token comment">#             'ch': '593',</span><span class="token comment">#             'relp': '35',</span><span class="token comment">#             'tsc': 'ImageBasicHover',</span><span class="token comment">#             'datsrc': 'I',</span><span class="token comment">#             'layout': 'RowBased_Landscape',</span><span class="token comment">#             'mmasync': '1',</span><span class="token comment">#             'dgState': '',</span><span class="token comment">#             'IG': '9D7CBFCB39434C9583EA8186FB044DAA',</span><span class="token comment">#             'SFX': '3',</span><span class="token comment">#             'iid': 'images.5571'</span><span class="token comment">#             &#125;</span><span class="token comment"># =============================================================================</span>    header <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        html_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">,</span> params<span class="token operator">=</span>param<span class="token punctuation">)</span>        html_res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_res<span class="token punctuation">.</span>apparent_encoding        html_res<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># html_res是响应response,text方法返回字符串形式的html,而content方法是直接拉取得到的字节类型数据,还需要手动解码为字符串</span>        <span class="token comment"># 当text()显示不正常时使用content.decoding('utf-8/gbk/gbk2312')</span>        html_text <span class="token operator">=</span> html_res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>              <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>分析拉取到的html文本（变量<code>html</code>）并获取图片的下载链接</p><ul><li>分析发现<code>thumbURL</code>对应的就是图片下载链接</li></ul><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/IvE8ew5krWlHF2V.png" alt="image-20210805212258112"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetImageUrls</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    html <span class="token operator">=</span> self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'test.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token comment"># urls = re.findall('murl&amp;quot;:&amp;quot;(.*?)&amp;quot;', html, re.S)     # 必应图片</span>        urls <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"thumbURL":"(.*?)"'</span><span class="token punctuation">,</span> html<span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>     <span class="token comment"># 百度图片</span>    <span class="token keyword">return</span> urls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Download</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>           img_urls <span class="token operator">=</span> self<span class="token punctuation">.</span>GetImageUrls<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> img_url <span class="token keyword">in</span> img_urls<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>img_url<span class="token punctuation">,</span> path<span class="token operator">+</span><span class="token string">'%s.jpg'</span><span class="token operator">%</span>name<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"下载失败！"</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功下载第%s张图片'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                name <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># 下载下一页</span>        self<span class="token punctuation">.</span>pn <span class="token operator">+=</span> <span class="token number">29</span>   <span class="token comment"># 百度图片</span>        <span class="token comment"># self.first += 29# 必应图片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://image.baidu.com/search/acjson?'</span>    path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/百度图片/'</span>    keyword <span class="token operator">=</span> <span class="token string">'风景壁纸'</span>            <span class="token comment"># 想要搜索的图片</span>    page <span class="token operator">=</span> <span class="token string">'2'</span>                     <span class="token comment"># 想要爬取几页</span>    imgobj <span class="token operator">=</span> GetBaiduImage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> keyword<span class="token punctuation">,</span> page<span class="token punctuation">)</span>    imgobj<span class="token punctuation">.</span>Download<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-缺陷"><a href="#3-缺陷" class="headerlink" title="3. 缺陷"></a>3. 缺陷</h3><ul><li>对于爬取必应图片，将上面的注释取消，并注释对应部分即可</li><li>百度图片这种方法只能爬取缩略图</li><li>必应图片可爬取高清大图，但每隔几张就会爬取失败。对应代码中“下载失败”的异常处理</li></ul><h3 id="4-源代码"><a href="#4-源代码" class="headerlink" title="4. 源代码"></a>4. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBaiduImage.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBaiduImage.py</a></li></ul><h2 id="三、爬取必应的每日壁纸"><a href="#三、爬取必应的每日壁纸" class="headerlink" title="三、爬取必应的每日壁纸"></a>三、爬取必应的每日壁纸</h2><blockquote><p>已经有人搜集了必应的每日壁纸：<a href="https://bing.ioliu.cn/">必应每日高清壁纸</a>。并提供了直接下载，因此我们直接从该网站上爬取图片。</p></blockquote><h3 id="1-分析下载链接-1"><a href="#1-分析下载链接-1" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p>页数</p><ul><li><p>分析发现每一页对应的链接应该是：<code>https://bing.ioliu.cn/?p=&#123;n&#125;</code>。n对应页数。所以我们可以找到总页数并将其提取出来</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/vos9iauPCq7Ac2g.png" alt="image-20210805215127596"></p></li></ul></li><li><p>图片链接</p><ul><li>这里直接获取下载链接并存为二进制文件。或者也可以像第一节那样获取图片链接并使用<code>urllib.request.urlretrieve()</code>函数下载</li></ul><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/Qr73JuOn8c5KNlp.png" alt="image-20210805215515224"></p></li><li><p>获取图片信息，并将之作为图片名</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/cVQOZ59UMyI13mo.png" alt="image-20210805220452156"></p></li></ul><h3 id="2-代码实现-1"><a href="#2-代码实现-1" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">import</span> os<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        user_agent <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'</span><span class="token punctuation">&#125;</span>        html_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers <span class="token operator">=</span> user_agent<span class="token punctuation">)</span>        html_text<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_text<span class="token punctuation">.</span>apparent_encoding        html_text<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_text<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取最大页数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetMaxPageCount</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 获取主页信息，并且获取网站的最大页数 </span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    tag_page <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'page'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    page_txt <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">for</span> tag_child <span class="token keyword">in</span> tag_page<span class="token punctuation">.</span>children<span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tag_child<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            page_txt <span class="token operator">=</span> tag_child<span class="token punctuation">.</span>string            match <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'(?&lt;=1 / )\d*'</span><span class="token punctuation">,</span> page_txt<span class="token punctuation">)</span>            max_page_count <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> max_page_count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>存储图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">SavePictureInUrl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pic_url<span class="token punctuation">,</span> pic_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url链接获取图片的二进制数据，并且根据传入的路径和文件名将文件写入到对应的路径中</span>    source <span class="token operator">=</span> self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>pic_url<span class="token punctuation">)</span>    <span class="token keyword">if</span> source <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>     file_name <span class="token operator">=</span> <span class="token string">'&#123;&#125;.jpg'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>pic_name<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>pic_path<span class="token operator">+</span>file_name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>source<span class="token punctuation">.</span>content<span class="token punctuation">)</span>            sleep<span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"此图片下载失败！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载一页的图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetOnePageJpg</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> page_count<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 从返回的网页数据中获取每张图片的相关信息以及图片下载的url，然后调用相关函数下载图片</span>    url <span class="token operator">=</span> <span class="token string">'https://bing.ioliu.cn/?p=&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page_count<span class="token punctuation">)</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>    tag_container <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'container'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    tag_item <span class="token operator">=</span> tag_container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> tag_pic <span class="token keyword">in</span> tag_item<span class="token punctuation">.</span>children<span class="token punctuation">:</span>        <span class="token comment"># 获取图片的标题和日期信息并且拼接成图片名</span>        tag_title <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'h3'</span><span class="token punctuation">)</span>        text_title <span class="token operator">=</span> tag_title<span class="token punctuation">.</span>string        a <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'[^\*"/:?\\|&lt;>]'</span><span class="token punctuation">,</span> text_title<span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>      <span class="token comment">#剔除某些不能作为文件名的特殊字符</span>        text_title <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span>        tag_calendar <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'calendar'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        tag_em <span class="token operator">=</span> tag_calendar<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'em'</span><span class="token punctuation">)</span>        text_calendar <span class="token operator">=</span> tag_em<span class="token punctuation">.</span>string        text_pic_name <span class="token operator">=</span> text_calendar <span class="token operator">+</span> <span class="token string">'__'</span> <span class="token operator">+</span> text_title        <span class="token keyword">if</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>pic_path<span class="token operator">+</span>text_pic_name<span class="token operator">+</span><span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token comment"># 获取图片的下载url</span>        tag_download <span class="token operator">=</span> tag_pic<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'ctrl download'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        pic_url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> tag_download<span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>        <span class="token comment">#信息保存到图片中</span>        self<span class="token punctuation">.</span>SavePictureInUrl<span class="token punctuation">(</span>pic_url<span class="token punctuation">,</span> text_pic_name<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> flush<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment">#输出进度信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载所有页的图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetAllPageJpg</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 爬取所有的图片，并保存在输入的路径参数下</span>    max_page_count <span class="token operator">=</span> self<span class="token punctuation">.</span>GetMaxPageCount<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> page_index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> max_page_count<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>GetOnePageJpg<span class="token punctuation">(</span>page_index<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'正在获取，已完成：&#123;:.2f&#125; %'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page_index<span class="token operator">/</span>max_page_count<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> flush<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment">#输出进度信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://bing.ioliu.cn/'</span>         pic_path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/必应每日壁纸/'</span>      getBingImg <span class="token operator">=</span> GetBingImage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> pic_path<span class="token punctuation">)</span>    getBingImg<span class="token punctuation">.</span>GetAllPageJpg<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-源代码"><a href="#3-源代码" class="headerlink" title="3. 源代码"></a>3. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBingImage.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetBingImage.py</a></li></ul><h2 id="四、爬取豆瓣评论"><a href="#四、爬取豆瓣评论" class="headerlink" title="四、爬取豆瓣评论"></a>四、爬取豆瓣评论</h2><h3 id="1-分析下载链接-2"><a href="#1-分析下载链接-2" class="headerlink" title="1. 分析下载链接"></a>1. 分析下载链接</h3><ul><li><p><a href="https://movie.douban.com/subject/30174085/reviews">《怒火重案》的全部影评</a></p></li><li><p>获取完整评论链接。分析发现每篇影评在此链接显示并不完整，要完整链接需要再次跳转。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/IpJ4RzqlyYnjE7L.png" alt="image-20210805221421635"></p></li><li><p>获取下一页的链接。发现每一页都是由原始链接和<code>?start=&#123;n&#125;</code>拼接得到。该信息也可匹配得到，由属性<code>next</code>对应</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/CV76oIPDrUjlmXe.png" alt="image-20210805222302884"></p></li><li><p>通过完整评论链接获取全文内容及其它相关信息（属性<code>article</code>对应内容）</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/vP9w2sNJ4ZidYkC.png" alt="image-20210805221711519"></p><ul><li>同时在这儿我们可以获取标题、作者和日期等相关信息。</li></ul></li></ul><h3 id="2-代码实现-2"><a href="#2-代码实现-2" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>引入相关库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>模拟浏览器拉取数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetHtmlText</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据传入的url请求网站，并返回得到的数据</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 模拟浏览器拉取数据，防止被识别为爬虫并禁掉</span>        user_agent <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'</span><span class="token punctuation">&#125;</span>        html_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers <span class="token operator">=</span> user_agent<span class="token punctuation">)</span>        html_text<span class="token punctuation">.</span>encoding <span class="token operator">=</span> html_text<span class="token punctuation">.</span>apparent_encoding        html_text<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'网页获取失败：'</span><span class="token punctuation">,</span> html_text<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> html_text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取完整评论链接和下一页链接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GetNextPageAndCompleUrls</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.获取下一页评论的链接</span>    <span class="token comment"># 2.获取完整评论的链接</span>    <span class="token comment"># 获取主页信息，并且获取下一页评论的尾部链接</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    tag_next <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'next'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    match <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'href="(.*?)"'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_next<span class="token punctuation">)</span><span class="token punctuation">)</span>    next_page <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> match<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment"># 拼接下一页url如"?start=20"</span>    <span class="token comment"># 获取该页所有评论的完整评论链接</span>    tag_main <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'main-bd'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    comple_urls <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)">'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_main<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> next_page<span class="token punctuation">,</span> comple_urls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>爬取所有评论并存储</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">SaveComments</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 爬取所有评论并储存</span>    count <span class="token operator">=</span> <span class="token number">1</span>                           <span class="token comment"># 评论条数</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>pages<span class="token punctuation">)</span><span class="token punctuation">:</span>        source <span class="token operator">=</span> self<span class="token punctuation">.</span>GetNextPageAndCompleUrls<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        url <span class="token operator">=</span> source<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                     <span class="token comment"># 下一页的链接</span>        comple_urls <span class="token operator">=</span> source<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>             <span class="token comment"># 所有的评论链接,是一个大小为20的列表</span>        <span class="token keyword">for</span> comple_url <span class="token keyword">in</span> comple_urls<span class="token punctuation">:</span>            soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>self<span class="token punctuation">.</span>GetHtmlText<span class="token punctuation">(</span>comple_url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>            <span class="token comment"># 获取评论相关信息</span>            tag_article <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'article'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token comment"># 作者</span>            author <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'&lt;span>(.*?)&lt;/span>'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span>            <span class="token comment"># 时间</span>            time <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;span class="main-meta".*?>(.*?)&lt;/span>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 标题</span>            title <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;span property="v:summary">(.*?)&lt;/span>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 正文</span>            content <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;p data-page="0">(.*?)&lt;/p>'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag_article<span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>            <span class="token comment"># 拼接并存储</span>            head <span class="token operator">=</span> <span class="token string">"标题: "</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> <span class="token string">"作者: "</span> <span class="token operator">+</span> author <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> <span class="token string">"日期: "</span> <span class="token operator">+</span> time <span class="token operator">+</span> <span class="token string">'\n'</span>            content <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>content<span class="token punctuation">)</span>            article <span class="token operator">=</span> head <span class="token operator">+</span> content            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'--------------第&#123;&#125;条评论-----------------------\n'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>article<span class="token punctuation">)</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n\n'</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"写入第&#123;&#125;条评论"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>                count <span class="token operator">+=</span> <span class="token number">1</span>                sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/subject/30174085/reviews'</span>         path <span class="token operator">=</span> <span class="token string">'E:/学习资料/Python/code/豆瓣评论/comments.txt'</span>      pages <span class="token operator">=</span> <span class="token number">3</span>    getDoubanComments <span class="token operator">=</span> GetDoubanComments<span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">,</span> pages<span class="token punctuation">)</span>    getDoubanComments<span class="token punctuation">.</span>SaveComments<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-缺陷-1"><a href="#3-缺陷-1" class="headerlink" title="3. 缺陷"></a>3. 缺陷</h3><ul><li>一些评论无法爬取，应该是网站的反爬机制导致的。最好是利用ip代理解决，可参考：<a href="https://www.cnblogs.com/python147/p/14499657.html">爬虫遇到反爬机制怎么办? 看看我是如何解决的！</a></li></ul><h3 id="4-源代码-1"><a href="#4-源代码-1" class="headerlink" title="4. 源代码"></a>4. 源代码</h3><ul><li><a href="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetDoubanComments.py">https://cdn.jsdelivr.net/gh/321hjd/ImageBed/code/GetDoubanComments.py</a></li></ul><h2 id="五、参考链接"><a href="#五、参考链接" class="headerlink" title="五、参考链接"></a>五、参考链接</h2><ul><li><a href="https://blog.csdn.net/qq_44921056/article/details/114174916">python爬虫随心所欲地爬取百度图片</a></li><li><a href="https://blog.csdn.net/HelloWorldTM/article/details/107049627">python爬虫爬取必应每日高清壁纸</a></li><li><a href="https://www.cnblogs.com/yunlongaimeng/p/9466187.html">python requests的content和text方法的区别</a></li><li><a href="https://www.runoob.com/regexp/regexp-syntax.html">菜鸟教程-正则表达式</a></li><li><a href="https://www.runoob.com/python3/python-urllib.html">菜鸟教程-Python urllib</a></li><li><a href="https://new.qq.com/omn/20210122/20210122A0538600.html">有哪些屡试不爽的反反爬技巧</a></li><li><a href="https://www.cnblogs.com/python147/p/14499657.html">爬虫遇到反爬机制怎么办? 看看我是如何解决的！</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用指令</title>
      <link href="/yyds/b287a84e.html"/>
      <url>/yyds/b287a84e.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">node -v# 查看node.js版本号npm update hexo -g# 升级npm install hexo -g# 安装hexonpm -v# 查看npm版本号npm install package# 安装...npm uninstall package# 卸载hexo init filename# 初始化，只有最开始配置时需要使用hexo server# 开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo server -s# 以静态模式启动hexo server -p portNum# 修改访问端口，默认为4000hexo server -i ip地址# 自定义IPhexo clean# 清除缓存（网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹）hexo generate# 生成静态页面至public目录hexo deploy# 自动生成网站静态文件并部署到设定仓库hexo help# 查看帮助 hexo --version# 查看Hexo的版本hexo -v# 查看Hexo的版本缩写：hexo n &#x3D;&#x3D; hexo new hexo g &#x3D;&#x3D; hexo generate hexo s &#x3D;&#x3D; hexo serverhexo d &#x3D;&#x3D; hexo deployhexo cl &#x3D;&#x3D; hexo clean组合命令：hexo s -g # 生成并本地预览hexo d -g # 生成并上传写文章hexo new newPost# 新建文章（完整命令是hexo new post newpost）hexo new page newPage# 新建页面  hexo new draft newDraft# 新建草稿，想写文章又不想被看见hexo server --draft# 在本地端口开启预览hexo publish draft newDraft# 将草稿文件发到post中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub免费搭建个人博客</title>
      <link href="/yyds/4fee7e8a.html"/>
      <url>/yyds/4fee7e8a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><blockquote><p>本博客的搭建参考了众多博主的搭建教程（文章主体结构参考<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a>最多），因为时间有限且个人属于<strong>前端小白</strong>，故个性化做得不是很好，还有许多需要完善的地方。另外搭建个人博客需要一些<strong>耐心</strong>，很多细节都会导致Bug的出现。本文的内容随意复制，引用的话可以加一个参考链接，谢谢<span class="github-emoji" alias="grin" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">&#x1f601;</span> 。希望大家都能搭建好自己舒适的博客~</p></blockquote><h3 id="搭建原因及思路"><a href="#搭建原因及思路" class="headerlink" title="搭建原因及思路"></a>搭建原因及思路</h3><ul><li><p>原因</p><ul><li>之前是在博客园上写文章，但是总是感觉不舒服，因为有些广告啥的，另外虽然想做一些个性化，但一是因为自己是个前端小白，好多东西不会；二是不太愿意花那么多时间去弄一个不属于自己的东西。没错，第三方的平台会给我一种疏离感，而个人博客个性化极强，从头到尾这么搭建下来，不得不说心理极度舒适<span class="github-emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span>。除此之外，大一的时候上导论课也接触过一些关于服务器、前端、网站等等，也算是种下了一颗种子，但奈何自己太菜又太懒，一直没有下定决心去做。现在趁着大三暑假，花点时间搭建个人博客，也算是解决了一个心结。</li></ul></li><li><p>思路</p><ul><li><p>基于开源框架<code>Hexo</code>搭建博客，直接在<code>GitHub Pages</code>平台上托管博客</p><blockquote><p>其实也可以在<code>Coding</code>或<code>Gitee</code>上部署，<code>Coding</code>我没有尝试，但<code>Gitee</code>由于最近在创建绿色网络环境，<code>Pages</code>暂停服务了，现在没法申请。</p></blockquote></li><li><p>因为打算白嫖，所以没有买个人域名，如果买了个人域名，在<code>GitHub</code>上绑定之后即可访问。我白嫖的地址：<code>https://321hjd.github.io/</code></p></li></ul></li></ul><h3 id="教程结构安排"><a href="#教程结构安排" class="headerlink" title="教程结构安排"></a>教程结构安排</h3><ul><li>第一部分：<code>Hexo</code>的初步搭建以及部署至<code>GitHub Pages</code>上</li><li>第二部分：<code>Hexo</code>的主题更换以及基本配置</li><li>第三部分：个性化。添加各种功能，如评论系统、说说模块等</li><li>第四部分：博客的性能优化</li></ul><h2 id="一、搭建"><a href="#一、搭建" class="headerlink" title="一、搭建"></a>一、搭建</h2><hr><p><code>Hexo</code>的初步搭建以及部署至<code>GitHub Pages</code>上</p><h3 id="工具说明"><a href="#工具说明" class="headerlink" title="工具说明"></a>工具说明</h3><ul><li><p><a href="https://hexo.io/zh-cn/">Hexo</a></p><blockquote><p>是一个基于<code>Node.js</code>的快速, 简洁且高效的静态网站生成框架. 让上百个页面在几秒内瞬间完成渲染. <code>Hexo</code>支持<code>Github Flavored Markdown</code>的所有功能, 甚至可以整合<code>Octopress</code>的大多数插件. 并自己也拥有强大的插件系统.</p></blockquote></li><li><p><a href="https://git-scm.com/download">Git</a></p><blockquote><p><code>Git</code> 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<code>Git</code> 是 <code>Linus Torvalds</code> 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<code>Git</code>与常用的版本控制工具<code>CVS, Subversion</code>等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote></li><li><p><a href="http://nodejs.cn/download/">Node.js</a></p><blockquote><p>简单的说<code>Node.js</code>就是运行在服务端的<code>JavaScript</code>。<code>Node.js</code> 是一个基于<code>Chrome JavaScript</code> 运行时建立的一个平台。<code>Node.js</code>是一个事件驱动I/O服务端<code>JavaScript</code>环境，基于<code>Google</code>的V8引擎，V8引擎执行 <code>JavaScript</code>的速度非常快，性能非常好。</p></blockquote></li><li><p><a href>npm(node package manager)</a></p><blockquote><p>是<code>JavaScript</code>世界的包管理工具,并且是<code>Node.js</code>平台的默认包管理工具</p></blockquote></li></ul><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h3><ul><li><strong>Windows</strong>：到<a href="https://git-scm.com/download/win">Git官网</a>下载<code>.exe</code>文件，安装选项全默认<ul><li>安装完成后使用右键的<code>Git Bash Here</code>，执行<code>git --version</code>可查看版本号</li></ul></li><li><strong>Linux</strong>：只需要一行指令<code>sudo apt install git</code>即可</li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a>：廖雪峰老师写的Git教程非常好，强烈建议大家看看</li></ul><h3 id="2-安装Node-js和npm工具"><a href="#2-安装Node-js和npm工具" class="headerlink" title="2. 安装Node.js和npm工具"></a>2. 安装Node.js和npm工具</h3><ul><li><strong>Windows</strong>：到<a href="http://nodejs.cn/download/">Node.js官网</a>下载，安装选项全默认<ul><li>安装好之后，按<code>win+R</code>打开<code>cmd</code>，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，说明成功</li></ul></li><li><strong>Linux</strong>：<ul><li>安装及配置环境变量：参考<a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-5">Hexo+Github博客搭建完全教程</a></li></ul></li></ul><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装Hexo</h3><ul><li><p>找个地方右键<code>Git Bash Here</code>，后面的指令操作都是使用<code>Git Bash</code></p></li><li><p>配置<code>npm</code>的国内镜像源：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.or<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置完成后，输入<code>npm info hexo</code>，如果配置成功，<code>dist</code>会显示</p><p><code>.tarball: https://registry.nlark.com/hexo/download/hexo-5.4.0.tgz</code></p></li><li><p>通过<code>npm</code>安装<code>Hexo</code>（<code>-g</code>是指定全局安装，之后可以在任意位置使用<code>hexo</code>指令）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后输入<code>hexo -v</code>查看是否安装成功。若出现版本号，则至此已安装完成</p></li><li><p>接下来初始化我们的静态网站，进入到存放博客文件的目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init MyBlog<span class="token comment"># 初始化创建，将在当前目录下新建MyBlog文件夹 </span><span class="token builtin class-name">cd</span> MyBlog<span class="token comment"># 进入这个文件夹，这个文件夹下面将存放所有相关文件</span><span class="token function">npm</span> <span class="token function">install</span><span class="token comment"># 进一步安装hexo所需文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>大概效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/GSlouvgFC4XZc2D.png" alt="指令执行结果"></p></li><li><p>指令执行完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules/</code>：<code>Hexo</code>的依赖包</li><li><code>scaffolds/</code>：生成文章的一些模板</li><li><code>source/</code>：用来存放写的文章</li><li><code>themes/</code>：主题</li><li><code>_config.yml</code>：博客的配置文件</li><li>其它：<code>.github/、.gitignore、_config.landscape.yml、package.json、package-lock.json</code></li></ul></li></ul></li><li><p>打开本地服务器查看博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span class="token comment"># 生成静态网页</span>hexo server<span class="token comment"># 打开本地服务器(默认是4000端口)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>正常情况下应该会出现下图：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/daXQtvF1IqcnkOf.png" alt="Hexo-blog"></p><p>这时博客根目录下会生成<code>public</code>目录，这就是我们部署到<code>GitHub</code>上所需要上传的文件夹。</p></li><li><p><code>Ctrl + C</code>可关闭本地服务器</p></li><li><p><a href="https://321hjd.github.io/yyds/b287a84e.html">常用hexo指令</a></p></li></ul><h3 id="4-注册GitHub账号并新建个人仓库"><a href="#4-注册GitHub账号并新建个人仓库" class="headerlink" title="4. 注册GitHub账号并新建个人仓库"></a>4. 注册GitHub账号并新建个人仓库</h3><ul><li><p><code>GitHub</code>：<a href="https://github.com/">https://github.com/</a></p></li><li><p>新建项目仓库<code>new repository</code>，注意项目名字最好是<strong>和用户名相同</strong>，并加上<code>.github.io</code><strong>后缀</strong>。比如我的<code>repo</code>：<code>321hjd.github.io</code></p></li><li><p>注意勾选上<code>README</code>初始化，可以描述一下该<code>repo</code>是干嘛的</p></li><li><p>然后在项目页面选择<code>Setting</code>并下拉，进入<code>Pages</code>，可以看到分配给自己的Pages（如果没正常显示，可能还差点啥，具体记不太清楚了，当时没记录<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）​​</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/M8bBcsROg5YK3Gk.png" alt="GitHub Pages"></p></li></ul><h3 id="5-生成本地SSH并添加至GitHub"><a href="#5-生成本地SSH并添加至GitHub" class="headerlink" title="5. 生成本地SSH并添加至GitHub"></a>5. 生成本地SSH并添加至GitHub</h3><ul><li><p>生成<code>SSH</code>并添加至<code>GitHub</code>，使得<code>GitHub</code>可以识别本地（<code>name</code>和<code>email</code>可以和注册<code>Github</code>时的不同）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token comment"># name按自己喜好取</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span><span class="token comment"># global代表本机上任一地方的Git用户都是此处设置的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>创建<code>SSH</code></p><blockquote><p><code>ssh</code>，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在<code>GitHub</code>上，这样当你链接<code>GitHub</code>自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过<code>git</code>上传你的文件到<code>GitHub</code>上。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span><span class="token comment"># 刚刚设置的email</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>这时它会告诉你已经生成了<code>.ssh</code>文件夹，应该是在系统盘的用户目录下，如：<code>C:\Users\username\.ssh</code>。找到该文件夹并复制<code>id_rsa.pub</code>中的所有内容</p></li><li><p>打开<code>GitHub</code>，在头像下面点击<code>Settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，随便取一个名字，然后将刚刚复制的内容全部粘贴进去，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/2NeyZpbxc9GH6WJ.png" alt="示例-SSH"></p></li><li><p>再在<code>git bash</code>输入<code>ssh -T git@github.com</code>，若出现如下结果，则添加成功</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/UNw1stIdo9jPTLx.png" alt="示例-success"></p></li><li><p>至此，我们已经可以在本地建立<code>repo</code>并与<code>GitHub</code>连接起来，如<code>pull or push</code></p></li></ul><h3 id="6-将Hexo部署至GitHub"><a href="#6-将Hexo部署至GitHub" class="headerlink" title="6. 将Hexo部署至GitHub"></a>6. 将Hexo部署至GitHub</h3><ul><li><p>这一步，会将<code>Hexo</code>生成的文章部署到<code>GitHub</code>上。</p></li><li><p>首先我们需要安装一个插件<code>deployer-git</code>，这样我们才能用命令部署至<code>GitHub</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后打开博客根目录的<code>_config.yml</code>文件，</p><ul><li><p>修改<code>url</code>部分并新增<code>root</code>，写为</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">url: https:&#x2F;&#x2F;&#123;username&#125;.github.io&#x2F;# Pages地址root: &#x2F;    # 网站根目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改最后一行的配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy:  type: git  repository: https:&#x2F;&#x2F;github.com&#x2F;&#123;username&#125;&#x2F;&#123;yourrepo&#125;  # 示例：https:&#x2F;&#x2F;github.com&#x2F;321hjd&#x2F;321hjd.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>最后执行以下命令，部署成功，此时可以访问<code>GitHub</code>分配的<code>Pages</code>如我的<code>https://321hjd.github.io</code>看到博客主页</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span class="token comment"># 清除缓存（网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹）</span>hexo generate<span class="token comment"># 生成静态页面至public目录</span>hexo deploy<span class="token comment"># 自动生成网站静态文件并部署到设定仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：若这一步完成后访问不了<code>Pages</code>，可以参考本节的<a href="#Q&amp;A-1">Q&amp;A</a>，若还是无法解决，请仔细查看上述步骤是否正常完成，或根据本节的参考链接跳转至其他大佬处查询。</p></blockquote></li></ul><h3 id="7-写文章并发布文章"><a href="#7-写文章并发布文章" class="headerlink" title="7. 写文章并发布文章"></a>7. 写文章并发布文章</h3><blockquote><p>建议写一个test文档，专门用于测试功能是否能正确实现。<br>另外<code>markdown</code>编辑器建议使用<code>Typora</code>，非常好用~</p></blockquote><ul><li><p>新建test文档。在博客根目录下右键打开<code>git bash</code>，执行指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"test"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>此时打开<code>xxx/source/_posts</code>可以发现多了一个<code>test.md</code></li><li>编辑该文件并执行<code>hexo g</code>、<code>hexo s</code>可以本地预览，也可以继续执行<code>hexo d</code>部署至<code>GitHub</code>，这时候就可以在你的<code>Pages</code>上看到发布的文章了</li></ul></li></ul><h3 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&A"></a><span id="Q&amp;A-1">Q&A</span></h3><blockquote><p><strong>Q</strong>：使用GitHub的pages服务，部署到<code>GitHub</code>后访问<code>username.github.io</code>总是无法连接（手机热点/WiFi都不行，不知道为啥）<br><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/ZB2ltXmbpSvs3FV.png" alt="github.io无法连接"><br><strong>A</strong>：在<a href="http://tool.chinaz.com/dns">站长之家</a>查看博客（<code>https://&#123;username&#125;.github.io</code>)的<code>IP</code>地址，修改<code>C:\Windows\System32\drivers\etc\HOSTS</code>文件（需要管理员权限)，将<code>IP地址 &#123;username&#125;.github.io</code>添加到文件最后即可（如<code>185.199.111.153 321hjd.github.io</code>)。（枯了，还是有缺陷，电脑连手机热点的时候没法访问，只能用<code>WiFi</code>，但是手机热点上<code>GItHub</code>感觉又要容易一些<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>，<code>Gitee</code>的<code>Pages</code>服务快点恢复吧😭​)</p></blockquote><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/">使用hexo和gitee搭建免费个人博客详细教程</a></li><li><a href="https://blog.csdn.net/qq_45836474/article/details/107875540?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-3.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-3.control">*.github.io的个人博客网站无法连接的问题</a></li></ul><h2 id="二、主题基本配置"><a href="#二、主题基本配置" class="headerlink" title="二、主题基本配置"></a>二、主题基本配置</h2><h3 id="1-Hexo相关目录文件介绍"><a href="#1-Hexo相关目录文件介绍" class="headerlink" title="1. Hexo相关目录文件介绍"></a>1. Hexo相关目录文件介绍</h3><p>具体都可以参考<a href="https://hexo.io/zh-cn/docs/setup">官方文档</a></p><h4 id="1-1-博客目录结构"><a href="#1-1-博客目录结构" class="headerlink" title="1.1 博客目录结构"></a>1.1 博客目录结构</h4><pre class="line-numbers language-none"><code class="language-none">- node_modules# node.js库目录- public# 生成的网页文件目录- scaffolds# 新文章或页面的模板文件- source# 最常用的目录，后面个性化会新增很多    - _data# 存放一些页面的配置文件    - _posts# 文章存放的目录    - about# “关于”页面    - archives# “归档”页面    - categories# “分类”页面    - friends# “友情链接”页面    - tags# “标签”页面- themes# 存放主题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-Hexo基本配置"><a href="#1-2-Hexo基本配置" class="headerlink" title="1.2 Hexo基本配置"></a>1.2 Hexo基本配置</h4><ul><li><p>网站信息</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">title: Hexo# 网站标题subtitle: &#39;&#39;# 网站副标题description: &#39;&#39;# 网站描述，主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词keywords:# 网站关键词author: John Doe# 作者language: en# 语言，简体中文比如zh-CN(可以后面换了主题后再改)timezone: &#39;&#39;# 时区，比如UTC&#x2F;America&#x2F;Japan，可以不填<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>网址</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">url:# 网址root:# 网站根目录permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;# 文章的永久链接格式permalink_defaults:# 永久链接中各部分的默认值...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>使用默认的<code>permalink</code>的话，生成文章<code>test.md</code>的链接就是</p><p><code>https://&#123;username&#125;.github.io/2021/7/22/test</code></p></li><li><p>后面会将关于<code>permalink</code>的优化（主要是防止修改文章名后链接发生变化）</p></li></ul></li><li><p>主题：<code>theme: landscap</code>，默认是<code>landscape</code>，要更换主题下载后放入<code>themes</code>文件夹下，然后修改此处即可</p></li><li><p><code>Front-matter</code></p><ul><li><p><code>Front-matter</code> 是<code>md</code>文件最上方以 <code>---</code>分隔的区域，用于指定个别文件的变量，具体可参考<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a></p><blockquote><p>注意下面部分属性是需要下载主题以后才能配置的，暂时默认就好，后续更换主题后再改也不迟~</p></blockquote></li></ul><pre class="line-numbers language-none"><code class="language-none">title: &quot;test&quot;# 文章标题，可以和.md文件名不同（注意Windows下文件名特殊字符的问题）date: 2021-07-21 14:46:34 # 文章生成日期author: hjd# 作者img:# 文章封面图片，缺省应该是会按照一定的规则从主题目录下的xxx&#x2F;source&#x2F;medias&#x2F;featureimages&#x2F;中拉取图片coverImg:# 轮播图片top: false# 置顶cover: false# 是否在首页进行轮播toc: true# 目录mathjax: false# 是否支持mathjax，即数学公式password:# 文章密码summary:# 简介tags:# 标签，注意多级标签这样写  - tag1  - tag2  - ...categories:# 分类<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>layout</code></p><ul><li><p>三种默认布局：<code>post、page、draft</code>，即<code>scaffolds</code>目录下的三个模板</p><ul><li>注意：那三个模板中的<code>Front-matter</code>是可以修改的</li></ul></li><li><p><code>post</code>：当使用指令<code>hexo new test</code>时，默认使用的布局是<code>post</code>，即<code>source/_posts/</code>下的文件，完整指令应该是<code>hexo new &#123;layout&#125; &quot;title&quot;</code></p></li><li><p><code>page</code>：执行<code>hexo new page newpage</code>，会在<code>source</code>目录下新建<code>newpage</code>文件夹和其中的<code>index.md</code>，这样访问该<code>newpage</code>的路径就是：</p><p><code>https://&#123;username&#125;.github.io/newpage</code></p></li><li><p><code>draft</code>：草稿，想写文章但不想别人看或者暂时不发出去，即预览或部署时令系统忽略该文章</p><ul><li>执行<code>hexo new draft newdraft</code>，会生成<code>source/_drafts/newdraft.md</code>文件</li><li>想要预览该草稿时，可以执行<code>hexo server --draft</code>指令</li><li>想要将草稿发表致至<code>_posts</code>中，执行<code>hexo publish draft newdraft</code>即可（<code>_draft/</code>中的<code>test.md</code>将被移动至<code>_posts/</code>）</li></ul></li></ul></li></ul><h3 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2. 更换主题"></a>2. 更换主题</h3><blockquote><p>注意，我使用的主题是<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>（<code>README</code>中有配置相关介绍）。当然你也可以使用其它主题比如相当受欢迎的<a href="https://github.com/theme-next">NexT</a>。后续教程全部都是针对<code>matery</code>主题的，部分地方可以相互借鉴，但存在一定差异，请各位看官斟酌。</p><p>关于该主题的特性就不多说了，<code>GitHub</code>上有介绍，大家<code>git clone</code>下来后也可以自行体会，下面主要介绍基本的一些配置和问题的解决。</p><p>关于下面的一些功能实现，建议大家专门写一个<code>test.md</code>来测试每一项功能。</p></blockquote><h4 id="2-1-下载主题并更换"><a href="#2-1-下载主题并更换" class="headerlink" title="2.1 下载主题并更换"></a>2.1 下载主题并更换</h4><ul><li><p>在<code>themes/</code>目录下执行该指令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后将博客根目录下<code>_config.yml</code>中的<code>theme</code>属性值改为<code>hexo-theme-matery</code></p></li></ul><h4 id="2-2-添加404页面"><a href="#2-2-添加404页面" class="headerlink" title="2.2 添加404页面"></a>2.2 添加404页面</h4><ul><li><p>在<code>/source/</code>目录下新建<code>404.md</code></p><pre class="line-numbers language-none"><code class="language-none">title: 404 date: 2021-07-14 00:00:00 type: &quot;404&quot; layout: &quot;404&quot; description: &quot;经典404 Not Found →_→&quot; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后在<code>/themes/hexo-theme-matery/layout</code>目录下新建一个<code>404.ejs</code>文件</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* don't remove. */</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 90.2vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-cover pd-header about-cover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s10 offset-s1 m8 offset-m2 l8 offset-l2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        404                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> page<span class="token punctuation">.</span>description </span><span class="token delimiter punctuation">%></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>banner<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 每天切换 banner 图.  Switch banner image every day.</span>        <span class="token keyword">var</span> bannerUrl <span class="token operator">=</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/medias/banner/'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url('</span> <span class="token operator">+</span> bannerUrl <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/medias/banner/0.jpg'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-3-代码高亮"><a href="#2-3-代码高亮" class="headerlink" title="2.3 代码高亮"></a>2.3 代码高亮</h4><ul><li><p>根据<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>的配置建议，直接使用<code>prismjs</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-prism-plugin<span class="token comment"># 若node_modules中有hexo-prism-plugin插件，先写在</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后修改博客根目录下的<code>_config.yml</code>配置文件</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">highlight:  enable: false# 改为false  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: true# 改为true  preprocess: true  line_number: true  tab_replace: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>默认的<code>prismjs</code>主题是<code>Tomorrow Night</code>，若需要更换，到<a href="https://prismjs.com/download.html#themes=prism&amp;languages=markup+css+clike+javascript">prismjs download page</a>下载喜欢的<code>css</code>文件，然后替换<code>themes/hexo-theme-matery/source/libs/prism/prism.css</code>即可</p><blockquote><p>这里发现了一些问题，如c++、yml等无法高亮，暂时还没找到解决方案⊙﹏⊙∥。</p><font color="red">另外注意代码块前面不能有列表符号，否则不能正常渲染。</font></blockquote></li></ul><h4 id="2-4-数学公式渲染"><a href="#2-4-数学公式渲染" class="headerlink" title="2.4 数学公式渲染"></a>2.4 数学公式渲染</h4><ul><li><p>存在的问题：<code>Hexo</code>默认的渲染引擎<code>hexo-renderer-marked</code>和<code>markdown</code>语法冲突，因为该引擎会将一些特殊的<code>markdown</code>符号转换为相应的<code>HTML</code>标签，比如在<code>markdown</code>语法中，下划线<code>&#39;_&#39;</code>代表斜体，但会被该渲染引擎处理为<code>&lt;em&gt;</code>标签，类似的还有<code>&#39;*&#39;、&#39;&#123;&#39;、&#39;&#125;、&#39;\&#39;</code>等</p></li><li><p>解决方案：</p><ul><li><p>更换<code>Hexo</code>的渲染引擎</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-renderer-marked --save<span class="token comment"># 卸载原来的引擎</span><span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-kramed --save<span class="token comment"># kramed是与marked相近的轻量级渲染引擎，只是在后者的基础上修复了一些bug</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>然后修复一些行内渲染的<code>bug</code>。</p><ul><li>打开博客根目录的<code>node_modules/kramed/lib/rules/inline.js</code>文件，将第11行的<code>escape</code>变量做相应修改（这一步是在原基础上取消了对<code>\,&#123;,&#125;</code>的转义）</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_>])/,</span>escape<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\([`*\[\]()#$+\-.!_>])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token comment">//注意需要逗号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>同时将第20行的<code>em</code>变量做相应修改</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span>em<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\*((?:\*\*|[\s\S])+?)\*(?!\*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>接下来在主题中开启<code>mathjax</code>开关。打开<strong>主题目录</strong>下的配置文件<code>_config.yml</code>，将<code>mathjax</code>默认的<code>false</code>修改为<code>true</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">mathjax:  enable: true  per_page: true  cdn: https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;mathjax&#x2F;2.7.5&#x2F;MathJax.js?config&#x3D;TeX-AMS-MML_HTMLorMML<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>最后在文章的<code>Front-matter</code>中开启<code>mathjax</code>（不需要数学公式的文章建议关闭，因为<code>mathjax</code>的渲染较为耗时）</p><pre class="line-numbers language-none"><code class="language-none">---title: testauthor: hjdmathjax: truetags: ---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>最后还是存在一点问题，比如连续的花括号渲染时会失败。不过在中间加上空格就好了。ps：这是参考教程说的，但可能后面作者已经修复了这个bug，我测试的时候并没有发现有问题<span class="github-emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span></p></blockquote></li></ul><h4 id="2-5-文章图片引用"><a href="#2-5-文章图片引用" class="headerlink" title="2.5 文章图片引用"></a>2.5 文章图片引用</h4><ul><li><p>问题：部署后文章中插入的图片不显示</p></li><li><p>解决方案</p><ul><li>首先安装插件<code>hexo-asset-image</code>：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/7ym0n/hexo-asset-image --save <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>然后打开博客根目录的<code>_config.yml</code>，将<code>post_asset_folder</code>的值修改为<code>true</code>（这时再生成文章时会在<code>_posts</code>目录下生成与文章同名的文件夹）</p><blockquote><p>其实这一步也可以不用，看个人喜好，是不是喜欢把同一篇文章的图片都放在一起</p></blockquote></li><li><p>最后插入图片的路径有三种</p><ul><li>方法一：<code>![](imgname.jpg)</code>（缺点是本地<code>Typora</code>无法预览)</li><li>方法二：相对路径。<code>![](article/imgname.jpg</code>)（这种方法建议打开上一步那个<code>post_asset_folder</code>开关；或者直接建一个文件夹专门存放所有文章的图片)</li><li>方法三：<code>&#123;% asset_img example.jpg This is an example image %&#125;</code>（参考自官方文档）</li></ul></li></ul><blockquote><p>当然还有一种方法是直接将图片上传到图床，然后直接引用图床链接。</p></blockquote></li></ul><h4 id="2-6-添加表情支持"><a href="#2-6-添加表情支持" class="headerlink" title="2.6 添加表情支持"></a>2.6 添加表情支持</h4><ul><li><p>目的：令博客可以使用<code>markdown</code>的表情语法（如<code>&lt;span class=&quot;github-emoji&quot; alias=&quot;cry&quot; style=&quot;&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8&quot;&gt;&amp;#x1f622;&lt;/span&gt;</code>是<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）</p></li><li><p>最开始是根据网上很多的教程包括<code>matery</code>的官方<code>README</code>文件的描述，安装<code>hexo-filter-github-emojis</code>，但奈何安装时总是报错，最后使用了<code>next-theme</code>主题的<code>emoji</code>插件：<code>hexo-filer-emoji</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># npm install hexo-filter-github-emojis --save# 大家可以先试试这个</span><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-emoji --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>然后配置博客根目录配置文件<code>_config.yml</code>的<code>emoji</code>属性即可</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 添加GitHub的emoji支持 emoji:   enable: true   className: github-emoji   styles:   customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-7-添加建站时间"><a href="#2-7-添加建站时间" class="headerlink" title="2.7 添加建站时间"></a>2.7 添加建站时间</h4><ul><li><p>修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，在最后加上：（原来的文件中似乎有这部分代码，看情况修改吧）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>javascript</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)        year - 作为date对象的年份，为4位年份值        month - 0-11之间的整数，做为date对象的月份        day - 1-31之间的整数，做为date对象的天数        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数        minutes - 0-59之间的整数，做为date对象的分钟数        seconds - 0-59之间的整数，做为date对象的秒数        microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span>        <span class="token keyword">var</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">09</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//北京时间2018-2-13 00:00:00</span>        <span class="token keyword">var</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>        <span class="token keyword">var</span> diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"本站已运行 "</span> <span class="token operator">+</span>diffYears<span class="token operator">+</span><span class="token string">" 年 "</span><span class="token operator">+</span>diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分钟 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后在前面如<code>copyright</code>声明后加上以下代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sitetime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-face<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(ง •_•)ง<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-8-不蒜子初始化计数"><a href="#2-8-不蒜子初始化计数" class="headerlink" title="2.8 不蒜子初始化计数"></a>2.8 不蒜子初始化计数</h4><ul><li><p>修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，在最后加上：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> int <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>fixCount<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 50ms周期检测函数</span><span class="token keyword">var</span> pvcountOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 初始化首次数据</span><span class="token keyword">var</span> uvcountOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">function</span> <span class="token function">fixCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> pvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"display"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> uvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加上初始数据</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 停止检测</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后把上面关于不蒜子的一段代码增加两个<code>style=&#39;display:none&#39;</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalTraffic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-eye<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'siteTotalVisits'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalNumberOfvisitors<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>   <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'siteTotalVisitors'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>注意这里除了增加了两个<code>style=&#39;display:none&#39;</code>，还修改了两个<code>&lt;span&gt;</code>的位置，顺带也解决了后面不蒜子计数与<code>live2d</code>模型的冲突。如果要看每一步的操作，请移步洪卫大佬的教程：<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></p></blockquote><h4 id="2-9-字数统计、访问人数及其它"><a href="#2-9-字数统计、访问人数及其它" class="headerlink" title="2.9 字数统计、访问人数及其它"></a>2.9 字数统计、访问人数及其它</h4><ul><li><p>添加文章总字数、站点访问人数、站点文章总字数以及文章更新日期</p><ul><li>下载<code>hexo-wordcount</code>插件</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改主题配置文件<code>_config.yml</code>，激活配置即可</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">postInfo:  date: true        # 发布日期  update: true      # 更新日期  wordCount: true   # 文章字数统计  totalCount: true  # 站点总文章字数  min2read: true    # 文章阅读时长  readCount: false  # 文章阅读次数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意此时还不能看到站点文章总字数的统计，还需修改<code>/themes/hexo-theme-matery/layout/_partial</code>中的<code>footer.ejs</code>，添加如下代码</li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>postInfo<span class="token punctuation">.</span>totalCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-chart-area<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>站点总字数:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>     <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">totalcount</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>字<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启首页轮播功能</p><ul><li>配置<code>source/_data/cover.json</code>或直接将文章<code>Front-Matter</code>中的<code>cover</code>属性置为true即可</li></ul></li><li><p>添加搜索功能</p><ul><li><p>下载<code>hexo-generator-search</code>插件：</p><p><code>npm install hexo-generator-search --save</code></p></li><li><p>然后在根目录下的<code>_config.yml</code>中配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>修改<code>scaffolds</code>下模板的<code>Font-matter</code>，放出我的：</p><ul><li><p><code>post</code>和<code>draft</code>建议用一样的</p><pre class="line-numbers language-none"><code class="language-none">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;author: hjdimg:coverImg:top: falsecover: falsetoc: truemathjax: falsepassword:summary:tags:categories:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>page</code></p><pre class="line-numbers language-none"><code class="language-none">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;type: layout: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>其它：如友情链接、关于等页面可参考<a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></p></li></ul><h3 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://www.jianshu.com/p/7ab21c7f0674">在Hexo中渲染MathJax公式</a></li><li><a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></li><li><a href="https://github.com/LuckyZmj/LuckyBlog">Luckysec博客源码：xx/matery/layout/_partial/footer.ejs</a></li></ul><h2 id="三、个性化"><a href="#三、个性化" class="headerlink" title="三、个性化"></a>三、个性化</h2><h3 id="1-添加博客动态标签"><a href="#1-添加博客动态标签" class="headerlink" title="1. 添加博客动态标签"></a>1. 添加博客动态标签</h3><ul><li><p>打开<code>themes/hexo-theme-matery/layout/layout.ejs</code>，在对应位置添加如下代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">       <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span> st<span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"🙈😜有本事点我"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"( ఠൠఠ )ﾉ啊你还真点啊"</span><span class="token punctuation">,</span>                                                                               st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile                     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="2-修改壁纸、添加live2d模型"><a href="#2-修改壁纸、添加live2d模型" class="headerlink" title="2. 修改壁纸、添加live2d模型"></a>2. 修改壁纸、添加<code>live2d</code>模型</h3><ul><li><p>修改壁纸：在<code>themes\Matery\source\css\matery.css</code>文件中找到<code>body</code>，修改如下</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*background-color: #eaeaea;*/</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span><span class="token punctuation">)</span> 0% 0% / cover<span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://i.loli.net/2021/07/17/kYX7dl5qtKpVeMv.jpg"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span><span class="token property">background-attachment</span><span class="token punctuation">:</span> fiexd<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #34495e<span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加<code>live2d</code>模型</p><ul><li><p>安装依赖：<code>npm install --save hexo-helper-live2d</code></p></li><li><p>安装模型（可以上网搜搜有哪些模型，这里以狗狗为例），先在博客根目录的<code>_config.yml</code>中新增配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># live2D模型配置live2d:   enable: true  scriptFrom: local  pluginRootPath: live2dw&#x2F;   pluginJsPath: lib&#x2F;   pluginModelPath: assets&#x2F;  tagMode: false   debug: false   model:      use: live2d-widget-model-wanko   display:      position: right      hOffset: 100      # 水平偏移      vOffset: -50      # 垂直偏移      width: 150       height: 300   mobile: # 手机显示开关      show: true   react:       opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后执行指令即可：<code>npm install live2d-widget-model-wanko</code></p></li></ul><blockquote><p>注意：这里模型与不蒜子似乎有冲突，不过前面添加建站时间部分已经顺带解决了。即修改<code>&lt;span&gt;</code>的部分。</p></blockquote></li></ul><h3 id="3-取消渐变色、滚动条美化、直达评论按钮"><a href="#3-取消渐变色、滚动条美化、直达评论按钮" class="headerlink" title="3. 取消渐变色、滚动条美化、直达评论按钮"></a>3. 取消渐变色、滚动条美化、直达评论按钮</h3><ul><li><p>取消渐变色：在<code>themes\Matery\source\css\matery.css</code>找到<code>.bg-cover:after</code>，注释掉即可</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*去除首页蒙版*/</span><span class="token comment">/*.bg-cover:after &#123;    -webkit-animation: rainbow 60s infinite;    animation: rainbow 60s infinite;&#125;*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>滚动条美化：在<code>themes\Matery\source\css\matery.css</code>样式添加如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 滚动条 */</span><span class="token selector">::-webkit-scrollbar-thumb</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #00FFFF<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 25%<span class="token punctuation">,</span>transparent 25%<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 75%<span class="token punctuation">,</span>transparent 75%<span class="token punctuation">,</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">::-webkit-scrollbar-track</span> <span class="token punctuation">&#123;</span>   <span class="token property">background-color</span><span class="token punctuation">:</span> #CCFFCC<span class="token punctuation">;</span>   <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span>     <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>直达评论按钮（这一条可以等添加完<code>Valine</code>评论模块再做）</p><ul><li><p>新建文件<code>themes\Matery\layout\_partial\back-comment.ejs</code>,粘贴如下代码（我这里评论是<code>valine</code>，直接填写的<code>valine</code>的id——<code>href=&quot;#vcomments&quot;</code>,如果是其他评论，对应修改即可。）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 直达评论 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>to_comment<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment-scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-floating btn-large waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#vcomments<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>直达评论<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes\Matery\layout\_partial\valine.ejs</code>文末添加一条，引用第一步的内容</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>增加样式。在<code>themes\Matery\source\css\matery.css</code>添加内容如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*直达评论按钮样式*/</span><span class="token selector">.comment-scroll</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>   <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.comment-scroll .btn-floating</span> <span class="token punctuation">&#123;</span>   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom right<span class="token punctuation">,</span> #FF9999 0%<span class="token punctuation">,</span> #00FFFF 100%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.comment-scroll .btn-floating i</span> <span class="token punctuation">&#123;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="4-导航栏优化"><a href="#4-导航栏优化" class="headerlink" title="4. 导航栏优化"></a>4. 导航栏优化</h3><h4 id="4-1-菜单修改"><a href="#4-1-菜单修改" class="headerlink" title="4.1 菜单修改"></a>4.1 菜单修改</h4><ul><li><p>这里修改了一些菜单的布局，主要是做了如下改变：</p><ul><li>将时轴、标签、分类放入归档页面下</li><li>新增一级菜单-清单，并在其下添加相册、音乐、书单、电影、资源等页面</li><li>新增一级菜单-说说、工具箱</li></ul></li><li><p>方法：</p><ul><li><p>修改主题下的<code>_config.yml</code>（参考注释即可），如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  Index:    url: &#x2F;    icon: fas fa-home  Archives:    icon: fas fa-archive    children:      - name: 时轴        url: &#x2F;archives        icon: fas fa-paper-plane      - name: 分类         url: &#x2F;categories        icon: fas fa-bookmark       - name: 标签        url: &#x2F;tags        icon: fas fa-tags  List:    icon: fas fa-heartbeat    children:      - name: 音乐         url: &#x2F;music        icon: fas fa-music      - name: 相册        url: &#x2F;galleries        icon: fas fa-image      - name: 书单        url: &#x2F;books        icon: fas fa-list      - name: 电影        url: &#x2F;films        icon: fas fa-film      - name: 资源        url: &#x2F;resources        icon: fas fa-cloud-download-alt  About:    url: &#x2F;about    icon: fas fa-user-circle  Artitalk:    url: &#x2F;artitalk    icon: fas fa-heart  Contact:    url: &#x2F;contact    icon: fas fa-comments  Friends:    url: &#x2F;friends    icon: fas fa-address-book  Tools:    url: &#x2F;tools    icon: fas fa-toolbox<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>其中的<code>icon</code>图标可以到<a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">Font Awesome</a>中选择自己喜欢的</li></ul></li><li><p>然后需要新建对应的<code>page</code>（方法同建立关于、友链等页面）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page musichexo new page gallerieshexo new page bookshexo new page filmshexo new page resourceshexo new page artitalkhexo new page tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>记得将对应生成的<code>index.md</code>中的<code>type</code>和<code>layout</code>都改为对应的标题</strong></li></ul></li><li><p>汉化。需要修改两个文件：<code>themes/hexo-theme-matery/layout/_partial/</code>下的<code>navigation.ejs</code>和<code>mobile-nav.ejs</code>，模仿源代码添加几行代码即可</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">var menuMap = new Map();menuMap.set("Index", "首页");menuMap.set("Tags", "标签");menuMap.set("Categories", "分类");menuMap.set("Archives", "归档");menuMap.set("About", "关于");menuMap.set("Artitalk", "说说");menuMap.set("Contact", "留言板");menuMap.set("Friends", "友情链接");menuMap.set("List", "清单"); menuMap.set("Tools", "工具箱");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="4-2-相册"><a href="#4-2-相册" class="headerlink" title="4.2 相册"></a>4.2 相册</h4><ul><li><p>上一步已经新建了<code>galleries</code>页面，其<code>type</code>和<code>layout</code>均为<code>galleries</code></p></li><li><p>添加<code>themes/hexo-theme-matery/source/css/gallery.css</code>文件</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.gallery-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-box</span><span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> center center no-repeat<span class="token punctuation">;</span>  <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box .gallery-cover-img</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-item .gallery-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>  <span class="token property">column-count</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">-moz-page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">-webkit-column-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item img</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item .photo-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #dddddd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*适配移动端布局*/</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes/hexo-theme-matery/layout/</code>目录下新建<code>galleries.ejs</code>和<code>gallery.ejs</code>文件</p><blockquote><p>注意：此处<code>galleries.ejs</code>是整个相册页面的配置，<code>gallery.ejs</code>是单独某一个相册的配置。</p></blockquote><ul><li>这是<code>galleries.ejs</code>文件</li></ul><blockquote><p>注意其中<code>https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/</code>是我使用<code>CDN</code>加速后的图床链接（后面会讲到图床搭建和<code>CDN</code>加速，可以先使用我的看看效果，这也是需要修改的地方，具体如何取决于你的<code>/source/_data/galleries.json</code>如何配置）</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;css&#x2F;gallery.css&quot;&gt;&lt;%- partial(&#39;_partial&#x2F;bg-cover&#39;) %&gt;&lt;main class&#x3D;&quot;content&quot;&gt;    &lt;div class&#x3D;&quot;container&quot;&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) &#123; %&gt;        &lt;% var galleries &#x3D; site.data.galleries; %&gt;        &lt;div class&#x3D;&quot;gallery-wrapper row&quot;&gt;            &lt;% for (var i &#x3D; 0, len &#x3D; galleries.length; i &lt; len; i++) &#123; %&gt;            &lt;% var gallery &#x3D; galleries[i]; %&gt;            &lt;div class&#x3D;&quot;col s6 m4 l4 xl3 gallery-box&quot;&gt;                &lt;a href&#x3D;&quot;.&#x2F;&lt;%- gallery.name %&gt;&quot; class&#x3D;&quot;gallery-item&quot; data-aos&#x3D;&quot;zoom-in-up&quot;&gt;                    &lt;div class&#x3D;&quot;gallery-cover-box&quot; style&#x3D;&quot;background-image: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;ImageBed&#x2F;galleries&#x2F;&lt;%- gallery.cover%&gt;)&quot;&gt;                        &lt;!--&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;ImageBed&#x2F;galleries&#x2F;&lt;%- gallery.cover %&gt;&quot; alt&#x3D;&quot;img&quot; class&#x3D;&quot;gallery-cover-img&quot;&gt;--&gt;                    &lt;&#x2F;div&gt;                    &lt;p class&#x3D;&quot;gallery-name&quot;&gt;                        &lt;%- gallery.name %&gt;                    &lt;&#x2F;p&gt;                &lt;&#x2F;a&gt;            &lt;&#x2F;div&gt;            &lt;% &#125; %&gt;        &lt;&#x2F;div&gt;        &lt;% &#125; %&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;main&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这是<code>gallery.ejs</code>文件，同样<code>url</code>需要修改为自己的图床地址</li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>fancybox </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>justifiedGallery </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这儿的网址：https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span><span class="token number">321</span>hjd<span class="token operator">/</span>ImageBed<span class="token operator">/</span>galleries<span class="token operator">/</span> 改为你图片放的位置的网址，比如你用Github图床的话，就改为你图床的网址 <span class="token operator">--</span><span class="token operator">></span>    imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\"https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\"\n"</span> <span class="token operator">+</span>            <span class="token string">"     class=\"photo-item\" rel=\"example_group\"\n"</span> <span class="token operator">+</span>            <span class="token string">"     data-fancybox=\"images\">\n"</span> <span class="token operator">+</span>            <span class="token string">"      &lt;img src=\"https://cdn.jsdelivr.net/gh/321hjd/ImageBed/galleries/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\"\n"</span> <span class="token operator">+</span>            <span class="token string">"       alt="</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">">\n"</span> <span class="token operator">+</span>            <span class="token string">"    &lt;/a>"</span><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span><span class="token comment">&lt;!--   "  &lt;p class=\"photo-name\">" + photo + "&lt;/p>\n" +文件名先注释掉  --></span><span class="token comment">&lt;!-- 不加密写法 --></span><span class="token comment">&lt;!-- &lt;div class="container">    &lt;div class="photo-wrapper" >        &lt;div class="waterfall" id="mygallery">            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>        &lt;/div>    &lt;/div>&lt;/div> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token comment">&lt;!-- 加密写法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>password <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token comment">&lt;!-- &lt;script src="/lib/crypto-js.js">&lt;/script> --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/crypto-js.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/gallery-encrypt.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-security<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-input-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hbe-form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span>  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码查看内容<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-decrypt<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn_decrypt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>解密<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>encrypt-blog<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">aes</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">,</span> page<span class="token punctuation">.</span>password<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>encrypt-blog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>lazyload </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>fancybox </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>justifiedGallery </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// $(".waterfall").lazyload();</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//  不加密写法</span><span class="token comment">// $("#mygallery").justifiedGallery(&#123;margins: 5, rowHeight: 150&#125;);</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#encrypt-blog"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>margins<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> rowHeight<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>source/galleries/</code>下创建相册（比如“壁纸”，用于下面测试）文件夹，并在其下创建<code>index.md</code>，并设置<code>Front-mattery</code>（注意这里的<code>type</code>和<code>layout</code>都是<code>gallery</code>而非<code>galleries</code>，这与前面的<code>gallery.ejs、galleries.ejs</code>相关）</p><pre class="line-numbers language-none"><code class="language-none">---title: 壁纸date: 2021-07-19 20:27:35type: gallerylayout: gallery---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在根目录下新建<code>/source/_data/galleries.json</code>，添加如下内容</p><blockquote><p>这里的<code>name</code>必须和上一步的<code>title</code>一致。另外我的图床图片地址是<code>/galleries/星空/01.jpg</code>，所以前面<code>ejs</code>文件中的<code>url</code>是那样。</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"壁纸"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"星空/01.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"壁纸"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"星空/01.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/02.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/03.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/04.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/05.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/06.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/07.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/08.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/09.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/10.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/11.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/12.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/13.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/14.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/15.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"星空/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>现在编译一下应该可以显示了，但是布局很难看且不能放大。因为还需要两个插件<code>fancybox</code>和<code>justifiedGallery</code>。（<code>gallery.ejs</code>文件里引用了，但我们没下载这俩插件）</p><ul><li><p>打开主题目录下的配置文件<code>_config.yml</code>，找到存放前端库链接的地方（可搜索libs），将两插件对应的<code>css</code>和<code>js</code>链接写在那儿（不同的版本可以到官网上去找）。</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"> css:# 新增插件-用于调整相册布局，可以令图片具有点击放大功能，且布局美观   fancybox: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.css        justifiedGallery: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;justifiedGallery&#x2F;3.7.0&#x2F;css&#x2F;justifiedGallery.min.css  js:   # 新增插件-用于调整相册布局   fancybox: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;fancybox&#x2F;3.5.7&#x2F;jquery.fancybox.min.js        justifiedGallery: https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;justifiedGallery&#x2F;3.7.0&#x2F;js&#x2F;jquery.justifiedGallery.min.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>现在编译就可以看到比较舒适的相册页面了。</p></li></ul></li><li><p>相册加密（<code>AES</code>加密）</p><ul><li><p>具体实现可以参考：<a href="https://liyangzone.com/2019/07/30/%E4%BD%BF%E7%94%A8AES%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86Hexo%E7%9B%B8%E5%86%8C/">使用AES算法加密Hexo相册</a></p></li><li><p>在主题根目录下新建目录及文件：<code>scripts/helpers/encrypt.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* global hexo */</span><span class="token string">'use strict'</span><span class="token punctuation">;</span><span class="token keyword">const</span> CryptoJS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto-js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>helper<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'aes'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span>password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  content <span class="token operator">=</span> <span class="token function">escape</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  content <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token function">String</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> content<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后修改<code>gallery.ejs</code>文件（这一步不需要做，因为前面那段代码其实已经写好了，就是“加密写法”那里）</p></li><li><p>修改<code>/themes/hexo-theme/matery/source/css/my.css</code>，美化解密按钮</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.hbe-input-container  .btn-decrypt</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #3f90ff<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>手动安装<code>crypto-js</code>插件，到<code>node_modules/crypto-js/</code>下找到<code>crypto-js.js</code>文件，并复制到主题目录下的<code>source/js/</code>下（注意<code>gallery.ejs</code>中的引用目录可能需要修改<code>&lt;script src=&quot;/js/crypto-js.js&quot;&gt;&lt;/script&gt;</code>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> crypto-js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后在主题目录的<code>source/js/</code>下新建<code>gallery-encrypt.js</code>，将我的代码粘进去就好（主要是不知道原来是从哪儿找来的了<span class="github-emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span>）</p><p><a href="https://cdn.jsdelivr.net/gh/321hjd/CDN-for-Hexo@CDN-for-Hexo-0.0.3/source/js/gallery-encrypt.js">https://cdn.jsdelivr.net/gh/321hjd/CDN-for-Hexo@CDN-for-Hexo-0.0.3/source/js/gallery-encrypt.js</a></p></li><li><p>最后需要在相册比如“壁纸”目录下<code>index.md</code>中的<code>Front-matter</code>中添加<code>password</code>，自己设置一个密码就好，如：<code>password: 123</code></p></li></ul></li></ul><h4 id="4-3-音乐模块"><a href="#4-3-音乐模块" class="headerlink" title="4.3 音乐模块"></a>4.3 音乐模块</h4><blockquote><p>这里我是设置了一个吸底模式的音乐模块和一个单独音乐页面。如果愿意就把音乐页面放在主页，根据注释操作即可。另外注意歌单歌曲过多可能会显示不出来，尽量少一些为好。（建议QQ音乐，网易云经常抽风，不知道为啥）</p></blockquote><ul><li><p>吸底模式：参考主题目录的<code>_config.yml</code>注释即可</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 是否在首页显示音乐.music:  enable: true  title: #非吸底模式有效    enable: true    show: 听听音乐  autoHide: true    # hide automaticaly  server: netease   #requiremusic platform: netease(网易云), tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 6862612332     #requiresong id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: true      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠  hideLrc: true     # 隐藏歌词# 提示： server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。 type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手） id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>单独音乐页面</p><ul><li><p>同样配置主题目录下的<code>_config.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 单独的音乐页面.（注意是musics，与之前的区分开）musics:  enable: true  url: &#x2F;music# 这是前面菜单优化部分新建的音乐页面的路径  title:          #非吸底模式有效    enable: true    show: 听听音乐  server: netease   #require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 6862612332     #require song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false  # 列表默认折叠  listMaxHeight: &quot;525px&quot; #列表最大高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将<code>themes/hexo-theme-matery/layout/_widget/</code>下的<code>music.ejs</code>复制一份命名为<code>musics.ejs</code></p></li><li><p>然后再在<code>themes/hexo-theme-matery/layout/</code>下新建<code>musics.ejs</code>文件，粘贴代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* don't remove. */</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 75vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutme<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container about-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>music-player<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>musics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>musics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/musics'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">                        <span class="token selector">.bubbles > .particle</span> <span class="token punctuation">&#123;</span>                            <span class="token comment">/*初始透明度为0*/</span>                            <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                            <span class="token comment">/*初始颜色为荧光色，透明度为0.7*/</span>                            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>128<span class="token punctuation">,</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">/*使用bubbles动画，持续时间18秒，缓慢进入，无限循环*/</span>                            <span class="token property">animation</span><span class="token punctuation">:</span> bubbles 18s ease-in infinite<span class="token punctuation">;</span>                            <span class="token property">border-radius</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token comment">/*css keyframes 动画*/</span>                        <span class="token atrule"><span class="token rule">@keyframes</span> bubbles</span> <span class="token punctuation">&#123;</span>                            <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                            <span class="token selector">5%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>                                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -20%<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                            <span class="token comment">/*这里-8000%表示是气泡的8000%*/</span>                            <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>                                <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -8000%<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>                        <span class="token comment">&lt;!-- 这里让元素宽度100%（和页面等宽） --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>particletext bubbles<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://code.jquery.com/jquery-3.1.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">                          <span class="token keyword">function</span> <span class="token function">bubbles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                             $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".particletext.bubbles"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">var</span> bubblecount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">;</span>                                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> bubblecount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                   <span class="token keyword">var</span> size <span class="token operator">=</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                   <span class="token comment">//这里的animation-delay很重要，关系到你的特效是否看上去是连续无断层的，上一步中css是18秒，所以这一步中延迟时间就设置成$.rnd(0,180)/10)</span>                                   <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="particle" style="top:'</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%; left:'</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%;width:'</span> <span class="token operator">+</span> size <span class="token operator">+</span> <span class="token string">'px; height:'</span> <span class="token operator">+</span> size <span class="token operator">+</span> <span class="token string">'px;animation-delay: '</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">rnd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'s;">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">&#125;</span>                             <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token punctuation">&#125;</span>                          jQuery<span class="token punctuation">.</span><span class="token function-variable function">rnd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                              m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>                              n <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">+</span> m<span class="token punctuation">;</span>                          <span class="token punctuation">&#125;</span>                          <span class="token function">bubbles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>                                            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="4-4-快速导航"><a href="#4-4-快速导航" class="headerlink" title="4.4 快速导航"></a>4.4 快速导航</h4><blockquote><p>这一部分暂时没做完个性化，仅仅是将别人的导航页面copy过来了而已。下面只介绍基本方法。另外其实有两种，一种是真正的导航页面；另一种是简单的浏览器主页。我比较偏向于简约版的后者。</p></blockquote><ul><li><p>绕过渲染。因为hexo 编译会对主题模板进行渲染之后生成静态页面，但是这个导航的网站本身就是 <code>html</code>文件，因此不需要渲染，那么跳过渲染就需要配置根目录<code>_config.yml</code>中的 <code>skip_render</code> 项</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 指定目录跳过hexo渲染skip_render:  - &#39;tools&#x2F;**&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>工具箱页面在4.1节已经新建完成。</p></li><li><p>添加<a href="https://github.com/WebStackPage/WebStackPage.github.io">WebStackPage导航网站</a>（这是一位名叫 Viggo 的UI设计师的公益项目，开源的静态网站，源码本身就是成品，下载代码之后就可以直接使用。）</p><ul><li><p>从官方项目地址克隆到本地</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/WebStackPage/WebStackPage.github.io <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将里面的文件放在博客根目录的<code>source/tools/</code>下即可</p></li><li><p>这时候编译进入&lt;工具箱&gt;页面应该能看到如下效果</p></li></ul><p><img src="https://camo.githubusercontent.com/cd5db39ba59752822b7770d5074571fc4db1660af9066dfdb9953ff53ed7195e/687474703a2f2f7777772e776562737461636b2e63632f6173736574732f696d616765732f707265766965772e676966" alt="WebStackPage"></p><ul><li>然后后续自己修改细节即可</li></ul></li><li><p>添加<a href="https://blog.5iux.cn/4679.html">D.Young大叔设计的主页</a></p><ul><li>同上，克隆到本地然后放入<code>tools/</code>再编译即可。效果如下：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/1m2MPto9GQdY5lT.png" alt="主页"></p></li></ul><h3 id="5-Valine评论模块"><a href="#5-Valine评论模块" class="headerlink" title="5. Valine评论模块"></a>5. Valine评论模块</h3><h4 id="5-1-Valine评论模块添加"><a href="#5-1-Valine评论模块添加" class="headerlink" title="5.1 Valine评论模块添加"></a>5.1 Valine评论模块添加</h4><ul><li><p>到<a href="https://leancloud.app/">leancloud官网</a>注册并创建应用（建议使用<strong>国际版</strong>，因为后面的<code>artitalk</code>模块使用国际版更加方便）</p></li><li><p>修改主题目录下配置文件<code>_config.yml</code>，激活<code>Valine</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">valine:  enable: true  appId: XXXXXXXXXXXXXXXXXXXXX# appId和appKey是在leancloud注册后获取的（设置-&gt;应用凭证）  appKey: XXXXXXXXXXXXXXXXXXXX  notify: true  verify: true  visitor: true  avatar: &#39;mm&#39; # Gravatar style : mm&#x2F;identicon&#x2F;monsterid&#x2F;wavatar&#x2F;retro&#x2F;hide  pageSize: 10  placeholder: &#39;just go go&#39; # Comment Box placeholder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>为添加博主、访客、小伙伴等tag，以及直接通过邮箱或QQ拉取头像，直接使用大佬魔改后的<code>Valine.min.js</code>文件，并覆盖<code>themes/hexo-theme-matery/source/libs/valine/Valine.min.js</code></p></li><li><p>然后配置<code>themes/hexo-theme-matery/layout/_partia/valine.ejs</code>文件</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> el<span class="token operator">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span> enableQQ<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enableQQ </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>  appId<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appId </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>appKey<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appKey </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> visitor<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>visitor </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>avatar<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>avatar </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>pageSize<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>pageSize </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> lang<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">==</span> <span class="token string">"zh-CN"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>zh-cn<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>en<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span> placeholder<span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>placeholder </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>meta<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span> <span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>requiredFields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span><span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//必填项</span>tagMeta<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"博主"</span><span class="token punctuation">,</span> <span class="token string">"小伙伴"</span><span class="token punctuation">,</span> <span class="token string">"访客"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>master<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"d502ea4605b856df3b9b73bad1e8592e"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">// 我的邮箱（MD5加密后）似乎只能用小写，大写无法识别</span><span class="token comment">// friends: // 小伙伴MD5加密后的邮箱</span><span class="token comment">// metaPlaceholder: // 昵称和邮箱无内容时的显示内容</span>recordIP<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> emojiCDN<span class="token operator">:</span> <span class="token string">'//i0.hdslb.com/bfs/emote/'</span><span class="token punctuation">,</span><span class="token comment">// 表情title和图片映射</span>emojiMaps<span class="token operator">:</span> <span class="token punctuation">&#123;</span>             <span class="token comment">//第一个是自定义表情的示例，模仿添加即可</span><span class="token string">"让我瞅瞅"</span><span class="token operator">:</span> <span class="token string">"https://i.loli.net/2021/07/18/bzTH82kc7KnsBXC.jpg"</span><span class="token punctuation">,</span><span class="token string">"tv_doge"</span><span class="token operator">:</span> <span class="token string">"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_亲亲"</span><span class="token operator">:</span> <span class="token string">"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_偷笑"</span><span class="token operator">:</span> <span class="token string">"bb690d4107620f1c15cff29509db529a73aee261.png"</span><span class="token punctuation">,</span><span class="token string">"tv_再见"</span><span class="token operator">:</span> <span class="token string">"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_冷漠"</span><span class="token operator">:</span> <span class="token string">"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png"</span><span class="token punctuation">,</span><span class="token string">"tv_发怒"</span><span class="token operator">:</span> <span class="token string">"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png"</span><span class="token punctuation">,</span><span class="token string">"tv_发财"</span><span class="token operator">:</span> <span class="token string">"34db290afd2963723c6eb3c4560667db7253a21a.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_可爱"</span><span class="token operator">:</span> <span class="token string">"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_吐血"</span><span class="token operator">:</span> <span class="token string">"09dd16a7aa59b77baa1155d47484409624470c77.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_呆"</span><span class="token operator">:</span> <span class="token string">"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png"</span><span class="token punctuation">,</span><span class="token string">"tv_呕吐"</span><span class="token operator">:</span> <span class="token string">"9f996894a39e282ccf5e66856af49483f81870f3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_困"</span><span class="token operator">:</span> <span class="token string">"241ee304e44c0af029adceb294399391e4737ef2.png"</span><span class="token punctuation">,</span><span class="token string">"tv_坏笑"</span><span class="token operator">:</span> <span class="token string">"1f0b87f731a671079842116e0991c91c2c88645a.png"</span><span class="token punctuation">,</span><span class="token string">"tv_大佬"</span><span class="token operator">:</span> <span class="token string">"093c1e2c490161aca397afc45573c877cdead616.png"</span><span class="token punctuation">,</span><span class="token string">"tv_大哭"</span><span class="token operator">:</span> <span class="token string">"23269aeb35f99daee28dda129676f6e9ea87934f.png"</span><span class="token punctuation">,</span><span class="token string">"tv_委屈"</span><span class="token operator">:</span> <span class="token string">"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png"</span><span class="token punctuation">,</span><span class="token string">"tv_害羞"</span><span class="token operator">:</span> <span class="token string">"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png"</span><span class="token punctuation">,</span><span class="token string">"tv_尴尬"</span><span class="token operator">:</span> <span class="token string">"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_微笑"</span><span class="token operator">:</span> <span class="token string">"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png"</span><span class="token punctuation">,</span><span class="token string">"tv_思考"</span><span class="token operator">:</span> <span class="token string">"90cf159733e558137ed20aa04d09964436f618a1.png"</span><span class="token punctuation">,</span><span class="token string">"tv_惊吓"</span><span class="token operator">:</span> <span class="token string">"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_打脸"</span><span class="token operator">:</span> <span class="token string">"56ab10b624063e966bfcb76ea5dc4794d87dfd47.png"</span><span class="token punctuation">,</span><span class="token string">"tv_抓狂"</span><span class="token operator">:</span> <span class="token string">"fe31c08edad661d63762b04e17b8d5ae3c71a757.png"</span><span class="token punctuation">,</span><span class="token string">"tv_抠鼻"</span><span class="token operator">:</span> <span class="token string">"c666f55e88d471e51bbd9fab9bb308110824a6eb.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_斜眼笑"</span><span class="token operator">:</span> <span class="token string">"911f987aa8bc1bee12d52aafe62bc41ef4474e6c.png"</span><span class="token punctuation">,</span><span class="token string">"tv_无奈"</span><span class="token operator">:</span> <span class="token string">"ea8ed89ee9878f2fece2dda0ea8a5dbfe21b5751.png"</span><span class="token punctuation">,</span><span class="token string">"tv_晕"</span><span class="token operator">:</span> <span class="token string">"5443c22b4d07fb1907ccc610c8e6db254f2461b7.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流汗"</span><span class="token operator">:</span> <span class="token string">"cead1c351ab8d79e9f369605beb90148db0fbed3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流泪"</span><span class="token operator">:</span> <span class="token string">"7e71cde7858f0cd50d74b0264aa26db612a8a167.png"</span><span class="token punctuation">,</span><span class="token string">"tv_流鼻血"</span><span class="token operator">:</span> <span class="token string">"c32d39db2737f89b904ca32700d140a9241b0767.png"</span><span class="token punctuation">,</span><span class="token string">"tv_点赞"</span><span class="token operator">:</span> <span class="token string">"f85c354995bd99e28fc76c869bfe42ba6438eff4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_生气"</span><span class="token operator">:</span> <span class="token string">"26702dcafdab5e8225b43ffd23c94ac1ff932654.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_生病"</span><span class="token operator">:</span> <span class="token string">"8b0ec90e6b86771092a498c54f09fc94621c1900.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_疑问"</span><span class="token operator">:</span> <span class="token string">"0793d949b18d7be716078349c202c15ff166f314.png"</span><span class="token punctuation">,</span><span class="token string">"tv_白眼"</span><span class="token operator">:</span> <span class="token string">"c1d59f439e379ee50eef488bcb5e5378e5044ea4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_皱眉"</span><span class="token operator">:</span> <span class="token string">"72ccad6679fea0d14cce648b4d818e09b8ffea2d.png"</span><span class="token punctuation">,</span><span class="token string">"tv_目瞪口呆"</span><span class="token operator">:</span> <span class="token string">"0b8cb81a68de5d5365212c99375e7ace3e7891b7.png"</span><span class="token punctuation">,</span><span class="token string">"tv_睡着"</span><span class="token operator">:</span> <span class="token string">"8b196675b53af58264f383c50ad0945048290b33.png"</span><span class="token punctuation">,</span><span class="token string">"tv_笑哭"</span><span class="token operator">:</span> <span class="token string">"1abc628f6d4f4caf9d0e7800878f4697abbc8273.png"</span><span class="token punctuation">,</span><span class="token string">"tv_腼腆"</span><span class="token operator">:</span> <span class="token string">"89712c0d4af73e67f89e35cbc518420380a7f6f4.png"</span><span class="token punctuation">,</span><span class="token string">"tv_色"</span><span class="token operator">:</span> <span class="token string">"61822c7e9aae5da76475e7892534545336b23a6f.png"</span><span class="token punctuation">,</span><span class="token string">"tv_调侃"</span><span class="token operator">:</span> <span class="token string">"4bc022533ef31544ca0d72c12c808cf4a1cce3e3.png"</span><span class="token punctuation">,</span><span class="token string">"tv_调皮"</span><span class="token operator">:</span> <span class="token string">"b9c41de8e82dd7a8515ae5e3cb63e898bf245186.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_鄙视"</span><span class="token operator">:</span> <span class="token string">"6e72339f346a692a495b123174b49e4e8e781303.png"</span><span class="token punctuation">,</span> <span class="token string">"tv_闭嘴"</span><span class="token operator">:</span> <span class="token string">"c9e990da7f6e93975e25fd8b70e2e290aa4086ef.png"</span><span class="token punctuation">,</span><span class="token string">"tv_难过"</span><span class="token operator">:</span> <span class="token string">"87f46748d3f142ebc6586ff58860d0e2fc8263ba.png"</span><span class="token punctuation">,</span><span class="token string">"tv_馋"</span><span class="token operator">:</span> <span class="token string">"fc7e829b845c43c623c8b490ee3602b7f0e76a31.png"</span><span class="token punctuation">,</span><span class="token string">"tv_鬼脸"</span><span class="token operator">:</span> <span class="token string">"0ffbbddf8a94d124ca2f54b360bbc04feb6bbfea.png"</span><span class="token punctuation">,</span><span class="token string">"tv_黑人问号"</span><span class="token operator">:</span> <span class="token string">"45821a01f51bc867da9edbaa2e070410819a95b2.png"</span><span class="token punctuation">,</span><span class="token string">"tv_鼓掌"</span><span class="token operator">:</span> <span class="token string">"1d21793f96ef4e6f48b23e53e3b9e42da833a0f6.png"</span> <span class="token comment">// ... 更多表情 </span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="5-2-增强评论系统"><a href="#5-2-增强评论系统" class="headerlink" title="5.2 增强评论系统"></a>5.2 增强评论系统</h4><ul><li><p>功能：</p><ul><li>支持评论回复提醒（微信/QQ/邮件）</li><li>支持@对方时给对方发送邮件并自带主题</li></ul></li><li><p>在<code>leancloud</code>上部署评论增强系统：<code>Valine-Admin-server</code>(使用的是<a href="https://github.com/kaze0617/Valine-Admin-Server">小康改版</a>)</p><ul><li><p>打开<code>leancloud</code>，云引擎-&gt;WEB-&gt;部署-&gt;部署项目-&gt;Git部署-&gt;配置Git，然后将`<a href="https://github.com/kaze0617/Valine-Admin-Server">https://github.com/kaze0617/Valine-Admin-Server</a> 填入其中，保存-&gt;部署项目-&gt;部署。</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/kgIwu3hXjJa4CtQ.png" alt="部署Valine-Admin-Server"></p></li></ul></li><li><p>配置环境变量：云引擎-&gt;设置-&gt;自定义环境变量</p><blockquote><p>我只设置了邮件和微信提醒，没用QQ的。设置完成后再次部署生效。<br>|     变量      |           示例            |                             说明                             |<br>| :—————-: | :———————————-: | :—————————————————————————————: |<br>|   SITE_NAME   |         hjd’blog          |                        [必填]博客名称                        |<br>|   SITE_URL    | <a href="https://321hjd.github.io/">https://321hjd.github.io/</a> |                        [必填]首页地址                        |<br>| SMTP_SERVICE  |            QQ             |       邮件服务提供商，支持 QQ、163、126、Gmail以及更多       |<br>|   SMTP_USER   |     2857126002@qq.com     |                      [必填]SMTP登录用户                      |<br>|   SMTP_PASS   |            xxx            | [必填]SMTP登录密码（QQ邮箱可通过设置-账户-SMTP服务-生成授权码获取） |<br>|  SENDER_NAME  |         hjd’blog          |                         [必填]发件人                         |<br>| SENDER_EMAIL  |     2857126002@qq.com     |                        [必填]发件邮箱                        |<br>| BLOGGER_EMAIL |     2857126002@qq.com     |         [可选]博主通知收件地址，默认使用SENDER_EMAIL         |<br>|     SCKEY     |            xxx            |      <a href="http://sc.ftqq.com/">Server酱</a> SCKEY 用于微信通知      |<br>| DISABLE_EMAIL |           false           |                   如果为true，关闭邮件通知                   |<br>| TEMPLATE_NAME |          custom2          |                    设置回复邮件的主题样式                    |</p></blockquote></li><li><p>微信提醒还需要按照<a href="http://sc.ftqq.com/">Server酱-消息通道</a> 的指示注册企业微信并创建应用才行</p></li><li><p>博主回复别人后的邮件提醒效果：</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/4qiNyprDSh9bwmQ.jpg" alt="邮件提醒" style="zoom:25%;"></p></li><li><p>有人评论时的微信提醒效果</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/Hf8qQY5BkpaZ4On.jpg" alt="微信提醒" style="zoom:25%;"></p></li><li><p>后台管理。增删改评论在<code>leancloud</code>的数据存储-&gt;结构化数据-&gt;Comment处操作即可</p></li><li>防止休眠（如果不设置，每过一段时间重新部署，才能收到评论提醒）。需要购买域名，具体请参考：<a href="https://lovelijunyi.gitee.io/posts/e52c.html">Valine评论系统详解</a></li></ul><h3 id="6-说说模块Artitalk"><a href="#6-说说模块Artitalk" class="headerlink" title="6. 说说模块Artitalk"></a>6. 说说模块Artitalk</h3><ul><li><p>在<a href="https://leancloud.app/">leancloud官网</a>（建议使用国际版，否则需要配置<code>serverurl</code>）注册并绑定手机号和邮箱。然后创建应用（与<code>Valine</code>不是同一个）</p><blockquote><p>注意下面一定要设置好（尤其是权限），否则可能发不了说说，或者任意人都能在你的博客上修改或发表说说。</p></blockquote><ul><li>在<code>结构化数据</code>中创建<code>class</code>，命名为<code>shuoshuo</code></li><li>在你新建的应用中找到<code>结构化数据</code>下的<code>用户</code>。点击<code>添加用户</code>，输入想用的用户名及密码。（这就是你用来发说说的账号）</li><li>回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。（注意一定要等匹配后看到显示了<code>objectId</code>才没问题）</li><li>然后新建一个名为<code>atComment</code>的class，权限默认</li><li>点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</li><li>将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说</li></ul></li><li><p>下载<code>Artitalk</code>并放入组件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone --depth <span class="token number">2</span> git@github.com:ArtitalkJS/Artitalk.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在<code>themes/hexo-theme-matery/source/libs/</code>下新建<code>artitalk</code>文件夹。将下载所得<code>Artitalk</code>中<code>dist</code>下的组件代码（两个文件：<code>artitalk.min.js</code>和<code>artitalk.min.css</code>）全部放入<code>artitalk/</code>下</li></ul></li><li><p>引入该模块。修改主题配置文件<code>_config.yml</code>，在<code>libs</code>下加入刚刚的两个文件，如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">libs:  css:    artitalk: &#x2F;libs&#x2F;artitalk&#x2F;artitalk.min.css   js:    artitalk: &#x2F;libs&#x2F;artitalk&#x2F;artitalk.min.js <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>引入<code>css</code>。在<code>themes/hexo-theme-matery/layout/_partial/head.ejs</code>的尾部对应位置引入<code>css</code>（参照其它代码即可）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>css<span class="token punctuation">.</span>artitalk<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>模块准备。在主题目录下 <code>/layout/</code> 目录新建一个 <code>artitalk.ejs 文件</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">ype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#pubShuo</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#operare_artitalk .shuoshuo_input_log</span> <span class="token punctuation">&#123;</span>    <span class="token property">outline-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #0bb7fbd6<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 70%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#artitalk_main</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px <span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> 5%<span class="token punctuation">;</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> 5%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#lazy</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#artitalk_main .cbp_tmtimeline > li .cbp_tmlabel::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid transparent<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span>   <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>   <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>     <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>   <span class="token property">border-right-color</span><span class="token punctuation">:</span>  #0bb7fbd6 <span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>     <span class="token property">top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>artitalk<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>articles11<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container  chip-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-pen-alt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 说说           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>artitalk_main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">new</span> <span class="token class-name">Artitalk</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        appId<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>appId  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>        appKey<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>appKey  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>serverURL<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          serverURL<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>serverURL  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>lang<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          lang<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>lang  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          pageSize<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>pageSize  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>shuoPla<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          shuoPla<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>shuoPla  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>avatarPla<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          avatarPla<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>avatarPla  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>motion <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          motion<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          motion<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span>  </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>bgImg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          bgImg<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>bgImg  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color1<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color1  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color2<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color2  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          color3<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>color3  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>cssUrl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>          cssUrl<span class="token operator">:</span> <span class="token string">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript">  theme<span class="token punctuation">.</span>artitalk<span class="token punctuation">.</span>cssUrl  </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">,</span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>          atEmoji<span class="token operator">:</span> <span class="token punctuation">&#123;</span>              baiyan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/baiyan.png"</span><span class="token punctuation">,</span>              bishi<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/bishi.png"</span><span class="token punctuation">,</span>              bizui<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/bizui.png"</span><span class="token punctuation">,</span>              chan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/chan.png"</span><span class="token punctuation">,</span>              daku<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/daku.png"</span><span class="token punctuation">,</span>              dalao<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dalao.png"</span><span class="token punctuation">,</span>              dalian<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dalian.png"</span><span class="token punctuation">,</span>              dianzan<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/dianzan.png"</span><span class="token punctuation">,</span>              doge<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/doge.png"</span><span class="token punctuation">,</span>              facai<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/facai.png"</span><span class="token punctuation">,</span>              fadai<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/fadai.png"</span><span class="token punctuation">,</span>              fanu<span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/fanu.png"</span><span class="token punctuation">,</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在主题配置文件中添加<code>artitalk</code>配置</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">artitalk:  enable: true  appId: # 刚刚创建应用的AppID  appKey: # 刚刚创建应用的AppKey  lang: zh # 语言设置，zh为汉语，en为英语，es为西班牙语。默认为汉语    pageSize: 10  #每页说说的显示数量     # shuoPla: #在编辑说说的输入框中的占位符    avatarPla: # https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;321hjd.github.io&#x2F;source&#x2F;medias&#x2F;avatar.jpg #自定义头像url的输入框的占位符    # motion: #加载动画的开关，1为开，0为关，默认为开    # bgImg: #说说输入框背景图片url    color1: linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 200, 190) 85%)  #说说背景颜色1&amp;按钮颜色1    color2: linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 200, 190) 85%)  #说说背景颜色2&amp;按钮颜色2    color3: black #说说字体颜色<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建说说页面并添加链接。在第三部分的4.1节已经创建完成。</p></li><li><p>现在编译再进入说说页面应该就可以了。</p></li></ul><h3 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://liuruibin.com/posts/64eb.html">Matery优化（二）</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li><li><a href="https://hexo.io/zh-cn/docs/setup">hexo-theme-matery官方文档</a></li><li><a href="https://lovelijunyi.gitee.io/posts/b8ec.html">Matery主题搭建与优化教程超详细解析</a></li><li><a href="https://github.com/LuckyZmj/LuckyBlog">Luckysec博客源码</a></li><li><a href="https://yafine-blog.cn/posts/eb3a.html">使用 PicGo+Github 搭建免费图床</a></li><li><a href="https://liyangzone.com/2019/07/30/%E4%BD%BF%E7%94%A8AES%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86Hexo%E7%9B%B8%E5%86%8C/">使用AES算法加密Hexo相册</a></li><li><a href="https://notes.zhangxiaocai.cn/posts/38b34c3c.html">Matery 添加WebStackPage导航网站</a></li><li><a href="https://lovelijunyi.gitee.io/posts/e52c.html">Valine评论系统详解</a></li><li><a href="https://www.antmoe.com/posts/2380732b/index.html">Valine 评论之 Valine-admin 配置攻略</a></li><li><a href="https://notes.zhangxiaocai.cn/posts/7404e01a.html">Hexo 博客 Matery 主题添加 ArtiTalk 说说模块</a></li><li><a href="https://artitalk.js.org/doc.html#%F0%9F%8C%88-leancloud-%E7%9A%84%E7%9B%B8%E5%85%B3%E5%87%86%E5%A4%87">Artitalk官方文档</a></li></ul><h2 id="四、性能优化"><a href="#四、性能优化" class="headerlink" title="四、性能优化"></a>四、性能优化</h2><h3 id="1-图片懒加载"><a href="#1-图片懒加载" class="headerlink" title="1. 图片懒加载"></a>1. 图片懒加载</h3><ul><li><p>安装图片懒加载插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在博客根目录下的配置文件末尾添加</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># 懒加载配置lazyload:  enable: true  onlypost: false   # 是否只对文章的图片做懒加载  loadingImg: &#x2F;medias&#x2F;loading.gif # 即放一个表示加载中的图片（这个图片得自己去找一个放在themes&#x2F;hexo-theme-matery&#x2F;source&#x2F;medias&#x2F;目录下）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>一般情况下懒加载会和gallery插件会发生冲突，结果可能就是点开图片，左翻右翻都是loading image。matery主题的解决方案是：修改 <code>/themes/matery/source/js</code> 中的 <code>matery.js</code>文件，在第108行加上</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>可能还有个小问题，首页的logo点击会直接打开logo图，而不是跳到首页。解决方案：打开 <code>/themes/matery/layout/_partial/header.ejs</code>文件，</p><p>在<code>img</code>和<code>span</code>的两个头加个<code>div</code>：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand-logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waves-effect waves-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>logo <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>logo<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>logo </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-img<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOGO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>懒加载优化（即提前加载图片，其实也可以不做）。具体请参考：<a href="https://blog.sky03.cn/posts/42790.html">Hexo进阶之各种优化</a></p></li></ul><h3 id="2-跳转页面载入动画"><a href="#2-跳转页面载入动画" class="headerlink" title="2. 跳转页面载入动画"></a>2. 跳转页面载入动画</h3><ul><li><p>在博客根目录下新建文件夹<code>scripts</code>（之前加密相册时已经建好了其实），然后在该目录下新建<code>loading-pages.js</code>，填入代码即可</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* global hexo */</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'after_render:html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">htmlContent</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">const</span> injectHead <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;style type="text/css" lang="css">    #loading-container&#123;        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    &#125;    .loading-image&#123;        width: 120px;        height: 50px;        transform: translate(-50%);    &#125;    .loading-image div:nth-child(2) &#123;        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    &#125;    .loading-image div:nth-child(3) &#123;        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    &#125;    .loading-image div:nth-child(4) &#123;        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    &#125;    .loading-image div:nth-child(5) &#123;        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    &#125;   .loading-image div:first-of-type &#123;        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    &#125;    .loading-image div:nth-child(2) &#123;        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    &#125;    @-webkit-keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;    @keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;    @-webkit-keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;    @keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;    @-webkit-keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;    @keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6)&#123;        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    &#125;    .loading-text&#123;        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    &#125;    @media only screen and (max-width: 500px) &#123;         .loading-text&#123;            font-size: 1.5rem;         &#125;    &#125;    .fadeout &#123;        opacity: 0;        filter: alpha(opacity=0);    &#125;    /* logo出现动画 */    @-webkit-keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)&#125;100%&#123;opacity:1;-webkit-transform:none;transform:none&#125;&#125;    @keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);&#125;&#125; &lt;/style> &lt;script>(function () &#123;    const loaded = function()&#123;       setTimeout(function()&#123;            const loader = document.getElementById("loading-container");            loader.className="fadeout" ;//使用渐隐的方法淡出loading page            // document.getElementById("body-wrap").style.display="flex";            setTimeout(function()&#123;                loader.style.display="none";            &#125;,1000);         &#125;,1000);//强制显示loading page 1s      &#125;;    loaded();&#125;)() &lt;/script></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>     <span class="token keyword">const</span> injectBody <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> &lt;div id="loading-container">     &lt;p class="loading-text">玩命加载中 . . . &lt;/p>      &lt;div class="loading-image">         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>          &lt;div>&lt;/div>     &lt;/div> &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\/head></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;/head>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> lastIndex<span class="token punctuation">)</span> <span class="token operator">+</span> injectHead <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;body></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">let</span> index <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;body>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">+</span> injectBody <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> htmlContent<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="3-新建文章时自动打开本地md编辑器"><a href="#3-新建文章时自动打开本地md编辑器" class="headerlink" title="3. 新建文章时自动打开本地md编辑器"></a>3. 新建文章时自动打开本地md编辑器</h3><ul><li><p>在博客根目录下的<code>scripts/</code>下新建<code>auto_open.js</code>，添加代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token comment">// Hexo 2.x 用户复制这段</span><span class="token comment">//hexo.on('new', function(path)&#123;</span>  <span class="token comment">//spawn('start  "markdown编辑器绝对路径.exe" ' + path);</span><span class="token comment">//&#125;);</span><span class="token comment">// Hexo 3 用户复制这段</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start  "D:\Program Files\Typora\Typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：<code>Typora.exe</code>的路径根据实际情况修改。</li></ul></li></ul><h3 id="4-jsDelivr-GitHub实现免费CDN加速"><a href="#4-jsDelivr-GitHub实现免费CDN加速" class="headerlink" title="4. jsDelivr + GitHub实现免费CDN加速"></a>4. <code>jsDelivr + GitHub</code>实现免费<code>CDN</code>加速</h3><ul><li><p><code>CDN</code>简介及原理：<a href="https://zhuanlan.zhihu.com/p/346643522">如何使用jsDelivr+Github 实现免费CDN加速?</a></p></li><li><p><a href="https://www.jsdelivr.com/">jsDelivr</a>：免费、快速和可信赖的<code>CDN</code>加速服务</p></li><li><p>实现</p><ul><li><p>新建<code>GitHub</code>仓库（我的叫<code>CDN-for-Hexo</code>）</p></li><li><p>将仓库克隆到本地：<code>git clone git@github.com:&#123;username&#125;/&#123;repo&#125;.git</code></p></li><li><p>将需要加速的资源文件复制到该本地仓库并上传到<code>GitHub</code>仓库（<code>Hexo</code>的静态资源<code>css</code>、<code>js</code>、图片等）。我是将主题下的整个<code>source</code>文件夹都传上去了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 添加所有文件到暂存区</span><span class="token function">git</span> status<span class="token comment"># 查看状态</span><span class="token function">git</span> commit -m <span class="token string">"CDN加速，第一次提交"</span><span class="token comment"># 将文件提交到仓库</span><span class="token function">git</span> push<span class="token comment"># 推送至远程仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>点击右边的<code>release</code>发布版本。如<code>CDN-for-Hexo-1.0</code></p></li></ul></li><li><p>修改主题目录下的配置文件，通过<code>jsDelivr</code>引用资源。如：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">libs:  css:    matery: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;CDN-for-Hexo@b4706a7&#x2F;source&#x2F;css&#x2F;matery.css    mycss: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;321hjd&#x2F;CDN-for-Hexo@b4706a7&#x2F;source&#x2F;css&#x2F;my.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>引用方式为：<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></li></ul><blockquote><p>经过测试，不写版本号似乎不能引用到最新资源。需要引用最新版的话，最好是<code>仓库名@版本号</code>如<code>CDN-for-Hexo@b4706a7</code>而非<code>CDN-for-Hexo@CDN-for-Hexo-1.0</code>。</p><p>注：<code>jsdelivr</code>可以自动帮你生成<code>.min</code>版的<code>js</code>和<code>css</code>，所以你在设置<code>js</code>及<code>css</code>路径中可以直接写<code>.min.xxx</code></p></blockquote></li><li><p>修改完成后再编译部署，会发现访问速度快了很多~</p></li></ul><h3 id="5-文章永久链接优化"><a href="#5-文章永久链接优化" class="headerlink" title="5. 文章永久链接优化"></a>5. 文章永久链接优化</h3><ul><li><p>为什么要生成唯一永久文章链接：确保在我们修改了<code>Front-matter</code> 内的博客标题<code>title</code>或创建日期<code>date</code>字段之后而不会改变链接地址。</p></li><li><p>安装插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置。修改博客根目录配置文件的<code>permalink</code>属性</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">permalink: posts&#x2F;:abbrlink.html  # 此处可以自己设置，也可以直接使用 :&#x2F;abbrlinkabbrlink:    alg: crc32   #算法： crc16(default) and crc32    rep: hex     #进制： dec(default) and hex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>生成完后，原<code>md</code>文件的Front-matter 内会增加<code>abbrlink</code> 字段，值为生成的ID 。至此我们的文章链接将变为：</p><p><code>https://&#123;username&#125;.github.io/posts/&#123;abbrlink_id&#125;.html</code></p></li><li><p><strong>引发的问题</strong>：插入图片的路径发生变化，前面新增了一个对应文章的<code>abbrlink_id</code>目录</p><ul><li><p>分析：生成图片链接时自己把<code>abbrlink</code>加上，是因为原来hexo的设计思想（因为<code>post_asset_folder</code>的存在）是将文档的图片放置在同名文件夹下，然后将<code>md</code>转换为<code>html</code>同样以该结构存储，即</p><pre class="line-numbers language-none"><code class="language-none">- 根目录（按原来的结构应该是&#x2F;public&#x2F;year&#x2F;month&#x2F;day&#x2F;）- MDfilename.html- MDfilename_folder  - xxx.jpg  - ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>解决方案：修改<code>/node_modules/hexo-asset-image/index.js</code>中的两行（即自己把<code>abbrlink</code>加入到<code>image</code>的生成路径中）</p><ul><li>在源码的12行附近<code>var link = data.permalink;</code>这一行的下面，<strong>添加</strong> 一行<code>var abbrlink = data.abbrlink</code>（即自己定义一个变量<code>abbrlink</code>获取生成的<code>abbrlink</code>）</li><li>在源码的51行附近，将原来的 <code>$(this).attr(&#39;src&#39; , config.root + link + src);</code>改为<code>$(this).attr(&#39;src&#39; , config.root + link + abbrlink + &#39;/&#39; + src);</code></li></ul></li></ul></li></ul><h3 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://blog.sky03.cn/posts/42790.html">Hexo进阶之各种优化</a></li><li><a href="https://lovelijunyi.gitee.io/posts/b8ec.html">Matery主题搭建与优化教程超详细解析</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)</a></li><li><a href="https://zhuanlan.zhihu.com/p/346643522">如何使用jsDelivr+Github 实现免费CDN加速?</a></li><li><a href="https://www.jianshu.com/p/c7de2ae59975">Hexo-abbrlink生成唯一永久文章链接</a></li><li><a href="https://github.com/rozbo/hexo-abbrlink/issues/19">hexo-abbrlink作者与其他人的讨论</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从GitHub上下载单个文件(夹)</title>
      <link href="/yyds/65b12f08.html"/>
      <url>/yyds/65b12f08.html</url>
      
        <content type="html"><![CDATA[<h3 id="方法一：SVN-下载单个文件夹"><a href="#方法一：SVN-下载单个文件夹" class="headerlink" title="方法一：SVN-下载单个文件夹"></a>方法一：SVN-下载单个文件夹</h3><blockquote><p> 个人最适应的方法，缺点是需要借助第三方工具-svn</p><p>环境：Windows 10</p></blockquote><p>​    若想要下载<code>&#123;username&#125;</code>的<code>&#123;repo&#125;</code>里的<code>&#123;dir&#125;</code>文件夹，</p><ol><li><p>主分支master（现在似乎默认是main了，区别不大）：</p><ul><li><p>其浏览器路径应为<code>https://github.com/&#123;username&#125;/&#123;repo&#125;/tree/master/&#123;dir&#125;</code></p></li><li><p>修改<code>/tree/master/</code>为<code>/trunk/</code></p></li><li><p>打开<code>cmd</code>，输入指令：<code>svn checkout https://github.com/&#123;username&#125;/&#123;repo&#125;/trunk/&#123;dir&#125;</code></p></li><li><p>该<code>&#123;dir&#125;</code>将被下载至当前目录下</p><p><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/SMxiE8ROWvDwpFn.png" alt="示例" style="zoom:80%;"></p></li></ul></li><li><p>特定分支</p><ul><li>将<code>/trunk/</code>换成<code>/branches/&#123;branch_name&#125;</code>即可</li></ul></li></ol><h3 id="方法二：高版本-Git"><a href="#方法二：高版本-Git" class="headerlink" title="方法二：高版本 Git"></a>方法二：高版本 Git</h3><blockquote><p>这个方法较为繁琐，但无需像前者一样借助其它工具</p></blockquote><p>方法：Git 的<code>Sparse Checkout</code>模式，指定文件/文件夹</p><ol><li><p>创建空的本地仓库，并将远程 <code>Git Server URL</code> 加入到 <code>Git Config</code>里</p><pre class="line-numbers language-none"><code class="language-none">mkdir project_foldercd project_foldergit initgit remote add -f origin &lt;repo-url&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在 <code>Config</code> 中设置允许使用<code>Sparse Checkout</code>模式</p><pre class="line-numbers language-none"><code class="language-none">git config core.sparsecheckout true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在<code>.git/info/</code>目录下新建<code>sparse-checkout</code>文件（注意文件名不要错了），写入需要的文件（<strong>一行为一项</strong>）</p><p>如：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;source&#x2F;tools&#x2F;index.html&#x2F;source&#x2F;about<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>以正常方式从服务器pull下来即可</p><pre class="line-numbers language-none"><code class="language-none">git pull origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="方法三：利用-DownGit-工具"><a href="#方法三：利用-DownGit-工具" class="headerlink" title="方法三：利用 DownGit 工具"></a>方法三：利用 <a href="http://tool.mkblog.cn/downgit/#/home">DownGit</a> 工具</h3>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/yyds/d87f7e0c.html"/>
      <url>/yyds/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<hr><p>这是一篇测试博客编辑功能是否正常的文档</p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>代码块</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*按顺序为数组赋值原数组的正数即可*&#x2F;    void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        int j &#x3D; 0;        for(int i &#x3D; 0;i &lt; nums.size(); ++i)            if(nums[i] !&#x3D; 0)                nums[j++] &#x3D; nums[i];        while(j &lt; nums.size())            nums[j++] &#x3D; 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"fdfdf"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) &#123; %>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;% &#125; %><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>代码：<code>test</code></li></ul><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><p><img src="/yyds/d87f7e0c/test.jpg" alt="test"></p><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li><p>公式块：</p><script type="math/tex; mode=display">\int_{-\infty}^{\infty}\frac{2}{3}x^2dx</script></li><li><p>公式：<script type="math/tex">\int_{-\infty}^{\infty}\frac{2}{3}x^2dx</script></p></li><li><p>test：<script type="math/tex">L_p  = (\sum_{i=1}^m |x_i - y_i |^{p}  )^{ {\frac{1}{p} } }</script></p></li><li><p>灌灌灌灌灌：<script type="math/tex">L_p  = (\sum_{i=1}^m |x_i - y_i |^{p}  )^{ {\frac{1} {p} } }</script></p></li><li><p>矩阵块需要用序列号之类的隔开才能正确渲染？</p></li><li><script type="math/tex; mode=display">\left[\begin{matrix}  a+b   &a      &0      &\cdots &0      &0\\  b     &a+b    &a      &\cdots &0      &0\\  0     &b      &a+b    &\cdots &0      &0\\  \vdots&\vdots &\vdots &\ddots &\vdots &\vdots\\  0     &0      &0      &\cdots &a+b    &a\\  0     &0      &0      &\cdots &b      &a+b\\\end{matrix}\right]_n=\frac{a^{n+1}-b^{n+1}}{a-b}</script></li></ul><h2 id="Emoji表情支持"><a href="#Emoji表情支持" class="headerlink" title="Emoji表情支持"></a>Emoji表情支持</h2><p><span class="github-emoji" alias="smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span>、<span class="github-emoji" alias="ice_hockey" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3d2.png?v8">&#x1f3d2;</span>、<span class="github-emoji" alias="face_with_head_bandage" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f915.png?v8">&#x1f915;</span></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用VMware将Ubuntu安装在u盘上</title>
      <link href="/yyds/f79dbef5.html"/>
      <url>/yyds/f79dbef5.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><div class="table-container"><table><thead><tr><th>本机系统</th><th>Windows 10</th></tr></thead><tbody><tr><td>待装系统</td><td>ubuntu-21.04-desktop-amd64</td></tr><tr><td>虚拟机软件</td><td>VMware-workstation-full-16.1.0-17198959</td></tr><tr><td>工具</td><td>U盘（Sandisk 3.2Gen1，16G）（看网上教程应该8G左右都可行，注意最好使用3.0及以上的，否则安装过程将非常非常缓慢）</td></tr></tbody></table></div><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><ul><li>选择典型（自定义应该也可以，感觉区别不大）<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/1575d8f7690c7c8a.png" alt="img"></li></ul></li><li>选择稍后安装操作系统<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/78be4172ea7f691b.png" alt="img"></li></ul></li><li>客户机操作系统选择Linux，版本选Ubuntu64位<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/96385572547c6fb9.png" alt="img"></li></ul></li><li>自定义虚拟机名称及存储位置，下一步</li><li>指定磁盘容量，默认，下一步</li><li>点击自定义硬件<ul><li>选择新CD/DVD-&gt;选择使用ISO映像文件（准备好的ubuntu的iso文件）<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/f58995b28f224ddd.png" alt="img"></li></ul></li><li>选择USB控制器-&gt;兼容性选择USB3.1（我的理解是选最大的那个，都是向下兼容的），其它全选上<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/a20b7ff98e2d6a0d.png" alt="img"></li></ul></li><li>其它默认，关闭，完成</li></ul></li></ul><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><ul><li>开启虚拟机，默认选ubuntu（第一个）启动</li><li>插入U盘，根据提示将U盘接入到虚拟机或通过选项卡-&gt;可移动设备-&gt;Sandisk 3.2Gen1（这里是U盘名称）</li><li>选择合适的语言，点击试用Ubuntu</li><li>点击桌面上的安装程序进行安装</li><li>一路默认，为了节约时间，我选择了最小安装，其它选项不勾选<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/574f29b2a20032a1.png" alt="img"></li></ul></li><li>安装类型选其它选项并开始分区（最重点）<ul><li>U盘引导启动有两种方式，一种是以前的Legacy BIOS方式，一种是新的UEFI方式（这里我也没有了解得很清楚）<ul><li>先查看自己的电脑的BIOS设置支持的是哪种方式：WIN+R，输入msinfo32<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/befd4c0e83a7db93.png" alt="img"></li></ul></li><li>如果是UEFI启动模式，磁盘分区时不需要分/boot区，而是使用EFI系统分区</li><li>如果是Legacy BIOS启动模式，则使用/boot分区</li></ul></li><li>我的电脑支持UEFI启动模式，因此我的分区如下：（关于分区可以多参考网上的教程，我弄得不是很清楚）<ul><li>512MB的EFI系统分区（主分区+空间起始位置）（看网上有的教程说200MB就足够）<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/6099450cd1a9ae528f086fa3.jpg" alt="img"></li><li>如果电脑只支持Legacy BIOS启动模式，则不需要此分区，改为新的XFS格式分区（大小同理，不过挂载在/boot下）</li></ul></li><li>10G的XFS格式分区（主分区+空间起始位置，挂载在/下，似乎是相当于windows的C盘，关于文件格式也可以多在网上查资料了解，不一定非要用XFS）<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/60994675d1a9ae528f1c14f8.jpg" alt="img"></li></ul></li><li>剩下的可以全用光（仍然是XFS格式分区，主分区+空间起始位置，挂载在/home下，是用户自己的目录）<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/60994766d1a9ae528f2ad238.jpg" alt="img"></li><li>这里不用光有个好处，就是可以利用剩下的空间当普通U盘用（需要通过磁盘管理-&gt;点击可用空间-&gt;新建简单卷-&gt;跟着引导曹操作）</li></ul></li><li>注意很重要的一步！这里需要将安装启动引导器的设备选项改为刚刚的EFI分区（即这里的dev/sdb1），否则下一步会报错<ul><li><img src="https://cdn.jsdelivr.net/gh/321hjd/ImageBed/Blog/60994908d1a9ae528f45575e.jpg" alt="img"></li><li>注意：如果是Legacy BIOS启动模式，这里似乎不需要更改，默认即可（我没试过，但看网上其它教程没有提到需要修改）</li></ul></li><li>然后安装（注意：看网上教程说，安装时需要断网，否则会出现一些奇怪的问题或者影响安装速度）<ul><li>选择时区，设置计算机名称和密码</li><li>经过等待（我的是新买的3.2Gen1，等待时间大概十几分钟到半小时？），安装完成，关闭虚拟机。<ul><li>注意此时电脑弹出的U盘格式化提示，一定不能格式化，否则重复上述步骤</li></ul></li><li>准备BIOS设置使用U盘启动</li></ul></li></ul></li></ul></li></ul><h3 id="进入BIOS设置，使用U盘启动"><a href="#进入BIOS设置，使用U盘启动" class="headerlink" title="进入BIOS设置，使用U盘启动"></a>进入BIOS设置，使用U盘启动</h3><ul><li>如何进入BIOS可以百度</li><li>进入BIOS后，选择U盘启动，完成。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 系统安装 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针-快慢指针</title>
      <link href="/yyds/3f704f49.html"/>
      <url>/yyds/3f704f49.html</url>
      
        <content type="html"><![CDATA[<ul><li><p>快慢指针：快慢指两个指针每次移动的步长，比如慢指针每次移动一步，快指针每次移动两步。</p></li><li><p>例题：<a href="https://leetcode-cn.com/problems/move-zeroes/">LeetCode283：移动零</a></p><ul><li><p>题目要求：给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p></li><li><p>例：<strong>输入:</strong> <code>[0,1,0,3,12]</code> <strong>输出:</strong> <code>[1,3,12,0,0]</code></p></li><li><p>思路1：设两个指针，一个遍历数组，一个只在元素非零时用于给数组赋值。最后再将数组剩下的位置全部填0</p></li><li><p>代码：</p> <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*按顺序为数组赋值原数组的正数即可*&#x2F;    void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        int j &#x3D; 0;        for(int i &#x3D; 0;i &lt; nums.size(); ++i)            if(nums[i] !&#x3D; 0)                nums[j++] &#x3D; nums[i];        while(j &lt; nums.size())            nums[j++] &#x3D; 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>思路2：由于数组每个非零数，正确位置要么在当前位置，要么在此位置之前，所以可设快慢指针，每次遇到非零数时，直接交换两个指针指向的元素。相比思路1，避免了数组前导数全为0时的多余操作。</p></li><li><p>代码：(此源代码来自LeetCode官方)</p> <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*快慢指针    *当前数的位置最多不动或该往前移动    *&#x2F;void moveZeroes(vector&lt;int&gt;&amp; nums) &#123;        for (int lastNonZeroFoundAt &#x3D; 0, cur &#x3D; 0; cur &lt; nums.size(); cur++) &#123;            if (nums[cur] !&#x3D; 0) &#123;                swap(nums[lastNonZeroFoundAt++], nums[cur]);            &#125;        &#125;     &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摩尔投票法（寻找众数）</title>
      <link href="/yyds/5b6ac126.html"/>
      <url>/yyds/5b6ac126.html</url>
      
        <content type="html"><![CDATA[<ul><li>问题1：在一个数组中找到一个出现次数大于n/2的数（保证一定存在）<a href="https://leetcode-cn.com/problems/majority-element/">leetcode169题（多数元素）</a><ul><li>要求：实现时间复杂度为O(n)，空间复杂度为O(1)的解法</li><li>解法：摩尔投票法</li></ul></li><li><p>摩尔投票法：</p><ul><li><p>原理：当一个数在数组中出现次数大于n/2，那么每次删除两个不同的元素，剩下的元素一定是该数</p></li><li><p>实现思路：</p><ul><li>要求时间复杂度O(n)，空间复杂度O(1)，因此不可能真的在数组中遍历并执行删除操作。</li><li>其实现有一定技巧：假设存在一个虚拟数组，用于存放还未和不同元素一起删除的数，该数组只存在若干同一元素；遍历原数组，若有与虚拟数组元素不同的数，则会将两个数一起从虚拟数组中删去。</li><li>因此只需要两个变量，一个存储可能是满足条件的值（虚拟数组中的数），一个存储个数。</li><li>遍历原数组到当前元素时，若虚拟数组为空，则将当前数放入虚拟数组；若虚拟数组非空，则比较两数是否相同，若相同，则将当前数加入到虚拟数组；若不同，则虚拟数组的数减1，继续遍历下一元素（即相当于删除两数）。</li><li>因为保证一定存储，所以最后虚拟数组剩下的数就是满足条件的“多数”。</li></ul></li><li><p>leetcode代码：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*摩尔投票法(寻找众数)*&#x2F;    int majorityElement(vector&lt;int&gt;&amp; nums) &#123;        int candidate &#x3D; -1;        int cnt &#x3D; 0;        for (int num : nums) &#123;            if(cnt &#x3D;&#x3D; 0)            &#123;                candidate &#x3D; num;                cnt &#x3D; 1;            &#125;            else if(num &#x3D;&#x3D; candidate)                 ++cnt;            else                    --cnt;        &#125;        return candidate;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>问题2（进阶）：</p><p>在一个数组中找到所有出现次数大于n/3的数 <a href="https://leetcode-cn.com/problems/majority-element-ii/">leetcode229题（求众数II）</a></p><ul><li><p>要求：实现时间复杂度为O(n)，空间复杂度为O(1)的解法</p></li><li><p>问题分析：</p><ul><li>在一个数组中出现次数大于n/3的数最多有2个</li><li>题目未说明保证存在满足条件的数</li></ul></li><li><p>思路：</p><ul><li>仍然是用摩尔投票法，只是因为没有保证该数存在，因此需要增加一个验证环节。</li><li>最多可能有2个满足条件数，因此需要四个变量</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Solution &#123;public:    &#x2F;*摩尔投票法*&#x2F;    vector&lt;int&gt; majorityElement(vector&lt;int&gt;&amp; nums) &#123;        int cnt1 &#x3D; 0, cnt2 &#x3D; 0;        int can1 &#x3D; 0, can2 &#x3D; 0;        for(int num:nums)        &#123;            if(can1 &#x3D;&#x3D; num)                    ++cnt1;            else if(can2 &#x3D;&#x3D; num)                ++cnt2;            &#x2F;&#x2F;candidate和cnt的判断不能交换顺序，否则可能为两个候选值赋为同一个值            else if(cnt1 &#x3D;&#x3D; 0)            &#123;                can1 &#x3D; num;                cnt1 &#x3D; 1;            &#125;            else if(cnt2 &#x3D;&#x3D; 0)            &#123;                can2 &#x3D; num;                cnt2 &#x3D; 1;            &#125;            else            &#123;                --cnt1;                --cnt2;            &#125;        &#125;        &#x2F;&#x2F;验证是否满足条件        vector&lt;int&gt; res;        cnt1 &#x3D; 0, cnt2 &#x3D; 0;        for(int num:nums)        &#123;            if(can1 &#x3D;&#x3D; num)                ++cnt1;        &#x2F;&#x2F;注意一定要用else if，保证两数的判断是有先后的，才不会出现两候选数相同的情况            else if(can2 &#x3D;&#x3D; num)                 ++cnt2;        &#125;        if(cnt1 &gt; nums.size()&#x2F;3)            res.emplace_back(can1);        if(cnt2 &gt; nums.size()&#x2F;3)            res.emplace_back(can2);        return res;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摩尔投票 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 const char* 和 const int 的一个小问题</title>
      <link href="/yyds/91c00396.html"/>
      <url>/yyds/91c00396.html</url>
      
        <content type="html"><![CDATA[<p>最近发现使用const int 定义变量时若不设初始值，编译器会报错。然而使用const char<em> 时却不会，并且使用const char</em> 明明是const常量，却仍然可以修改其值。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int main()&#123;　 const int b;    &#x2F;&#x2F;报错    const char* a;    a &#x3D; &quot;hjd&quot;;    a &#x3D; &quot;sdf&quot;;      &#x2F;&#x2F;不会报错&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现原来是概念有些混淆，const char* 是常量指针，可以修改地址，不可修改指针指向的值，所以并未违背常量不可修改值的规定。这里由“hjd”变为“sdf”实际上是修改了指针a指向的地址。</p>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL删除三张表的联合信息</title>
      <link href="/yyds/de05866e.html"/>
      <url>/yyds/de05866e.html</url>
      
        <content type="html"><![CDATA[<p>如要删除三张表的联合信息，使用MYSQL的左连接方法：LEFT JOIN ON</p><p>例如，删除三张表中张三的所有数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">delete student,sc,stu     from student left join sc on student.sno &#x3D; sc.sno                 left join stu on sc.sno &#x3D; stu.sno                where student.sname &#x3D; &#39;张三&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MYSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019: &quot;__declspec(dllimport)  使用irrKlang的库时报错</title>
      <link href="/yyds/cf469c8c.html"/>
      <url>/yyds/cf469c8c.html</url>
      
        <content type="html"><![CDATA[<ul><li>先说原因，之前一直使用的是32位的glfw库，今天下载irrKlang的时候下了个64位的，查了好久才发现原来这也可以导致LNK2019错误</li><li>具体报错就不放了，解决方案就是重新下了个32的irrKlang然后替换相应的文件</li><li>之前还遇到过两种LNK2019的报错：<a href="https://321hjd.github.io/yyds/bc78a76b.html">https://321hjd.github.io/yyds/bc78a76b.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error：非常量引用只能绑定到左值</title>
      <link href="/yyds/868c3c39.html"/>
      <url>/yyds/868c3c39.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天遇到一个关于C++引用的错误，说实话以前确实一直没注意到过引用还有这个规则</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;Game.cpp1&gt;d:\18482\visual studio\source\repos\opengl\opengl\game.cpp(55): error C2664: “void SpriteRenderer::DrawSprite(Texture2D &amp;,glm::vec2,glm::vec2,GLfloat,glm::vec3)”: 无法将参数 1 从“Texture2D”转换为“Texture2D &amp;”1&gt;d:\18482\visual studio\source\repos\opengl\opengl\game.cpp(55): note: 非常量引用只能绑定到左值1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先解释左值和右值的区别：</p><ul><li>从字面意思看，左右值就是在“=”两端的变量或表达式（以前我一直是这样理解的/手动狗头），但其实不是这样的。</li><li><strong>左值（Location Value）</strong>：并不是left_value，指的是<strong>可以寻址</strong>。指的是如果一个表达式可以引用到某一个对象，并且这个对象是一块内存空间且可以被检查和存储，那么这个表达式就可以作为一个左值。</li><li><strong>右值（Read Value）</strong>：也就是<strong>可读。</strong>指的是引用了一个存储在某个内存地址里的“数据”。</li></ul><p>例子：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(int &amp;a)&#123;    cout &lt;&lt; a;&#125;void main()&#123;    double i &#x3D; 4;    func(i);&#x2F;&#x2F;这里进行了强制类型转换，会产生一个临时变量&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>上面的写法是不合法的，会报错“非常量的引用只能绑定到左值”，按照正常理解 i 其实是一个左值，但是由于定义的 i 和func函数需要的参数并不是相同类型，这里实际上经过了一次强制类型转换，并且生成了一个临时变量<strong>（而临时变量都是常量，不能作为左值，只能由const引用，不能改变值）</strong>，所以这里非const的引用会报错</p></li><li><p>这里解决方式有两种</p><ul><li><p>让实参和形参类型相同，不必进行强制类型转换</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(int &amp;a)&#123; 　cout &lt;&lt; a; &#125; void main() &#123; 　　int i &#x3D; 4; &#x2F;&#x2F;修改i的类型　　func(i);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用右值引用</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void func(const int &amp;a)&#x2F;&#x2F;右值引用&#123; 　cout &lt;&lt; a; &#125; void main() &#123; 　　double i &#x3D; 4; 　　func(i);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p>另外，右值引用可以延长临时变量的生命周期，比如这个例子：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int func(int a)&#123;     return  a +&#x3D; 10;　　　　　　&#x2F;&#x2F;函数返回值也是一个临时变量&#125;void main() &#123;　　int i &#x3D; 10;　　const int &amp;b &#x3D; func(i);　　&#x2F;&#x2F;变量a是对函数返回值（临时变量）的引用，因此函数返回值不会在此时立即销毁，而是一直延续到整个程序结束　　cout&lt;&lt;b;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019: 无法解析的外部符号 _stbi_load 使用stb_image.h库的错误</title>
      <link href="/yyds/31791ebb.html"/>
      <url>/yyds/31791ebb.html</url>
      
        <content type="html"><![CDATA[<p>此错误在使用stb_image.h图片加载库时遇到</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;ResourceManager.cpp1&gt;ResourceManager.obj : error LNK2019: 无法解析的外部符号 _stbi_load，该符号在函数 &quot;private: static class Texture2D __cdecl ResourceManager::loadTextureFromFile(char const *,unsigned char)&quot; (?loadTextureFromFile@ResourceManager@@CA?AVTexture2D@@PBDE@Z) 中被引用1&gt;ResourceManager.obj : error LNK2019: 无法解析的外部符号 _stbi_image_free，该符号在函数 &quot;private: static class Texture2D __cdecl ResourceManager::loadTextureFromFile(char const *,unsigned char)&quot; (?loadTextureFromFile@ResourceManager@@CA?AVTexture2D@@PBDE@Z) 中被引用1&gt;D:\18482\visual studio\source\repos\OpenGL\Debug\OpenGL.exe : fatal error LNK1120: 2 个无法解析的外部命令1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解决：在include”stb_image.h”前加上#define STB_IMAGE_IMPLEMENTATION，通过定义STB_IMAGE_IMPLEMENTATION，预处理器会修改头文件，让其只包含相关的函数定义源码，相当于把这个头文件变为一个 .cpp 文件（原stb_image.h库的教程给出，具体原因未知）</p>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error LNK2019 无法解析的外部符号 __imp___invalid_parameter 解决方案</title>
      <link href="/yyds/bc78a76b.html"/>
      <url>/yyds/bc78a76b.html</url>
      
        <content type="html"><![CDATA[<p>此报错是在用OpenGL画图时遇到的（OpenGL是项目名称）：</p><pre class="line-numbers language-none"><code class="language-none">1&gt;------ 已启动生成: 项目: OpenGL, 配置: Debug Win32 ------1&gt;glad.c1&gt;源.cpp1&gt;源.obj : error LNK2019: 无法解析的外部符号 __imp___invalid_parameter，该符号在函数 &quot;void * __cdecl std::_Allocate_manually_vector_aligned&lt;struct std::_Default_allocate_traits&gt;(unsigned int)&quot; (??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z) 中被引用1&gt;源.obj : error LNK2019: 无法解析的外部符号 __imp___CrtDbgReport，该符号在函数 &quot;void * __cdecl std::_Allocate_manually_vector_aligned&lt;struct std::_Default_allocate_traits&gt;(unsigned int)&quot; (??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z) 中被引用1&gt;msvcprtd.lib(locale0_implib.obj) : error LNK2019: 无法解析的外部符号 __imp___free_dbg，该符号在函数 &quot;public: static void __cdecl std::_Fac_node::operator delete(void *)&quot; (??3_Fac_node@std@@SAXPAX@Z) 中被引用1&gt;msvcprtd.lib(locale0_implib.obj) : error LNK2019: 无法解析的外部符号 __imp___malloc_dbg，该符号在函数 &quot;public: static void * __cdecl std::_Fac_node::operator new(unsigned int)&quot; (??2_Fac_node@std@@SAPAXI@Z) 中被引用1&gt;D:\18482\visual studio\source\repos\OpenGL\Debug\OpenGL.exe : fatal error LNK1120: 4 个无法解析的外部命令1&gt;已完成生成项目“OpenGL.vcxproj”的操作 - 失败。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在网上找了找，大概有两种可能：</p><ul><li>缺少依赖库，这种情况直接查找符号对应的库，然后将其添加至依赖库（因为这里是第二种情况，尝试失败）</li><li>运用了错误的运行库</li></ul><pre class="line-numbers language-none"><code class="language-none">在一程序中使用不同类型的运行时库或使用调试和非调试版本的运行时库，则将收到此链接错误。例如，编译一个文件以使用一种运行时库，而编译另一个文件以使用另一种运行时库（例如单线程运行时库对多线程运行时库），试图链接它们，则将得到此警告。应将所有源文件编译为使用同一运行时库。 其实就是调正编译器选项参数：&#x2F;MD、&#x2F;MT 和 &#x2F;LD此方案来自：https:&#x2F;&#x2F;blog.csdn.net&#x2F;jean7155&#x2F;article&#x2F;details&#x2F;6924806<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>解决：项目属性-&gt;C/C++-&gt;代码生成-&gt;运行库：选择正确的运行库，这个需要查一下不同库的意思，如果不想查就挨个试一遍。。。</li><li>我这里原来使用的是：多线程调试 DLL (/MDd)，更改为：多线程 DLL (/MD)，解决</li></ul>]]></content>
      
      
      <categories>
          
          <category> 错误解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error LNK2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL安装及配置</title>
      <link href="/yyds/9f37452d.html"/>
      <url>/yyds/9f37452d.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h1><ul><li>Windows 10 64位家庭版</li><li>vs版本：Visual Studio 2017</li></ul><h1 id="二、配置OpenGL所需"><a href="#二、配置OpenGL所需" class="headerlink" title="二、配置OpenGL所需"></a>二、配置OpenGL所需</h1><ul><li>GLFW</li><li>GLAD</li></ul><h1 id="三、步骤"><a href="#三、步骤" class="headerlink" title="三、步骤"></a>三、步骤</h1><h2 id="1-配置GLFW"><a href="#1-配置GLFW" class="headerlink" title="　　1.配置GLFW"></a>　　1.配置GLFW</h2><ul><li>进入官网下载GLFW并解压：<a href="https://www.glfw.org/download.html">GLFW下载</a></li><li>这里选择32位的，因为64位的可能有些问题</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/cf3f2b89bc4d4b76.png" alt="img"></li><li>进入VS2017创建空项目，在项目文件夹下创建includes和libs两个文件夹（如创建项目OpenGL，则为OpenGL/OpenGL/includes）</li><li>将解压文件中lib-vc2017文件夹下的.lib文件拷贝进刚刚创建的libs下，同时将include下的.h文件拷贝进刚刚创建的includes下</li><li>在项目名处右键-&gt;属性-&gt;VC++目录-&gt;引用目录-&gt;编辑：粘贴项目文件夹下的.h文件所在目录</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/3f9b561f13542bd6.png" alt="img"></li><li>同理，库目录-&gt;编辑：粘贴项目文件夹下的.lib文件所在目录</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/2b0a13d41f367eb2.png" alt="img"></li><li>接着将为项目添加依赖项：仍然是属性-&gt;链接器-&gt;输入-&gt;附加依赖项-&gt;编辑，将opengl32.lib，glfw3.lib，msvcrt.lib添加进去</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/34dbf4338810d7de.png" alt="img"></li></ul><h2 id="2-GLAD"><a href="#2-GLAD" class="headerlink" title="　　2.GLAD"></a>　　2.GLAD</h2><ul><li>进入GLAD官网：<a href="https://glad.dav1d.de/">GLAD下载</a></li><li>Language选C\C++，Profile选core，version根据需要选择（3.3版本及以上），然后GRNERATE，之后选择zip文件下载并解压</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/a5647816217d1437.png" alt="img"></li><li>将include下的.h文件全部拷贝进项目文件夹下的includes下，将src下的glad.c拷贝进项目文件夹下</li><li>然后进入vs，添加源文件-&gt;现有项，将glad.c添加进项目</li><li><img src="https://ftp.bmp.ovh/imgs/2020/03/16650f8004bd5b7f.png" alt="img"></li><li>至此库文件配置完成，接下来测试是否能正常使用OpenGL</li></ul><h2 id="3-测试OpenGL"><a href="#3-测试OpenGL" class="headerlink" title="　　3.测试OpenGL"></a>　　3.测试OpenGL</h2><ul><li><p>创建源文件，首先需要引用glad.h和glfw3.h文件</p></li><li><p>因为使用的是自己添加的文件，这里引用需要使用“ “而非&lt;&gt;，使用” “时，它会自动出现你所添加的目录</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&quot;includes&#x2F;glad.h&quot;#include&quot;includes&#x2F;glfw3.h&quot;#include &lt;iostream&gt;void framebuffer_size_callback(GLFWwindow* window, int width, int height);void processInput(GLFWwindow *window); &#x2F;&#x2F; settings const unsigned int SCR_WIDTH &#x3D; 800;const unsigned int SCR_HEIGHT &#x3D; 600;int main() &#123;    &#x2F;&#x2F; glfw: initialize and configure    &#x2F;&#x2F; ------------------------------    glfwInit();        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);    #ifdef __APPLE__ glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);    &#x2F;&#x2F; uncomment this statement to fix compilation on OS X#endif&#x2F;&#x2F; glfw window creation&#x2F;&#x2F; --------------------GLFWwindow* window &#x3D; glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, &quot;LearnOpenGL&quot;, NULL, NULL);    if (window &#x3D;&#x3D; NULL)    &#123;std::cout &lt;&lt; &quot;Failed to create GLFW window&quot; &lt;&lt; std::endl;         glfwTerminate();         return -1;    &#125;    glfwMakeContextCurrent(window);    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);    &#x2F;&#x2F; glad: load all OpenGL function pointers    &#x2F;&#x2F; ---------------------------------------    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))    &#123;        std::cout &lt;&lt; &quot;Failed to initialize GLAD&quot; &lt;&lt; std::endl; return -1;    &#125;    &#x2F;&#x2F; render loop    &#x2F;&#x2F; -----------    while (!glfwWindowShouldClose(window))    &#123;        &#x2F;&#x2F; input &#x2F;&#x2F; -----        processInput(window);        &#x2F;&#x2F; glfw: swap buffers and poll IO events (keys pressed&#x2F;released, mouse moved etc.)        &#x2F;&#x2F; -------------------------------------------------------------------------------        glfwSwapBuffers(window);        glfwPollEvents();    &#125;    &#x2F;&#x2F; glfw: terminate, clearing all previously allocated GLFW resources.     &#x2F;&#x2F; ------------------------------------------------------------------     glfwTerminate();     return 0; &#125; &#x2F;&#x2F; process all input: query GLFW whether relevant keys are pressed&#x2F;released this frame and react accordingly &#x2F;&#x2F; --------------------------------------------------------------------------------------------------------- void processInput(GLFWwindow *window) &#123;    if(glfwGetKey(window, GLFW_KEY_ESCAPE) &#x3D;&#x3D; GLFW_PRESS)     glfwSetWindowShouldClose(window, true); &#125;&#x2F;&#x2F; glfw: whenever the window size changed (by OS or user resize) this callback function executes &#x2F;&#x2F; --------------------------------------------------------------------------------------------- void framebuffer_size_callback(GLFWwindow* window, int width, int height) &#123;     &#x2F;&#x2F; make sure the viewport matches the new window dimensions; note that width and     &#x2F;&#x2F; height will be significantly larger than specified on retina displays.     glViewport(0, 0, width, height); &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>出现图示窗口即可正常使用OpenGL</p></li><li><p><img src="https://ftp.bmp.ovh/imgs/2020/03/db51f81eec2503b4.png" alt="img"></p></li><li><p>若出现报错：默认库MSVCRTD与……冲突，属性-&gt;链接器-&gt;输入-&gt;忽略特定默认库-&gt;编辑，将MSVCRTD.lib添加进去即可</p></li></ul><h1 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h1><p>最后推荐一个学习OpenGL的网站，教程很舒服，本博客的测试源码也出自此：</p><p><a href="https://learnopengl-cn.github.io/">https://learnopengl-cn.github.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
